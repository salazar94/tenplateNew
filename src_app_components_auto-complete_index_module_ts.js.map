{"version":3,"sources":["./node_modules/ng-zorro-antd/__ivy_ngcc__/fesm2015/ng-zorro-antd-auto-complete.js","./node_modules/rxjs/_esm2015/internal/operators/delay.js","./node_modules/rxjs/_esm2015/internal/util/isDate.js","./src/app/components/auto-complete/basic.ts","./src/app/components/auto-complete/certain-category.ts","./src/app/components/auto-complete/custom.ts","./src/app/components/auto-complete/en.component.ts","./src/app/components/auto-complete/en.html","./src/app/components/auto-complete/index.module.ts","./src/app/components/auto-complete/module.ts","./src/app/components/auto-complete/non-case-sensitive.ts","./src/app/components/auto-complete/options.ts","./src/app/components/auto-complete/uncertain-category.ts","./src/app/components/auto-complete/zh.component.ts","./src/app/components/auto-complete/zh.html"],"names":[],"mappings":"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,gDAAK,EAAE;AAChC,uBAAuB,OAAO,iDAAM,EAAE;AACtC,oBAAoB,OAAO,iDAAM,EAAE;AACnC;AACA,iDAAU;AACV,IAAI,qEAAY;AAChB;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,6DAAiB;AAC9B,iBAAiB,yDAAU;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B,gCAAgC;AAChC;AACA,4BAA4B,yCAAO;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,yDAAS;AACnE;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,2DAAQ,gBAAgB,6DAAU;AACzE,wBAAwB,yDAAM;AAC9B;AACA;AACA,2CAA2C,yDAAM,gBAAgB,sDAAG;AACpE;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,wDAAK;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,2DAAQ;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uEAAuE,mDAAG,qDAAqD,qDAAK;AACpI;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,kBAAkB,uDAAM;AACxB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,gEAAc;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,yDAAS;AAC/B;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,wCAAwC,4DAA4D;AACpG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,gEAAa;AAChC;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,yEAAsB,EAAE,sCAAsC,GAAG,qCAAqC;AACtH,gBAAgB,yEAAsB,EAAE,mCAAmC,GAAG,wCAAwC;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0FAA0F,kDAAkD,+DAAwB,CAAC,qDAAiB,GAAG,+DAAwB,CAAC,0DAAc,GAAG,+DAAwB,CAAC,2DAAuB,GAAG,+DAAwB,CAAC,yFAA8C,MAAM,+DAAwB,CAAC,sDAAQ,MAAM;AAC1Y,oDAAoD,+DAAwB,EAAE,uQAAuQ;AACrV,QAAQ,wDAAiB,kFAAkF,0BAA0B,EAAE,6EAA6E,yBAAyB,EAAE,qFAAqF,gCAAgC,EAAE,yFAAyF,kCAAkC,EAAE;AACne,KAAK,EAAE,WAAW,mCAAmC,kDAAkD,gEAAyB,qCAAqC;AACrK;AACA,KAAK,OAAO,qDAAU,EAAE;AACxB,KAAK,OAAO,0DAAO,EAAE;AACrB,KAAK,OAAO,2DAAgB,EAAE;AAC9B,KAAK,OAAO,yFAAuC,gBAAgB,OAAO,mDAAQ,EAAE,GAAG;AACvF,KAAK,gCAAgC,OAAO,mDAAQ,EAAE,GAAG,OAAO,iDAAM,SAAS,sDAAQ,IAAI;AAC3F;AACA;AACA,sBAAsB,OAAO,gDAAK,EAAE;AACpC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,uDAAY;AAC/C;AACA;AACA;AACA;AACA,4BAA4B,yCAAO;AACnC,wCAAwC,uDAAY;AACpD;AACA,2CAA2C,qDAAkB;AAC7D,4CAA4C,qDAAkB;AAC9D,4CAA4C,qDAAkB;AAC9D;AACA,sCAAsC,4CAAK;AAC3C;AACA,uBAAuB,4CAAK;AAC5B;AACA,4DAA4D,qDAAI,KAAK,0DAAS;AAC9E,SAAS;AACT,gCAAgC,4CAAK;AACrC;AACA,uBAAuB,4CAAK;AAC5B;AACA,4DAA4D,qDAAI,KAAK,0DAAS;AAC9E,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uFAAuF,yDAAS;AAChG;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,kBAAkB,uDAAM;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,4EAA4E,2CAA2C,+DAAwB,CAAC,4DAAwB,GAAG,+DAAwB,CAAC,iDAAa,GAAG,+DAAwB,CAAC,8DAAqB,MAAM,+DAAwB,CAAC,oFAA6B,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","file":"src_app_components_auto-complete_index_module_ts.js","sourcesContent":["import { Directionality, BidiModule } from '@angular/cdk/bidi';\nimport { OverlayConfig, ConnectionPositionPair, Overlay, OverlayModule } from '@angular/cdk/overlay';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { Component, ChangeDetectionStrategy, ViewEncapsulation, Input, EventEmitter, ChangeDetectorRef, ElementRef, Optional, Output, forwardRef, Directive, ViewContainerRef, Inject, NgZone, Host, ContentChildren, ViewChildren, ViewChild, TemplateRef, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, FormsModule } from '@angular/forms';\nimport { NzNoAnimationDirective, NzNoAnimationModule } from 'ng-zorro-antd/core/no-animation';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport { NzInputGroupWhitSuffixOrPrefixDirective, NzInputModule } from 'ng-zorro-antd/input';\nimport { __decorate } from 'tslib';\nimport { scrollIntoView, InputBoolean } from 'ng-zorro-antd/core/util';\nimport { UP_ARROW, DOWN_ARROW, ESCAPE, TAB, ENTER } from '@angular/cdk/keycodes';\nimport { TemplatePortal } from '@angular/cdk/portal';\nimport { Subject, Subscription, defer, merge } from 'rxjs';\nimport { takeUntil, tap, delay, filter, take, switchMap } from 'rxjs/operators';\nimport { slideMotion } from 'ng-zorro-antd/core/animation';\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from 'ng-zorro-antd/core/outlet';\nimport * as ɵngcc2 from '@angular/cdk/overlay';\nimport * as ɵngcc3 from 'ng-zorro-antd/input';\nimport * as ɵngcc4 from '@angular/cdk/bidi';\nimport * as ɵngcc5 from 'ng-zorro-antd/core/no-animation';\nimport * as ɵngcc6 from '@angular/common';\n\nfunction NzAutocompleteOptgroupComponent_ng_container_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r0.nzLabel);\n} }\nconst _c0 = [[[\"nz-auto-option\"]]];\nconst _c1 = [\"nz-auto-option\"];\nconst _c2 = [\"*\"];\nconst _c3 = [\"panel\"];\nconst _c4 = [\"content\"];\nfunction NzAutocompleteComponent_ng_template_0_4_ng_template_0_Template(rf, ctx) { }\nfunction NzAutocompleteComponent_ng_template_0_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, NzAutocompleteComponent_ng_template_0_4_ng_template_0_Template, 0, 0, \"ng-template\");\n} }\nfunction NzAutocompleteComponent_ng_template_0_ng_template_5_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0);\n} }\nfunction NzAutocompleteComponent_ng_template_0_ng_template_7_nz_auto_option_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"nz-auto-option\", 8);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const option_r9 = ctx.$implicit;\n    ɵngcc0.ɵɵproperty(\"nzValue\", option_r9)(\"nzLabel\", option_r9 && option_r9.label ? option_r9.label : option_r9);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", option_r9 && option_r9.label ? option_r9.label : option_r9, \" \");\n} }\nfunction NzAutocompleteComponent_ng_template_0_ng_template_7_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, NzAutocompleteComponent_ng_template_0_ng_template_7_nz_auto_option_0_Template, 2, 3, \"nz-auto-option\", 7);\n} if (rf & 2) {\n    const ctx_r6 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r6.nzDataSource);\n} }\nfunction NzAutocompleteComponent_ng_template_0_Template(rf, ctx) { if (rf & 1) {\n    const _r11 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n    ɵngcc0.ɵɵlistener(\"@slideMotion.done\", function NzAutocompleteComponent_ng_template_0_Template_div_animation_slideMotion_done_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r11); const ctx_r10 = ɵngcc0.ɵɵnextContext(); return ctx_r10.onAnimationEvent($event); });\n    ɵngcc0.ɵɵelementStart(2, \"div\", 2);\n    ɵngcc0.ɵɵelementStart(3, \"div\", 3);\n    ɵngcc0.ɵɵtemplate(4, NzAutocompleteComponent_ng_template_0_4_Template, 1, 0, undefined, 4);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(5, NzAutocompleteComponent_ng_template_0_ng_template_5_Template, 1, 0, \"ng-template\", null, 5, ɵngcc0.ɵɵtemplateRefExtractor);\n    ɵngcc0.ɵɵtemplate(7, NzAutocompleteComponent_ng_template_0_ng_template_7_Template, 1, 1, \"ng-template\", null, 6, ɵngcc0.ɵɵtemplateRefExtractor);\n} if (rf & 2) {\n    const _r3 = ɵngcc0.ɵɵreference(6);\n    const _r5 = ɵngcc0.ɵɵreference(8);\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"ant-select-dropdown-hidden\", !ctx_r0.showPanel)(\"ant-select-dropdown-rtl\", ctx_r0.dir === \"rtl\");\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r0.nzOverlayClassName)(\"ngStyle\", ctx_r0.nzOverlayStyle)(\"nzNoAnimation\", ctx_r0.noAnimation == null ? null : ctx_r0.noAnimation.nzNoAnimation)(\"@slideMotion\", undefined)(\"@.disabled\", ctx_r0.noAnimation == null ? null : ctx_r0.noAnimation.nzNoAnimation);\n    ɵngcc0.ɵɵadvance(4);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.nzDataSource ? _r5 : _r3);\n} }\nclass NzAutocompleteOptgroupComponent {\n    constructor() { }\n}\nNzAutocompleteOptgroupComponent.ɵfac = function NzAutocompleteOptgroupComponent_Factory(t) { return new (t || NzAutocompleteOptgroupComponent)(); };\nNzAutocompleteOptgroupComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: NzAutocompleteOptgroupComponent, selectors: [[\"nz-auto-optgroup\"]], inputs: { nzLabel: \"nzLabel\" }, exportAs: [\"nzAutoOptgroup\"], ngContentSelectors: _c1, decls: 3, vars: 1, consts: [[1, \"ant-select-item\", \"ant-select-item-group\"], [4, \"nzStringTemplateOutlet\"]], template: function NzAutocompleteOptgroupComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c0);\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵtemplate(1, NzAutocompleteOptgroupComponent_ng_container_1_Template, 2, 1, \"ng-container\", 1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(2);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx.nzLabel);\n    } }, directives: [ɵngcc1.NzStringTemplateOutletDirective], encapsulation: 2, changeDetection: 0 });\nNzAutocompleteOptgroupComponent.ctorParameters = () => [];\nNzAutocompleteOptgroupComponent.propDecorators = {\n    nzLabel: [{ type: Input }]\n};\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzOptionSelectionChange {\n    constructor(source, isUserInput = false) {\n        this.source = source;\n        this.isUserInput = isUserInput;\n    }\n}\nclass NzAutocompleteOptionComponent {\n    constructor(changeDetectorRef, element, nzAutocompleteOptgroupComponent) {\n        this.changeDetectorRef = changeDetectorRef;\n        this.element = element;\n        this.nzAutocompleteOptgroupComponent = nzAutocompleteOptgroupComponent;\n        this.nzDisabled = false;\n        this.selectionChange = new EventEmitter();\n        this.mouseEntered = new EventEmitter();\n        this.active = false;\n        this.selected = false;\n    }\n    select(emit = true) {\n        this.selected = true;\n        this.changeDetectorRef.markForCheck();\n        if (emit) {\n            this.emitSelectionChangeEvent();\n        }\n    }\n    onMouseEnter() {\n        this.mouseEntered.emit(this);\n    }\n    deselect() {\n        this.selected = false;\n        this.changeDetectorRef.markForCheck();\n        this.emitSelectionChangeEvent();\n    }\n    /** Git display label */\n    getLabel() {\n        return this.nzLabel || this.nzValue.toString();\n    }\n    /** Set active (only styles) */\n    setActiveStyles() {\n        if (!this.active) {\n            this.active = true;\n            this.changeDetectorRef.markForCheck();\n        }\n    }\n    /** Unset active (only styles) */\n    setInactiveStyles() {\n        if (this.active) {\n            this.active = false;\n            this.changeDetectorRef.markForCheck();\n        }\n    }\n    scrollIntoViewIfNeeded() {\n        scrollIntoView(this.element.nativeElement);\n    }\n    selectViaInteraction() {\n        if (!this.nzDisabled) {\n            this.selected = !this.selected;\n            if (this.selected) {\n                this.setActiveStyles();\n            }\n            else {\n                this.setInactiveStyles();\n            }\n            this.emitSelectionChangeEvent(true);\n            this.changeDetectorRef.markForCheck();\n        }\n    }\n    emitSelectionChangeEvent(isUserInput = false) {\n        this.selectionChange.emit(new NzOptionSelectionChange(this, isUserInput));\n    }\n}\nNzAutocompleteOptionComponent.ɵfac = function NzAutocompleteOptionComponent_Factory(t) { return new (t || NzAutocompleteOptionComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(NzAutocompleteOptgroupComponent, 8)); };\nNzAutocompleteOptionComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: NzAutocompleteOptionComponent, selectors: [[\"nz-auto-option\"]], hostAttrs: [\"role\", \"menuitem\", 1, \"ant-select-item\", \"ant-select-item-option\"], hostVars: 10, hostBindings: function NzAutocompleteOptionComponent_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function NzAutocompleteOptionComponent_click_HostBindingHandler() { return ctx.selectViaInteraction(); })(\"mouseenter\", function NzAutocompleteOptionComponent_mouseenter_HostBindingHandler() { return ctx.onMouseEnter(); })(\"mousedown\", function NzAutocompleteOptionComponent_mousedown_HostBindingHandler($event) { return $event.preventDefault(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-selected\", ctx.selected.toString())(\"aria-disabled\", ctx.nzDisabled.toString());\n        ɵngcc0.ɵɵclassProp(\"ant-select-item-option-grouped\", ctx.nzAutocompleteOptgroupComponent)(\"ant-select-item-option-selected\", ctx.selected)(\"ant-select-item-option-active\", ctx.active)(\"ant-select-item-option-disabled\", ctx.nzDisabled);\n    } }, inputs: { nzDisabled: \"nzDisabled\", nzValue: \"nzValue\", nzLabel: \"nzLabel\" }, outputs: { selectionChange: \"selectionChange\", mouseEntered: \"mouseEntered\" }, exportAs: [\"nzAutoOption\"], ngContentSelectors: _c2, decls: 2, vars: 0, consts: [[1, \"ant-select-item-option-content\"]], template: function NzAutocompleteOptionComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n    } }, encapsulation: 2, changeDetection: 0 });\nNzAutocompleteOptionComponent.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: ElementRef },\n    { type: NzAutocompleteOptgroupComponent, decorators: [{ type: Optional }] }\n];\nNzAutocompleteOptionComponent.propDecorators = {\n    nzValue: [{ type: Input }],\n    nzLabel: [{ type: Input }],\n    nzDisabled: [{ type: Input }],\n    selectionChange: [{ type: Output }],\n    mouseEntered: [{ type: Output }]\n};\n__decorate([\n    InputBoolean()\n], NzAutocompleteOptionComponent.prototype, \"nzDisabled\", void 0);\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nconst NZ_AUTOCOMPLETE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => NzAutocompleteTriggerDirective),\n    multi: true\n};\nfunction getNzAutocompleteMissingPanelError() {\n    return Error('Attempting to open an undefined instance of `nz-autocomplete`. ' +\n        'Make sure that the id passed to the `nzAutocomplete` is correct and that ' +\n        \"you're attempting to open it after the ngAfterContentInit hook.\");\n}\nclass NzAutocompleteTriggerDirective {\n    constructor(elementRef, overlay, viewContainerRef, nzInputGroupWhitSuffixOrPrefixDirective, document) {\n        this.elementRef = elementRef;\n        this.overlay = overlay;\n        this.viewContainerRef = viewContainerRef;\n        this.nzInputGroupWhitSuffixOrPrefixDirective = nzInputGroupWhitSuffixOrPrefixDirective;\n        this.document = document;\n        this.onChange = () => { };\n        this.onTouched = () => { };\n        this.panelOpen = false;\n        this.destroy$ = new Subject();\n        this.overlayRef = null;\n        this.portal = null;\n        this.previousValue = null;\n    }\n    /** Current active option */\n    get activeOption() {\n        if (this.nzAutocomplete && this.nzAutocomplete.options.length) {\n            return this.nzAutocomplete.activeItem;\n        }\n        else {\n            return null;\n        }\n    }\n    ngAfterViewInit() {\n        if (this.nzAutocomplete) {\n            this.nzAutocomplete.animationStateChange.pipe(takeUntil(this.destroy$)).subscribe(event => {\n                if (event.toState === 'void') {\n                    if (this.overlayRef) {\n                        this.overlayRef.dispose();\n                        this.overlayRef = null;\n                    }\n                }\n            });\n        }\n    }\n    ngOnDestroy() {\n        this.destroyPanel();\n    }\n    writeValue(value) {\n        Promise.resolve(null).then(() => this.setTriggerValue(value));\n    }\n    registerOnChange(fn) {\n        this.onChange = fn;\n    }\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    setDisabledState(isDisabled) {\n        const element = this.elementRef.nativeElement;\n        element.disabled = isDisabled;\n        this.closePanel();\n    }\n    openPanel() {\n        this.previousValue = this.elementRef.nativeElement.value;\n        this.attachOverlay();\n        this.updateStatus();\n    }\n    closePanel() {\n        if (this.panelOpen) {\n            this.nzAutocomplete.isOpen = this.panelOpen = false;\n            if (this.overlayRef && this.overlayRef.hasAttached()) {\n                this.overlayRef.detach();\n                this.selectionChangeSubscription.unsubscribe();\n                this.overlayOutsideClickSubscription.unsubscribe();\n                this.optionsChangeSubscription.unsubscribe();\n                this.portal = null;\n            }\n        }\n    }\n    handleKeydown(event) {\n        const keyCode = event.keyCode;\n        const isArrowKey = keyCode === UP_ARROW || keyCode === DOWN_ARROW;\n        if (keyCode === ESCAPE) {\n            event.preventDefault();\n        }\n        if (this.panelOpen && (keyCode === ESCAPE || keyCode === TAB)) {\n            // Reset value when tab / ESC close\n            if (this.activeOption && this.activeOption.getLabel() !== this.previousValue) {\n                this.setTriggerValue(this.previousValue);\n            }\n            this.closePanel();\n        }\n        else if (this.panelOpen && keyCode === ENTER) {\n            if (this.nzAutocomplete.showPanel) {\n                event.preventDefault();\n                if (this.activeOption) {\n                    this.activeOption.selectViaInteraction();\n                }\n                else {\n                    this.closePanel();\n                }\n            }\n        }\n        else if (this.panelOpen && isArrowKey && this.nzAutocomplete.showPanel) {\n            event.stopPropagation();\n            event.preventDefault();\n            if (keyCode === UP_ARROW) {\n                this.nzAutocomplete.setPreviousItemActive();\n            }\n            else {\n                this.nzAutocomplete.setNextItemActive();\n            }\n            if (this.activeOption) {\n                this.activeOption.scrollIntoViewIfNeeded();\n            }\n            this.doBackfill();\n        }\n    }\n    handleInput(event) {\n        const target = event.target;\n        const document = this.document;\n        let value = target.value;\n        if (target.type === 'number') {\n            value = value === '' ? null : parseFloat(value);\n        }\n        if (this.previousValue !== value) {\n            this.previousValue = value;\n            this.onChange(value);\n            if (this.canOpen() && document.activeElement === event.target) {\n                this.openPanel();\n            }\n        }\n    }\n    handleFocus() {\n        if (this.canOpen()) {\n            this.openPanel();\n        }\n    }\n    handleBlur() {\n        this.onTouched();\n    }\n    /**\n     * Subscription data source changes event\n     */\n    subscribeOptionsChange() {\n        const optionChanges = this.nzAutocomplete.options.changes.pipe(tap(() => this.positionStrategy.reapplyLastPosition()), delay(0));\n        return optionChanges.subscribe(() => {\n            this.resetActiveItem();\n            if (this.panelOpen) {\n                this.overlayRef.updatePosition();\n            }\n        });\n    }\n    /**\n     * Subscription option changes event and set the value\n     */\n    subscribeSelectionChange() {\n        return this.nzAutocomplete.selectionChange.subscribe((option) => {\n            this.setValueAndClose(option);\n        });\n    }\n    subscribeOverlayOutsideClick() {\n        return this.overlayRef.outsidePointerEvents()\n            .pipe(filter((e) => !this.elementRef.nativeElement.contains(e.target)))\n            .subscribe(() => {\n            this.closePanel();\n        });\n    }\n    attachOverlay() {\n        if (!this.nzAutocomplete) {\n            throw getNzAutocompleteMissingPanelError();\n        }\n        if (!this.portal && this.nzAutocomplete.template) {\n            this.portal = new TemplatePortal(this.nzAutocomplete.template, this.viewContainerRef);\n        }\n        if (!this.overlayRef) {\n            this.overlayRef = this.overlay.create(this.getOverlayConfig());\n        }\n        if (this.overlayRef && !this.overlayRef.hasAttached()) {\n            this.overlayRef.attach(this.portal);\n            this.selectionChangeSubscription = this.subscribeSelectionChange();\n            this.optionsChangeSubscription = this.subscribeOptionsChange();\n            this.overlayOutsideClickSubscription = this.subscribeOverlayOutsideClick();\n            this.overlayRef\n                .detachments()\n                .pipe(takeUntil(this.destroy$))\n                .subscribe(() => {\n                this.closePanel();\n            });\n        }\n        this.nzAutocomplete.isOpen = this.panelOpen = true;\n    }\n    updateStatus() {\n        if (this.overlayRef) {\n            this.overlayRef.updateSize({ width: this.nzAutocomplete.nzWidth || this.getHostWidth() });\n        }\n        this.nzAutocomplete.setVisibility();\n        this.resetActiveItem();\n        if (this.activeOption) {\n            this.activeOption.scrollIntoViewIfNeeded();\n        }\n    }\n    destroyPanel() {\n        if (this.overlayRef) {\n            this.closePanel();\n        }\n    }\n    getOverlayConfig() {\n        return new OverlayConfig({\n            positionStrategy: this.getOverlayPosition(),\n            disposeOnNavigation: true,\n            scrollStrategy: this.overlay.scrollStrategies.reposition(),\n            // default host element width\n            width: this.nzAutocomplete.nzWidth || this.getHostWidth()\n        });\n    }\n    getConnectedElement() {\n        return this.nzInputGroupWhitSuffixOrPrefixDirective\n            ? this.nzInputGroupWhitSuffixOrPrefixDirective.elementRef\n            : this.elementRef;\n    }\n    getHostWidth() {\n        return this.getConnectedElement().nativeElement.getBoundingClientRect().width;\n    }\n    getOverlayPosition() {\n        const positions = [\n            new ConnectionPositionPair({ originX: 'start', originY: 'bottom' }, { overlayX: 'start', overlayY: 'top' }),\n            new ConnectionPositionPair({ originX: 'start', originY: 'top' }, { overlayX: 'start', overlayY: 'bottom' })\n        ];\n        this.positionStrategy = this.overlay\n            .position()\n            .flexibleConnectedTo(this.getConnectedElement())\n            .withFlexibleDimensions(false)\n            .withPush(false)\n            .withPositions(positions)\n            .withTransformOriginOn('.ant-select-dropdown');\n        return this.positionStrategy;\n    }\n    resetActiveItem() {\n        const index = this.nzAutocomplete.getOptionIndex(this.previousValue);\n        this.nzAutocomplete.clearSelectedOptions(null, true);\n        if (index !== -1) {\n            this.nzAutocomplete.setActiveItem(index);\n            this.nzAutocomplete.activeItem.select(false);\n        }\n        else {\n            this.nzAutocomplete.setActiveItem(this.nzAutocomplete.nzDefaultActiveFirstOption ? 0 : -1);\n        }\n    }\n    setValueAndClose(option) {\n        const value = option.nzValue;\n        this.setTriggerValue(option.getLabel());\n        this.onChange(value);\n        this.elementRef.nativeElement.focus();\n        this.closePanel();\n    }\n    setTriggerValue(value) {\n        const option = this.nzAutocomplete.getOption(value);\n        const displayValue = option ? option.getLabel() : value;\n        this.elementRef.nativeElement.value = displayValue != null ? displayValue : '';\n        if (!this.nzAutocomplete.nzBackfill) {\n            this.previousValue = displayValue;\n        }\n    }\n    doBackfill() {\n        if (this.nzAutocomplete.nzBackfill && this.nzAutocomplete.activeItem) {\n            this.setTriggerValue(this.nzAutocomplete.activeItem.getLabel());\n        }\n    }\n    canOpen() {\n        const element = this.elementRef.nativeElement;\n        return !element.readOnly && !element.disabled;\n    }\n}\nNzAutocompleteTriggerDirective.ɵfac = function NzAutocompleteTriggerDirective_Factory(t) { return new (t || NzAutocompleteTriggerDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Overlay), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.NzInputGroupWhitSuffixOrPrefixDirective, 8), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8)); };\nNzAutocompleteTriggerDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: NzAutocompleteTriggerDirective, selectors: [[\"input\", \"nzAutocomplete\", \"\"], [\"textarea\", \"nzAutocomplete\", \"\"]], hostAttrs: [\"autocomplete\", \"off\", \"aria-autocomplete\", \"list\"], hostBindings: function NzAutocompleteTriggerDirective_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focusin\", function NzAutocompleteTriggerDirective_focusin_HostBindingHandler() { return ctx.handleFocus(); })(\"blur\", function NzAutocompleteTriggerDirective_blur_HostBindingHandler() { return ctx.handleBlur(); })(\"input\", function NzAutocompleteTriggerDirective_input_HostBindingHandler($event) { return ctx.handleInput($event); })(\"keydown\", function NzAutocompleteTriggerDirective_keydown_HostBindingHandler($event) { return ctx.handleKeydown($event); });\n    } }, inputs: { nzAutocomplete: \"nzAutocomplete\" }, exportAs: [\"nzAutocompleteTrigger\"], features: [ɵngcc0.ɵɵProvidersFeature([NZ_AUTOCOMPLETE_VALUE_ACCESSOR])] });\nNzAutocompleteTriggerDirective.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Overlay },\n    { type: ViewContainerRef },\n    { type: NzInputGroupWhitSuffixOrPrefixDirective, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] }\n];\nNzAutocompleteTriggerDirective.propDecorators = {\n    nzAutocomplete: [{ type: Input }]\n};\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzAutocompleteComponent {\n    constructor(changeDetectorRef, ngZone, directionality, noAnimation) {\n        this.changeDetectorRef = changeDetectorRef;\n        this.ngZone = ngZone;\n        this.directionality = directionality;\n        this.noAnimation = noAnimation;\n        this.nzOverlayClassName = '';\n        this.nzOverlayStyle = {};\n        this.nzDefaultActiveFirstOption = true;\n        this.nzBackfill = false;\n        this.compareWith = (o1, o2) => o1 === o2;\n        this.selectionChange = new EventEmitter();\n        this.showPanel = true;\n        this.isOpen = false;\n        this.activeItem = null;\n        this.dir = 'ltr';\n        this.destroy$ = new Subject();\n        this.animationStateChange = new EventEmitter();\n        this.activeItemIndex = -1;\n        this.selectionChangeSubscription = Subscription.EMPTY;\n        this.optionMouseEnterSubscription = Subscription.EMPTY;\n        this.dataSourceChangeSubscription = Subscription.EMPTY;\n        /** Options changes listener */\n        this.optionSelectionChanges = defer(() => {\n            if (this.options) {\n                return merge(...this.options.map(option => option.selectionChange));\n            }\n            return this.ngZone.onStable.asObservable().pipe(take(1), switchMap(() => this.optionSelectionChanges));\n        });\n        this.optionMouseEnter = defer(() => {\n            if (this.options) {\n                return merge(...this.options.map(option => option.mouseEntered));\n            }\n            return this.ngZone.onStable.asObservable().pipe(take(1), switchMap(() => this.optionMouseEnter));\n        });\n    }\n    /**\n     * Options accessor, its source may be content or dataSource\n     */\n    get options() {\n        // first dataSource\n        if (this.nzDataSource) {\n            return this.fromDataSourceOptions;\n        }\n        else {\n            return this.fromContentOptions;\n        }\n    }\n    ngOnInit() {\n        var _a;\n        (_a = this.directionality.change) === null || _a === void 0 ? void 0 : _a.pipe(takeUntil(this.destroy$)).subscribe((direction) => {\n            this.dir = direction;\n            this.changeDetectorRef.detectChanges();\n        });\n        this.dir = this.directionality.value;\n    }\n    onAnimationEvent(event) {\n        this.animationStateChange.emit(event);\n    }\n    ngAfterContentInit() {\n        if (!this.nzDataSource) {\n            this.optionsInit();\n        }\n    }\n    ngAfterViewInit() {\n        if (this.nzDataSource) {\n            this.optionsInit();\n        }\n    }\n    ngOnDestroy() {\n        this.dataSourceChangeSubscription.unsubscribe();\n        this.selectionChangeSubscription.unsubscribe();\n        this.optionMouseEnterSubscription.unsubscribe();\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n    setVisibility() {\n        this.showPanel = !!this.options.length;\n        this.changeDetectorRef.markForCheck();\n    }\n    setActiveItem(index) {\n        const activeItem = this.options.get(index);\n        if (activeItem && !activeItem.active) {\n            this.activeItem = activeItem;\n            this.activeItemIndex = index;\n            this.clearSelectedOptions(this.activeItem);\n            this.activeItem.setActiveStyles();\n        }\n        else {\n            this.activeItem = null;\n            this.activeItemIndex = -1;\n            this.clearSelectedOptions();\n        }\n        this.changeDetectorRef.markForCheck();\n    }\n    setNextItemActive() {\n        const nextIndex = this.activeItemIndex + 1 <= this.options.length - 1 ? this.activeItemIndex + 1 : 0;\n        this.setActiveItem(nextIndex);\n    }\n    setPreviousItemActive() {\n        const previousIndex = this.activeItemIndex - 1 < 0 ? this.options.length - 1 : this.activeItemIndex - 1;\n        this.setActiveItem(previousIndex);\n    }\n    getOptionIndex(value) {\n        return this.options.reduce((result, current, index) => result === -1 ? (this.compareWith(value, current.nzValue) ? index : -1) : result, -1);\n    }\n    getOption(value) {\n        return this.options.find(item => this.compareWith(value, item.nzValue)) || null;\n    }\n    optionsInit() {\n        this.setVisibility();\n        this.subscribeOptionChanges();\n        const changes = this.nzDataSource ? this.fromDataSourceOptions.changes : this.fromContentOptions.changes;\n        // async\n        this.dataSourceChangeSubscription = changes.subscribe(e => {\n            if (!e.dirty && this.isOpen) {\n                setTimeout(() => this.setVisibility());\n            }\n            this.subscribeOptionChanges();\n        });\n    }\n    /**\n     * Clear the status of options\n     */\n    clearSelectedOptions(skip, deselect = false) {\n        this.options.forEach(option => {\n            if (option !== skip) {\n                if (deselect) {\n                    option.deselect();\n                }\n                option.setInactiveStyles();\n            }\n        });\n    }\n    subscribeOptionChanges() {\n        this.selectionChangeSubscription.unsubscribe();\n        this.selectionChangeSubscription = this.optionSelectionChanges\n            .pipe(filter((event) => event.isUserInput))\n            .subscribe((event) => {\n            event.source.select();\n            event.source.setActiveStyles();\n            this.activeItem = event.source;\n            this.activeItemIndex = this.getOptionIndex(this.activeItem.nzValue);\n            this.clearSelectedOptions(event.source, true);\n            this.selectionChange.emit(event.source);\n        });\n        this.optionMouseEnterSubscription.unsubscribe();\n        this.optionMouseEnterSubscription = this.optionMouseEnter.subscribe((event) => {\n            event.setActiveStyles();\n            this.activeItem = event;\n            this.activeItemIndex = this.getOptionIndex(this.activeItem.nzValue);\n            this.clearSelectedOptions(event);\n        });\n    }\n}\nNzAutocompleteComponent.ɵfac = function NzAutocompleteComponent_Factory(t) { return new (t || NzAutocompleteComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc5.NzNoAnimationDirective, 9)); };\nNzAutocompleteComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: NzAutocompleteComponent, selectors: [[\"nz-autocomplete\"]], contentQueries: function NzAutocompleteComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, NzAutocompleteOptionComponent, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.fromContentOptions = _t);\n    } }, viewQuery: function NzAutocompleteComponent_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(TemplateRef, 5);\n        ɵngcc0.ɵɵviewQuery(_c3, 5);\n        ɵngcc0.ɵɵviewQuery(_c4, 5);\n        ɵngcc0.ɵɵviewQuery(NzAutocompleteOptionComponent, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.template = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.panel = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.content = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.fromDataSourceOptions = _t);\n    } }, inputs: { nzOverlayClassName: \"nzOverlayClassName\", nzOverlayStyle: \"nzOverlayStyle\", nzDefaultActiveFirstOption: \"nzDefaultActiveFirstOption\", nzBackfill: \"nzBackfill\", compareWith: \"compareWith\", nzWidth: \"nzWidth\", nzDataSource: \"nzDataSource\" }, outputs: { selectionChange: \"selectionChange\" }, exportAs: [\"nzAutocomplete\"], ngContentSelectors: _c2, decls: 1, vars: 0, consts: [[1, \"ant-select-dropdown\", \"ant-select-dropdown-placement-bottomLeft\", 3, \"ngClass\", \"ngStyle\", \"nzNoAnimation\"], [\"panel\", \"\"], [2, \"max-height\", \"256px\", \"overflow-y\", \"auto\", \"overflow-anchor\", \"none\"], [2, \"display\", \"flex\", \"flex-direction\", \"column\"], [4, \"ngTemplateOutlet\"], [\"contentTemplate\", \"\"], [\"optionsTemplate\", \"\"], [3, \"nzValue\", \"nzLabel\", 4, \"ngFor\", \"ngForOf\"], [3, \"nzValue\", \"nzLabel\"]], template: function NzAutocompleteComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, NzAutocompleteComponent_ng_template_0_Template, 9, 10, \"ng-template\");\n    } }, directives: [ɵngcc6.NgClass, ɵngcc6.NgStyle, ɵngcc5.NzNoAnimationDirective, ɵngcc6.NgTemplateOutlet, ɵngcc6.NgForOf, NzAutocompleteOptionComponent], encapsulation: 2, data: { animation: [slideMotion] }, changeDetection: 0 });\nNzAutocompleteComponent.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: NgZone },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NzNoAnimationDirective, decorators: [{ type: Host }, { type: Optional }] }\n];\nNzAutocompleteComponent.propDecorators = {\n    nzWidth: [{ type: Input }],\n    nzOverlayClassName: [{ type: Input }],\n    nzOverlayStyle: [{ type: Input }],\n    nzDefaultActiveFirstOption: [{ type: Input }],\n    nzBackfill: [{ type: Input }],\n    compareWith: [{ type: Input }],\n    nzDataSource: [{ type: Input }],\n    selectionChange: [{ type: Output }],\n    fromContentOptions: [{ type: ContentChildren, args: [NzAutocompleteOptionComponent, { descendants: true },] }],\n    fromDataSourceOptions: [{ type: ViewChildren, args: [NzAutocompleteOptionComponent,] }],\n    template: [{ type: ViewChild, args: [TemplateRef, { static: false },] }],\n    panel: [{ type: ViewChild, args: ['panel', { static: false },] }],\n    content: [{ type: ViewChild, args: ['content', { static: false },] }]\n};\n__decorate([\n    InputBoolean()\n], NzAutocompleteComponent.prototype, \"nzDefaultActiveFirstOption\", void 0);\n__decorate([\n    InputBoolean()\n], NzAutocompleteComponent.prototype, \"nzBackfill\", void 0);\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NzAutocompleteOptgroupComponent, [{\n        type: Component,\n        args: [{\n                selector: 'nz-auto-optgroup',\n                exportAs: 'nzAutoOptgroup',\n                preserveWhitespaces: false,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                template: `\n    <div class=\"ant-select-item ant-select-item-group\">\n      <ng-container *nzStringTemplateOutlet=\"nzLabel\">{{ nzLabel }}</ng-container>\n    </div>\n    <ng-content select=\"nz-auto-option\"></ng-content>\n  `\n            }]\n    }], function () { return []; }, { nzLabel: [{\n            type: Input\n        }] }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NzAutocompleteOptionComponent, [{\n        type: Component,\n        args: [{\n                selector: 'nz-auto-option',\n                exportAs: 'nzAutoOption',\n                preserveWhitespaces: false,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                template: `\n    <div class=\"ant-select-item-option-content\">\n      <ng-content></ng-content>\n    </div>\n  `,\n                host: {\n                    role: 'menuitem',\n                    class: 'ant-select-item ant-select-item-option',\n                    '[class.ant-select-item-option-grouped]': 'nzAutocompleteOptgroupComponent',\n                    '[class.ant-select-item-option-selected]': 'selected',\n                    '[class.ant-select-item-option-active]': 'active',\n                    '[class.ant-select-item-option-disabled]': 'nzDisabled',\n                    '[attr.aria-selected]': 'selected.toString()',\n                    '[attr.aria-disabled]': 'nzDisabled.toString()',\n                    '(click)': 'selectViaInteraction()',\n                    '(mouseenter)': 'onMouseEnter()',\n                    '(mousedown)': '$event.preventDefault()'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: NzAutocompleteOptgroupComponent, decorators: [{\n                type: Optional\n            }] }]; }, { nzDisabled: [{\n            type: Input\n        }], selectionChange: [{\n            type: Output\n        }], mouseEntered: [{\n            type: Output\n        }], nzValue: [{\n            type: Input\n        }], nzLabel: [{\n            type: Input\n        }] }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NzAutocompleteTriggerDirective, [{\n        type: Directive,\n        args: [{\n                selector: `input[nzAutocomplete], textarea[nzAutocomplete]`,\n                exportAs: 'nzAutocompleteTrigger',\n                providers: [NZ_AUTOCOMPLETE_VALUE_ACCESSOR],\n                host: {\n                    autocomplete: 'off',\n                    'aria-autocomplete': 'list',\n                    '(focusin)': 'handleFocus()',\n                    '(blur)': 'handleBlur()',\n                    '(input)': 'handleInput($event)',\n                    '(keydown)': 'handleKeydown($event)'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc2.Overlay }, { type: ɵngcc0.ViewContainerRef }, { type: ɵngcc3.NzInputGroupWhitSuffixOrPrefixDirective, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, { nzAutocomplete: [{\n            type: Input\n        }] }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NzAutocompleteComponent, [{\n        type: Component,\n        args: [{\n                selector: 'nz-autocomplete',\n                exportAs: 'nzAutocomplete',\n                preserveWhitespaces: false,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                template: `\n    <ng-template>\n      <div\n        #panel\n        class=\"ant-select-dropdown ant-select-dropdown-placement-bottomLeft\"\n        [class.ant-select-dropdown-hidden]=\"!showPanel\"\n        [class.ant-select-dropdown-rtl]=\"dir === 'rtl'\"\n        [ngClass]=\"nzOverlayClassName\"\n        [ngStyle]=\"nzOverlayStyle\"\n        [nzNoAnimation]=\"noAnimation?.nzNoAnimation\"\n        @slideMotion\n        (@slideMotion.done)=\"onAnimationEvent($event)\"\n        [@.disabled]=\"noAnimation?.nzNoAnimation\"\n      >\n        <div style=\"max-height: 256px; overflow-y: auto; overflow-anchor: none;\">\n          <div style=\"display: flex; flex-direction: column;\">\n            <ng-template *ngTemplateOutlet=\"nzDataSource ? optionsTemplate : contentTemplate\"></ng-template>\n          </div>\n        </div>\n      </div>\n      <ng-template #contentTemplate>\n        <ng-content></ng-content>\n      </ng-template>\n      <ng-template #optionsTemplate>\n        <nz-auto-option\n          *ngFor=\"let option of nzDataSource!\"\n          [nzValue]=\"option\"\n          [nzLabel]=\"option && $any(option).label ? $any(option).label : $any(option)\"\n        >\n          {{ option && $any(option).label ? $any(option).label : $any(option) }}\n        </nz-auto-option>\n      </ng-template>\n    </ng-template>\n  `,\n                animations: [slideMotion]\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc4.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc5.NzNoAnimationDirective, decorators: [{\n                type: Host\n            }, {\n                type: Optional\n            }] }]; }, { nzOverlayClassName: [{\n            type: Input\n        }], nzOverlayStyle: [{\n            type: Input\n        }], nzDefaultActiveFirstOption: [{\n            type: Input\n        }], nzBackfill: [{\n            type: Input\n        }], compareWith: [{\n            type: Input\n        }], selectionChange: [{\n            type: Output\n        }], nzWidth: [{\n            type: Input\n        }], nzDataSource: [{\n            type: Input\n        }], fromContentOptions: [{\n            type: ContentChildren,\n            args: [NzAutocompleteOptionComponent, { descendants: true }]\n        }], fromDataSourceOptions: [{\n            type: ViewChildren,\n            args: [NzAutocompleteOptionComponent]\n        }], template: [{\n            type: ViewChild,\n            args: [TemplateRef, { static: false }]\n        }], panel: [{\n            type: ViewChild,\n            args: ['panel', { static: false }]\n        }], content: [{\n            type: ViewChild,\n            args: ['content', { static: false }]\n        }] }); })();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzAutocompleteModule {\n}\nNzAutocompleteModule.ɵfac = function NzAutocompleteModule_Factory(t) { return new (t || NzAutocompleteModule)(); };\nNzAutocompleteModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: NzAutocompleteModule });\nNzAutocompleteModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[BidiModule, CommonModule, OverlayModule, FormsModule, NzOutletModule, NzNoAnimationModule, NzInputModule]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NzAutocompleteModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [\n                    NzAutocompleteComponent,\n                    NzAutocompleteOptionComponent,\n                    NzAutocompleteTriggerDirective,\n                    NzAutocompleteOptgroupComponent\n                ],\n                exports: [\n                    NzAutocompleteComponent,\n                    NzAutocompleteOptionComponent,\n                    NzAutocompleteTriggerDirective,\n                    NzAutocompleteOptgroupComponent\n                ],\n                imports: [BidiModule, CommonModule, OverlayModule, FormsModule, NzOutletModule, NzNoAnimationModule, NzInputModule]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NzAutocompleteModule, { declarations: function () { return [NzAutocompleteComponent, NzAutocompleteOptionComponent, NzAutocompleteTriggerDirective, NzAutocompleteOptgroupComponent]; }, imports: function () { return [BidiModule, CommonModule, OverlayModule, FormsModule, NzOutletModule, NzNoAnimationModule, NzInputModule]; }, exports: function () { return [NzAutocompleteComponent, NzAutocompleteOptionComponent, NzAutocompleteTriggerDirective, NzAutocompleteOptgroupComponent]; } }); })();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NZ_AUTOCOMPLETE_VALUE_ACCESSOR, NzAutocompleteComponent, NzAutocompleteModule, NzAutocompleteOptgroupComponent, NzAutocompleteOptionComponent, NzAutocompleteTriggerDirective, NzOptionSelectionChange, getNzAutocompleteMissingPanelError };\n\n//# sourceMappingURL=ng-zorro-antd-auto-complete.js.map","import { async } from '../scheduler/async';\nimport { isDate } from '../util/isDate';\nimport { Subscriber } from '../Subscriber';\nimport { Notification } from '../Notification';\nexport function delay(delay, scheduler = async) {\n    const absoluteDelay = isDate(delay);\n    const delayFor = absoluteDelay ? (+delay - scheduler.now()) : Math.abs(delay);\n    return (source) => source.lift(new DelayOperator(delayFor, scheduler));\n}\nclass DelayOperator {\n    constructor(delay, scheduler) {\n        this.delay = delay;\n        this.scheduler = scheduler;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new DelaySubscriber(subscriber, this.delay, this.scheduler));\n    }\n}\nclass DelaySubscriber extends Subscriber {\n    constructor(destination, delay, scheduler) {\n        super(destination);\n        this.delay = delay;\n        this.scheduler = scheduler;\n        this.queue = [];\n        this.active = false;\n        this.errored = false;\n    }\n    static dispatch(state) {\n        const source = state.source;\n        const queue = source.queue;\n        const scheduler = state.scheduler;\n        const destination = state.destination;\n        while (queue.length > 0 && (queue[0].time - scheduler.now()) <= 0) {\n            queue.shift().notification.observe(destination);\n        }\n        if (queue.length > 0) {\n            const delay = Math.max(0, queue[0].time - scheduler.now());\n            this.schedule(state, delay);\n        }\n        else {\n            this.unsubscribe();\n            source.active = false;\n        }\n    }\n    _schedule(scheduler) {\n        this.active = true;\n        const destination = this.destination;\n        destination.add(scheduler.schedule(DelaySubscriber.dispatch, this.delay, {\n            source: this, destination: this.destination, scheduler: scheduler\n        }));\n    }\n    scheduleNotification(notification) {\n        if (this.errored === true) {\n            return;\n        }\n        const scheduler = this.scheduler;\n        const message = new DelayMessage(scheduler.now() + this.delay, notification);\n        this.queue.push(message);\n        if (this.active === false) {\n            this._schedule(scheduler);\n        }\n    }\n    _next(value) {\n        this.scheduleNotification(Notification.createNext(value));\n    }\n    _error(err) {\n        this.errored = true;\n        this.queue = [];\n        this.destination.error(err);\n        this.unsubscribe();\n    }\n    _complete() {\n        this.scheduleNotification(Notification.createComplete());\n        this.unsubscribe();\n    }\n}\nclass DelayMessage {\n    constructor(time, notification) {\n        this.time = time;\n        this.notification = notification;\n    }\n}\n//# sourceMappingURL=delay.js.map","export function isDate(value) {\n    return value instanceof Date && !isNaN(+value);\n}\n//# sourceMappingURL=isDate.js.map","import { Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'nz-demo-auto-complete-basic',\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <div class=\"example-input\">\n      <input placeholder=\"input here\" nz-input [(ngModel)]=\"inputValue\" (input)=\"onInput($event.target?.value)\" [nzAutocomplete]=\"auto\" />\n      <nz-autocomplete [nzDataSource]=\"options\" nzBackfill #auto></nz-autocomplete>\n    </div>\n  `\n})\nexport class NzDemoAutoCompleteBasicComponent {\n  inputValue: string;\n  options: string[] = [];\n\n  onInput(value: string): void {\n    this.options = value ? [value, value + value, value + value + value] : [];\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\n\nexport interface AutocompleteOptionGroups {\n  title: string;\n  count?: number;\n  children?: AutocompleteOptionGroups[];\n}\n\n@Component({\n  selector: 'nz-demo-auto-complete-certain-category',\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <div class=\"example-input\">\n      <nz-input-group nzSize=\"large\" [nzSuffix]=\"suffixIcon\">\n        <input placeholder=\"input here\" nz-input [(ngModel)]=\"inputValue\" (ngModelChange)=\"onChange($event)\" [nzAutocomplete]=\"auto\" />\n      </nz-input-group>\n      <ng-template #suffixIcon>\n        <i nz-icon nzType=\"search\"></i>\n      </ng-template>\n      <nz-autocomplete #auto>\n        <nz-auto-optgroup *ngFor=\"let group of optionGroups\" [nzLabel]=\"groupTitle\">\n          <ng-template #groupTitle>\n            <span\n              >{{ group.title }}\n              <a class=\"more-link\" href=\"https://www.google.com/search?q=ng+zorro\" target=\"_blank\">更多</a>\n            </span>\n          </ng-template>\n          <nz-auto-option *ngFor=\"let option of group.children\" [nzLabel]=\"option.title\" [nzValue]=\"option.title\">\n            {{ option.title }}\n            <span class=\"certain-search-item-count\">{{ option.count }} 人 关注</span>\n          </nz-auto-option>\n        </nz-auto-optgroup>\n      </nz-autocomplete>\n    </div>\n  `,\n  styles: [\n    `\n      .certain-search-item-count {\n        position: absolute;\n        color: #999;\n        right: 16px;\n      }\n\n      .more-link {\n        float: right;\n      }\n    `\n  ]\n})\nexport class NzDemoAutoCompleteCertainCategoryComponent implements OnInit {\n  inputValue: string;\n  optionGroups: AutocompleteOptionGroups[];\n\n  constructor() {}\n\n  onChange(value: string): void {\n    console.log(value);\n  }\n\n  ngOnInit(): void {\n    setTimeout(() => {\n      this.optionGroups = [\n        {\n          title: '话题',\n          children: [\n            {\n              title: 'AntDesign',\n              count: 10000\n            },\n            {\n              title: 'AntDesign UI',\n              count: 10600\n            }\n          ]\n        },\n        {\n          title: '问题',\n          children: [\n            {\n              title: 'AntDesign UI 有多好',\n              count: 60100\n            },\n            {\n              title: 'AntDesign 是啥',\n              count: 30010\n            }\n          ]\n        },\n        {\n          title: '文章',\n          children: [\n            {\n              title: 'AntDesign 是一个设计语言',\n              count: 100000\n            }\n          ]\n        }\n      ];\n    }, 1000);\n  }\n}\n","import { Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'nz-demo-auto-complete-custom',\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <div class=\"example-input\">\n      <textarea\n        placeholder=\"input here\"\n        nz-input\n        row=\"4\"\n        [(ngModel)]=\"inputValue\"\n        (input)=\"onInput($event.target?.value)\"\n        [nzAutocomplete]=\"auto\"\n      ></textarea>\n      <nz-autocomplete #auto>\n        <nz-auto-option *ngFor=\"let option of options\" [nzValue]=\"option\">{{ option }}</nz-auto-option>\n      </nz-autocomplete>\n    </div>\n  `\n})\nexport class NzDemoAutoCompleteCustomComponent {\n  inputValue: string;\n  options: string[] = [];\n\n  onInput(value: string): void {\n    this.options = value ? [value, value + value, value + value + value] : [];\n  }\n}\n","import { Component, QueryList, ViewChildren } from '@angular/core';\nimport { NzCodeBoxComponent } from '../../shared/components/codebox/codebox.component';\n\n@Component({\n  selector     : 'nz-demo-auto-complete',\n  preserveWhitespaces: false,\n  templateUrl  : './en.html'\n})\nexport class NzDemoAutoCompleteEnComponent {\n  expanded = false;\n  @ViewChildren(NzCodeBoxComponent) codeBoxes: QueryList<NzCodeBoxComponent>;\n\n  goLink(link: string): void {\n    if (window) {\n      window.location.hash = link;\n    }\n  }\n\n  expandAllCode(): void {\n    this.expanded = !this.expanded;\n    this.codeBoxes.forEach(code => {\n      code.nzExpanded = this.expanded;\n      code.expandCode(this.expanded);\n      code.check();\n    });\n  }\n\n}\n","<article>\n<nz-affix class=\"toc-affix\" [nzOffsetTop]=\"16\">\n    <nz-anchor [nzAffix]=\"false\" nzShowInkInFixed (nzClick)=\"goLink($event)\">\n        <nz-link nzHref=\"#components-auto-complete-demo-basic\" nzTitle=\"Basic Usage\"></nz-link><nz-link nzHref=\"#components-auto-complete-demo-options\" nzTitle=\"Customized\"></nz-link><nz-link nzHref=\"#components-auto-complete-demo-custom\" nzTitle=\"Customize Input Component\"></nz-link><nz-link nzHref=\"#components-auto-complete-demo-non-case-sensitive\" nzTitle=\"Non-case-sensitive AutoComplete\"></nz-link><nz-link nzHref=\"#components-auto-complete-demo-certain-category\" nzTitle=\"Lookup-Patterns - Certain Category\"></nz-link><nz-link nzHref=\"#components-auto-complete-demo-uncertain-category\" nzTitle=\"Lookup-Patterns - Uncertain Category\"></nz-link><nz-link nzHref=\"#api\" nzTitle=\"API\"></nz-link>\n    </nz-anchor>\n</nz-affix><section class=\"markdown\">\n\t<h1>Autocomplete<span class=\"subtitle\"></span><span class=\"widget\"></span>\n\t<a class=\"edit-button\" href=\"https://github.com/NG-ZORRO/ng-zorro-antd/edit/master/components/auto-complete/doc/index.en-US.md\" target=\"_blank\" rel=\"noopener noreferrer\">\n\t\t<i nz-icon nzType=\"edit\"></i></a>\n</h1>\n\t<section class=\"markdown\" ngNonBindable>\n\t\t<p>Autocomplete function of input field.</p>\n<h2 id=\"when-to-use\"><span>When To Use</span><a onclick=\"window.location.hash = 'when-to-use'\" class=\"anchor\">#</a></h2><p>When there is a need for autocomplete functionality.</p>\n<pre class=\"language-ts\"><code><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> NzAutocompleteModule <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'ng-zorro-antd/auto-complete'</span><span class=\"token punctuation\">;</span></code></pre>\n\n\t</section>\n\t\n\t<h2>\n\t\t<span>Examples</span>\n\t\t<i nz-icon nzType=\"appstore\" class=\"code-box-expand-trigger\" nz-tooltip nzTooltipTitle=\"Expand All Code\" (click)=\"expandAllCode()\"></i>\n\t</h2>\n</section><div nz-row [nzGutter]=\"16\">\n\t<div nz-col [nzXl]=\"12\" [nzSpan]=\"24\">\n\t\t<nz-code-box\n  nzTitle=\"Basic Usage\"\n  [nzId]=\"'components-auto-complete-demo-basic'\"\n  nzSelector=\"nz-demo-auto-complete-basic\"\n  [nzLink]=\"'components-auto-complete-demo-basic'\"\n  nzGenerateCommand=\"ng g ng-zorro-antd:auto-complete-basic <name>\"\n  nzComponentName=\"NzDemoAutoCompleteBasicComponent\"\n  nzIframeSource=\"null\"\n  nzIframeHeight=\"null\"\n  [nzHref]=\"'https://github.com/NG-ZORRO/ng-zorro-antd/edit/master/components/auto-complete/demo/basic.md'\">\n\t<nz-demo-auto-complete-basic demo></nz-demo-auto-complete-basic>\n\t<div intro ngNonBindable>\n\t\t<p>Basic Usage, set <code>nzDataSource</code>  of <code>nz-autocomplete</code> with dataSource property.</p>\n\n\t</div>\n</nz-code-box>\n<nz-code-box\n  nzTitle=\"Customize Input Component\"\n  [nzId]=\"'components-auto-complete-demo-custom'\"\n  nzSelector=\"nz-demo-auto-complete-custom\"\n  [nzLink]=\"'components-auto-complete-demo-custom'\"\n  nzGenerateCommand=\"ng g ng-zorro-antd:auto-complete-custom <name>\"\n  nzComponentName=\"NzDemoAutoCompleteCustomComponent\"\n  nzIframeSource=\"null\"\n  nzIframeHeight=\"null\"\n  [nzHref]=\"'https://github.com/NG-ZORRO/ng-zorro-antd/edit/master/components/auto-complete/demo/custom.md'\">\n\t<nz-demo-auto-complete-custom demo></nz-demo-auto-complete-custom>\n\t<div intro ngNonBindable>\n\t\t<p>Customize Input Component</p>\n\n\t</div>\n</nz-code-box>\n<nz-code-box\n  nzTitle=\"Lookup-Patterns - Certain Category\"\n  [nzId]=\"'components-auto-complete-demo-certain-category'\"\n  nzSelector=\"nz-demo-auto-complete-certain-category\"\n  [nzLink]=\"'components-auto-complete-demo-certain-category'\"\n  nzGenerateCommand=\"ng g ng-zorro-antd:auto-complete-certain-category <name>\"\n  nzComponentName=\"NzDemoAutoCompleteCertainCategoryComponent\"\n  nzIframeSource=\"null\"\n  nzIframeHeight=\"null\"\n  [nzHref]=\"'https://github.com/NG-ZORRO/ng-zorro-antd/edit/master/components/auto-complete/demo/certain-category.md'\">\n\t<nz-demo-auto-complete-certain-category demo></nz-demo-auto-complete-certain-category>\n\t<div intro ngNonBindable>\n\t\t<p>Demonstration of <a href=\"https://ant.design/docs/spec/reaction#Lookup-Patterns\">Lookup Patterns: Certain Category</a>.</p>\n\n\t</div>\n</nz-code-box>\n\n\t</div>\n\t<div nz-col [nzXl]=\"12\" [nzSpan]=\"24\">\n\t\t<nz-code-box\n  nzTitle=\"Customized\"\n  [nzId]=\"'components-auto-complete-demo-options'\"\n  nzSelector=\"nz-demo-auto-complete-options\"\n  [nzLink]=\"'components-auto-complete-demo-options'\"\n  nzGenerateCommand=\"ng g ng-zorro-antd:auto-complete-options <name>\"\n  nzComponentName=\"NzDemoAutoCompleteOptionsComponent\"\n  nzIframeSource=\"null\"\n  nzIframeHeight=\"null\"\n  [nzHref]=\"'https://github.com/NG-ZORRO/ng-zorro-antd/edit/master/components/auto-complete/demo/options.md'\">\n\t<nz-demo-auto-complete-options demo></nz-demo-auto-complete-options>\n\t<div intro ngNonBindable>\n\t\t<p>You could pass <code>nz-auto-option</code> as Content of <code>nz-autocomplete</code>, instead of using nzDataSource`.</p>\n\n\t</div>\n</nz-code-box>\n<nz-code-box\n  nzTitle=\"Non-case-sensitive AutoComplete\"\n  [nzId]=\"'components-auto-complete-demo-non-case-sensitive'\"\n  nzSelector=\"nz-demo-auto-complete-non-case-sensitive\"\n  [nzLink]=\"'components-auto-complete-demo-non-case-sensitive'\"\n  nzGenerateCommand=\"ng g ng-zorro-antd:auto-complete-non-case-sensitive <name>\"\n  nzComponentName=\"NzDemoAutoCompleteNonCaseSensitiveComponent\"\n  nzIframeSource=\"null\"\n  nzIframeHeight=\"null\"\n  [nzHref]=\"'https://github.com/NG-ZORRO/ng-zorro-antd/edit/master/components/auto-complete/demo/non-case-sensitive.md'\">\n\t<nz-demo-auto-complete-non-case-sensitive demo></nz-demo-auto-complete-non-case-sensitive>\n\t<div intro ngNonBindable>\n\t\t<p>A non-case-sensitive AutoComplete</p>\n\n\t</div>\n</nz-code-box>\n<nz-code-box\n  nzTitle=\"Lookup-Patterns - Uncertain Category\"\n  [nzId]=\"'components-auto-complete-demo-uncertain-category'\"\n  nzSelector=\"nz-demo-auto-complete-uncertain-category\"\n  [nzLink]=\"'components-auto-complete-demo-uncertain-category'\"\n  nzGenerateCommand=\"ng g ng-zorro-antd:auto-complete-uncertain-category <name>\"\n  nzComponentName=\"NzDemoAutoCompleteUncertainCategoryComponent\"\n  nzIframeSource=\"null\"\n  nzIframeHeight=\"null\"\n  [nzHref]=\"'https://github.com/NG-ZORRO/ng-zorro-antd/edit/master/components/auto-complete/demo/uncertain-category.md'\">\n\t<nz-demo-auto-complete-uncertain-category demo></nz-demo-auto-complete-uncertain-category>\n\t<div intro ngNonBindable>\n\t\t<p>Demonstration of <a href=\"https://ant.design/docs/spec/reaction#Lookup-Patterns\">Lookup Patterns: Uncertain Category</a>.</p>\n\n\t</div>\n</nz-code-box>\n\n\t</div>\n</div>\n<section class=\"markdown api-container\" ngNonBindable><h2 id=\"api\"><span>API</span><a onclick=\"window.location.hash = 'api'\" class=\"anchor\">#</a></h2><pre class=\"language-html\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">nz-input</span> <span class=\"token attr-name\">[(ngModel)]</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>value<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">[nzAutocomplete]</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>auto<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>nz-autocomplete</span> <span class=\"token attr-name\">[nzDataSource]</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>[<span class=\"token punctuation\">'</span>12345<span class=\"token punctuation\">'</span>, <span class=\"token punctuation\">'</span>23456<span class=\"token punctuation\">'</span>, <span class=\"token punctuation\">'</span>34567<span class=\"token punctuation\">'</span>]<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">#auto</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>nz-autocomplete</span><span class=\"token punctuation\">></span></span></code></pre>\n<pre class=\"language-html\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">nz-input</span> <span class=\"token attr-name\">[(ngModel)]</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>value<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">[nzAutocomplete]</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>auto<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>nz-autocomplete</span> <span class=\"token attr-name\">#auto</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>nz-auto-option</span> <span class=\"token attr-name\">[nzValue]</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">'</span>12345<span class=\"token punctuation\">'</span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>12345<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>nz-auto-option</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>nz-auto-option</span> <span class=\"token attr-name\">[nzValue]</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">'</span>23456<span class=\"token punctuation\">'</span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>23456<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>nz-auto-option</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>nz-auto-option</span> <span class=\"token attr-name\">[nzValue]</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">'</span>34567<span class=\"token punctuation\">'</span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>34567<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>nz-auto-option</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>nz-autocomplete</span><span class=\"token punctuation\">></span></span></code></pre>\n<h3 id=\"[nzautocomplete]\"><span>[nzAutocomplete]</span><label class=\"api-type-label directive\">directive</label><a onclick=\"window.location.hash = '[nzautocomplete]'\" class=\"anchor\">#</a></h3><table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Description</th>\n<th>Type</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>[nzAutocomplete]</code></td>\n<td>used to bind <code>nzAutocomplete</code> components</td>\n<td><code>NzAutocompleteComponent</code></td>\n<td>-</td>\n</tr>\n</tbody></table>\n<h3 id=\"nz-autocomplete\"><span>nz-autocomplete</span><label class=\"api-type-label component\">component</label><a onclick=\"window.location.hash = 'nz-autocomplete'\" class=\"anchor\">#</a></h3><table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Description</th>\n<th>Type</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>[nzBackfill]</code></td>\n<td>backfill selected item the input when using keyboard</td>\n<td><code>boolean</code></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>[nzDataSource]</code></td>\n<td>Data source for autocomplete</td>\n<td><code>AutocompleteDataSource</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>[nzDefaultActiveFirstOption]</code></td>\n<td>Whether active first option by default</td>\n<td><code>boolean</code></td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td><code>[nzWidth]</code></td>\n<td>Custom width, unit px</td>\n<td><code>number</code></td>\n<td>trigger element width</td>\n</tr>\n<tr>\n<td><code>[nzOverlayClassName]</code></td>\n<td>Class name of the dropdown root element</td>\n<td><code>string</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>[nzOverlayStyle]</code></td>\n<td>Style of the dropdown root element</td>\n<td><code>object</code></td>\n<td>-</td>\n</tr>\n</tbody></table>\n<h3 id=\"nz-auto-option\"><span>nz-auto-option</span><label class=\"api-type-label component\">component</label><a onclick=\"window.location.hash = 'nz-auto-option'\" class=\"anchor\">#</a></h3><table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Description</th>\n<th>Type</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>[nzValue]</code></td>\n<td>bind ngModel of the trigger element</td>\n<td><code>any</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>[nzLabel]</code></td>\n<td>display value of the trigger element</td>\n<td><code>string</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>[nzDisabled]</code></td>\n<td>disabled option</td>\n<td><code>boolean</code></td>\n<td><code>false</code></td>\n</tr>\n</tbody></table>\n</section></article>","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { DemoComponentsShareModule } from '../demo-components-share/demo-components-share.module';\nimport { moduleList } from './module';\n\nimport { NzDemoAutoCompleteBasicComponent } from './basic';\nimport { NzDemoAutoCompleteCertainCategoryComponent } from './certain-category';\nimport { NzDemoAutoCompleteCustomComponent } from './custom';\nimport { NzDemoAutoCompleteNonCaseSensitiveComponent } from './non-case-sensitive';\nimport { NzDemoAutoCompleteOptionsComponent } from './options';\nimport { NzDemoAutoCompleteUncertainCategoryComponent } from './uncertain-category';\nimport { NzDemoAutoCompleteZhComponent } from './zh.component';\nimport { NzDemoAutoCompleteEnComponent } from './en.component';\n\n\n@NgModule({\n  imports     : [\n    DemoComponentsShareModule,\n    ...moduleList,\n    RouterModule.forChild([\n      { path: 'en', component: NzDemoAutoCompleteEnComponent },\n      { path: 'zh', component: NzDemoAutoCompleteZhComponent }\n    ])\n  ],\n  declarations: [\n\t\tNzDemoAutoCompleteBasicComponent,\n\t\tNzDemoAutoCompleteCertainCategoryComponent,\n\t\tNzDemoAutoCompleteCustomComponent,\n\t\tNzDemoAutoCompleteNonCaseSensitiveComponent,\n\t\tNzDemoAutoCompleteOptionsComponent,\n\t\tNzDemoAutoCompleteUncertainCategoryComponent,\n\t\tNzDemoAutoCompleteZhComponent,\n\t\tNzDemoAutoCompleteEnComponent,\n\n  ]\n})\nexport class NzDemoAutoCompleteModule {\n\n}\n","import { NzAutocompleteModule } from 'ng-zorro-antd/auto-complete';\nimport { NzInputModule } from 'ng-zorro-antd/input';\nimport { NzButtonModule } from 'ng-zorro-antd/button';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\n\nexport const moduleList = [ NzAutocompleteModule, NzInputModule, NzButtonModule, NzIconModule ];\n","import { Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'nz-demo-auto-complete-non-case-sensitive',\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <div class=\"example-input\">\n      <input placeholder=\"try to type \\`b\\`\" nz-input [(ngModel)]=\"inputValue\" (ngModelChange)=\"onChange($event)\" [nzAutocomplete]=\"auto\" />\n      <nz-autocomplete [nzDataSource]=\"filteredOptions\" #auto></nz-autocomplete>\n    </div>\n  `\n})\nexport class NzDemoAutoCompleteNonCaseSensitiveComponent {\n  inputValue: string;\n  filteredOptions: string[] = [];\n  options = ['Burns Bay Road', 'Downing Street', 'Wall Street'];\n\n  constructor() {\n    this.filteredOptions = this.options;\n  }\n\n  onChange(value: string): void {\n    this.filteredOptions = this.options.filter(option => option.toLowerCase().indexOf(value.toLowerCase()) !== -1);\n  }\n}\n","import { Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'nz-demo-auto-complete-options',\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <div class=\"example-input\">\n      <input placeholder=\"input here\" nz-input [(ngModel)]=\"inputValue\" (input)=\"onInput($event)\" [nzAutocomplete]=\"auto\" />\n      <nz-autocomplete #auto>\n        <nz-auto-option *ngFor=\"let option of options\" [nzValue]=\"option\">{{ option }}</nz-auto-option>\n      </nz-autocomplete>\n    </div>\n  `\n})\nexport class NzDemoAutoCompleteOptionsComponent {\n  inputValue: string;\n  options: string[] = [];\n\n  onInput(e: Event): void {\n    const value = (e.target as HTMLInputElement).value;\n    if (!value || value.indexOf('@') >= 0) {\n      this.options = [];\n    } else {\n      this.options = ['gmail.com', '163.com', 'qq.com'].map(domain => `${value}@${domain}`);\n    }\n  }\n}\n","import { Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'nz-demo-auto-complete-uncertain-category',\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <div class=\"example-input\">\n      <nz-input-group nzSearch nzSize=\"large\" [nzAddOnAfter]=\"suffixIconButton\">\n        <input placeholder=\"input here\" nz-input [(ngModel)]=\"inputValue\" (input)=\"onChange($event)\" [nzAutocomplete]=\"auto\" />\n      </nz-input-group>\n      <ng-template #suffixIconButton>\n        <button nz-button nzType=\"primary\" nzSize=\"large\" nzSearch>\n          <i nz-icon nzType=\"search\" nzTheme=\"outline\"></i>\n        </button>\n      </ng-template>\n      <nz-autocomplete #auto>\n        <nz-auto-option class=\"global-search-item\" *ngFor=\"let option of options\" [nzValue]=\"option.category\">\n          Found {{ option.value }} on\n          <a\n            class=\"global-search-item-desc\"\n            [href]=\"'https://s.taobao.com/search?q=' + option.value\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            {{ option.category }}\n          </a>\n          <span class=\"global-search-item-count\">{{ option.count }} results</span>\n        </nz-auto-option>\n      </nz-autocomplete>\n    </div>\n  `,\n  styles: [\n    `\n      .global-search-item {\n        display: flex;\n      }\n\n      .global-search-item-desc {\n        flex: auto;\n        text-overflow: ellipsis;\n        overflow: hidden;\n      }\n\n      .global-search-item-count {\n        flex: none;\n      }\n    `\n  ]\n})\nexport class NzDemoAutoCompleteUncertainCategoryComponent {\n  inputValue: string;\n  options: Array<{ value: string; category: string; count: number }> = [];\n\n  onChange(e: Event): void {\n    const value = (e.target as HTMLInputElement).value;\n    this.options = new Array(this.getRandomInt(5, 15))\n      .join('.')\n      .split('.')\n      .map((_item, idx) => ({\n        value,\n        category: `${value}${idx}`,\n        count: this.getRandomInt(200, 100)\n      }));\n  }\n\n  private getRandomInt(max: number, min: number = 0): number {\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  }\n}\n","import { Component, QueryList, ViewChildren } from '@angular/core';\nimport { NzCodeBoxComponent } from '../../shared/components/codebox/codebox.component';\n\n@Component({\n  selector     : 'nz-demo-auto-complete',\n  preserveWhitespaces: false,\n  templateUrl  : './zh.html'\n})\nexport class NzDemoAutoCompleteZhComponent {\n  expanded = false;\n  @ViewChildren(NzCodeBoxComponent) codeBoxes: QueryList<NzCodeBoxComponent>;\n\n  goLink(link: string): void {\n    if (window) {\n      window.location.hash = link;\n    }\n  }\n\n  expandAllCode(): void {\n    this.expanded = !this.expanded;\n    this.codeBoxes.forEach(code => {\n      code.nzExpanded = this.expanded;\n      code.expandCode(this.expanded);\n      code.check();\n    });\n  }\n\n}\n","<article>\n<nz-affix class=\"toc-affix\" [nzOffsetTop]=\"16\">\n    <nz-anchor [nzAffix]=\"false\" nzShowInkInFixed (nzClick)=\"goLink($event)\">\n        <nz-link nzHref=\"#components-auto-complete-demo-basic\" nzTitle=\"基本使用\"></nz-link><nz-link nzHref=\"#components-auto-complete-demo-options\" nzTitle=\"自定义选项\"></nz-link><nz-link nzHref=\"#components-auto-complete-demo-custom\" nzTitle=\"自定义输入组件\"></nz-link><nz-link nzHref=\"#components-auto-complete-demo-non-case-sensitive\" nzTitle=\"不区分大小写\"></nz-link><nz-link nzHref=\"#components-auto-complete-demo-certain-category\" nzTitle=\"查询模式 - 确定类目\"></nz-link><nz-link nzHref=\"#components-auto-complete-demo-uncertain-category\" nzTitle=\"查询模式 - 不确定类目\"></nz-link><nz-link nzHref=\"#api\" nzTitle=\"API\"></nz-link>\n    </nz-anchor>\n</nz-affix><section class=\"markdown\">\n\t<h1>Autocomplete<span class=\"subtitle\">自动完成</span><span class=\"widget\"></span>\n\t<a class=\"edit-button\" href=\"https://github.com/NG-ZORRO/ng-zorro-antd/edit/master/components/auto-complete/doc/index.zh-CN.md\" target=\"_blank\" rel=\"noopener noreferrer\">\n\t\t<i nz-icon nzType=\"edit\"></i></a>\n</h1>\n\t<section class=\"markdown\" ngNonBindable>\n\t\t<p>输入框自动完成功能。</p>\n<h2 id=\"何时使用\"><span>何时使用</span><a onclick=\"window.location.hash = '何时使用'\" class=\"anchor\">#</a></h2><p>需要自动完成时。</p>\n<pre class=\"language-ts\"><code><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> NzAutocompleteModule <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'ng-zorro-antd/auto-complete'</span><span class=\"token punctuation\">;</span></code></pre>\n\n\t</section>\n\t\n\t<h2>\n\t\t<span>代码演示</span>\n\t\t<i nz-icon nzType=\"appstore\" class=\"code-box-expand-trigger\" nz-tooltip nzTooltipTitle=\"展开全部代码\" (click)=\"expandAllCode()\"></i>\n\t</h2>\n</section><div nz-row [nzGutter]=\"16\">\n\t<div nz-col [nzXl]=\"12\" [nzSpan]=\"24\">\n\t\t<nz-code-box\n  nzTitle=\"基本使用\"\n  [nzId]=\"'components-auto-complete-demo-basic'\"\n  nzSelector=\"nz-demo-auto-complete-basic\"\n  [nzLink]=\"'components-auto-complete-demo-basic'\"\n  nzGenerateCommand=\"ng g ng-zorro-antd:auto-complete-basic <name>\"\n  nzComponentName=\"NzDemoAutoCompleteBasicComponent\"\n  nzIframeSource=\"null\"\n  nzIframeHeight=\"null\"\n  [nzHref]=\"'https://github.com/NG-ZORRO/ng-zorro-antd/edit/master/components/auto-complete/demo/basic.md'\">\n\t<nz-demo-auto-complete-basic demo></nz-demo-auto-complete-basic>\n\t<div intro ngNonBindable>\n\t\t<p>基本使用。通过 <code>nzDataSource</code> 设置自动完成的数据源</p>\n\n\t</div>\n</nz-code-box>\n<nz-code-box\n  nzTitle=\"自定义输入组件\"\n  [nzId]=\"'components-auto-complete-demo-custom'\"\n  nzSelector=\"nz-demo-auto-complete-custom\"\n  [nzLink]=\"'components-auto-complete-demo-custom'\"\n  nzGenerateCommand=\"ng g ng-zorro-antd:auto-complete-custom <name>\"\n  nzComponentName=\"NzDemoAutoCompleteCustomComponent\"\n  nzIframeSource=\"null\"\n  nzIframeHeight=\"null\"\n  [nzHref]=\"'https://github.com/NG-ZORRO/ng-zorro-antd/edit/master/components/auto-complete/demo/custom.md'\">\n\t<nz-demo-auto-complete-custom demo></nz-demo-auto-complete-custom>\n\t<div intro ngNonBindable>\n\t\t<p>自定义输入组件。</p>\n\n\t</div>\n</nz-code-box>\n<nz-code-box\n  nzTitle=\"查询模式 - 确定类目\"\n  [nzId]=\"'components-auto-complete-demo-certain-category'\"\n  nzSelector=\"nz-demo-auto-complete-certain-category\"\n  [nzLink]=\"'components-auto-complete-demo-certain-category'\"\n  nzGenerateCommand=\"ng g ng-zorro-antd:auto-complete-certain-category <name>\"\n  nzComponentName=\"NzDemoAutoCompleteCertainCategoryComponent\"\n  nzIframeSource=\"null\"\n  nzIframeHeight=\"null\"\n  [nzHref]=\"'https://github.com/NG-ZORRO/ng-zorro-antd/edit/master/components/auto-complete/demo/certain-category.md'\">\n\t<nz-demo-auto-complete-certain-category demo></nz-demo-auto-complete-certain-category>\n\t<div intro ngNonBindable>\n\t\t<p><a href=\"https://ant.design/docs/spec/reaction#Lookup-Patterns\">查询模式: 确定类目</a> 示例。</p>\n\n\t</div>\n</nz-code-box>\n\n\t</div>\n\t<div nz-col [nzXl]=\"12\" [nzSpan]=\"24\">\n\t\t<nz-code-box\n  nzTitle=\"自定义选项\"\n  [nzId]=\"'components-auto-complete-demo-options'\"\n  nzSelector=\"nz-demo-auto-complete-options\"\n  [nzLink]=\"'components-auto-complete-demo-options'\"\n  nzGenerateCommand=\"ng g ng-zorro-antd:auto-complete-options <name>\"\n  nzComponentName=\"NzDemoAutoCompleteOptionsComponent\"\n  nzIframeSource=\"null\"\n  nzIframeHeight=\"null\"\n  [nzHref]=\"'https://github.com/NG-ZORRO/ng-zorro-antd/edit/master/components/auto-complete/demo/options.md'\">\n\t<nz-demo-auto-complete-options demo></nz-demo-auto-complete-options>\n\t<div intro ngNonBindable>\n\t\t<p>也可以直接传 <code>nz-auto-option</code> 作为 <code>nz-autocomplete</code> 的 Content，而非使用 <code>nzDataSource</code>。</p>\n\n\t</div>\n</nz-code-box>\n<nz-code-box\n  nzTitle=\"不区分大小写\"\n  [nzId]=\"'components-auto-complete-demo-non-case-sensitive'\"\n  nzSelector=\"nz-demo-auto-complete-non-case-sensitive\"\n  [nzLink]=\"'components-auto-complete-demo-non-case-sensitive'\"\n  nzGenerateCommand=\"ng g ng-zorro-antd:auto-complete-non-case-sensitive <name>\"\n  nzComponentName=\"NzDemoAutoCompleteNonCaseSensitiveComponent\"\n  nzIframeSource=\"null\"\n  nzIframeHeight=\"null\"\n  [nzHref]=\"'https://github.com/NG-ZORRO/ng-zorro-antd/edit/master/components/auto-complete/demo/non-case-sensitive.md'\">\n\t<nz-demo-auto-complete-non-case-sensitive demo></nz-demo-auto-complete-non-case-sensitive>\n\t<div intro ngNonBindable>\n\t\t<p>不区分大小写的 AutoComplete</p>\n\n\t</div>\n</nz-code-box>\n<nz-code-box\n  nzTitle=\"查询模式 - 不确定类目\"\n  [nzId]=\"'components-auto-complete-demo-uncertain-category'\"\n  nzSelector=\"nz-demo-auto-complete-uncertain-category\"\n  [nzLink]=\"'components-auto-complete-demo-uncertain-category'\"\n  nzGenerateCommand=\"ng g ng-zorro-antd:auto-complete-uncertain-category <name>\"\n  nzComponentName=\"NzDemoAutoCompleteUncertainCategoryComponent\"\n  nzIframeSource=\"null\"\n  nzIframeHeight=\"null\"\n  [nzHref]=\"'https://github.com/NG-ZORRO/ng-zorro-antd/edit/master/components/auto-complete/demo/uncertain-category.md'\">\n\t<nz-demo-auto-complete-uncertain-category demo></nz-demo-auto-complete-uncertain-category>\n\t<div intro ngNonBindable>\n\t\t<p><a href=\"https://ant.design/docs/spec/reaction#Lookup-Patterns\">查询模式: 不确定类目</a> 示例。</p>\n\n\t</div>\n</nz-code-box>\n\n\t</div>\n</div>\n<section class=\"markdown api-container\" ngNonBindable><h2 id=\"api\"><span>API</span><a onclick=\"window.location.hash = 'api'\" class=\"anchor\">#</a></h2><pre class=\"language-html\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">nz-input</span> <span class=\"token attr-name\">[(ngModel)]</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>value<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">[nzAutocomplete]</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>auto<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>nz-autocomplete</span> <span class=\"token attr-name\">[nzDataSource]</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>[<span class=\"token punctuation\">'</span>12345<span class=\"token punctuation\">'</span>, <span class=\"token punctuation\">'</span>23456<span class=\"token punctuation\">'</span>, <span class=\"token punctuation\">'</span>34567<span class=\"token punctuation\">'</span>]<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">#auto</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>nz-autocomplete</span><span class=\"token punctuation\">></span></span></code></pre>\n<pre class=\"language-html\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">nz-input</span> <span class=\"token attr-name\">[(ngModel)]</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>value<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">[nzAutocomplete]</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>auto<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>nz-autocomplete</span> <span class=\"token attr-name\">#auto</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>nz-auto-option</span> <span class=\"token attr-name\">[nzValue]</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">'</span>12345<span class=\"token punctuation\">'</span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>12345<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>nz-auto-option</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>nz-auto-option</span> <span class=\"token attr-name\">[nzValue]</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">'</span>23456<span class=\"token punctuation\">'</span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>23456<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>nz-auto-option</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>nz-auto-option</span> <span class=\"token attr-name\">[nzValue]</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">'</span>34567<span class=\"token punctuation\">'</span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>34567<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>nz-auto-option</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>nz-autocomplete</span><span class=\"token punctuation\">></span></span></code></pre>\n<h3 id=\"[nzautocomplete]\"><span>[nzAutocomplete]</span><label class=\"api-type-label directive\">directive</label><a onclick=\"window.location.hash = '[nzautocomplete]'\" class=\"anchor\">#</a></h3><table>\n<thead>\n<tr>\n<th>属性</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>[nzAutocomplete]</code></td>\n<td>用于绑定 nzAutocomplete 组件</td>\n<td><code>NzAutocompleteComponent</code></td>\n<td>-</td>\n</tr>\n</tbody></table>\n<h3 id=\"nz-autocomplete\"><span>nz-autocomplete</span><label class=\"api-type-label component\">component</label><a onclick=\"window.location.hash = 'nz-autocomplete'\" class=\"anchor\">#</a></h3><table>\n<thead>\n<tr>\n<th>属性</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>[nzBackfill]</code></td>\n<td>使用键盘选择选项的时候把选中项回填到输入框中</td>\n<td><code>boolean</code></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>[nzDataSource]</code></td>\n<td>自动完成的数据源</td>\n<td><code>AutocompleteDataSource</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>[nzDefaultActiveFirstOption]</code></td>\n<td>是否默认高亮第一个选项。</td>\n<td><code>boolean</code></td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td><code>[nzWidth]</code></td>\n<td>自定义宽度单位 px</td>\n<td><code>number</code></td>\n<td>触发元素宽度</td>\n</tr>\n<tr>\n<td><code>[nzOverlayClassName]</code></td>\n<td>下拉根元素的类名称</td>\n<td><code>string</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>[nzOverlayStyle]</code></td>\n<td>下拉根元素的样式</td>\n<td><code>object</code></td>\n<td>-</td>\n</tr>\n</tbody></table>\n<h3 id=\"nz-auto-option\"><span>nz-auto-option</span><label class=\"api-type-label component\">component</label><a onclick=\"window.location.hash = 'nz-auto-option'\" class=\"anchor\">#</a></h3><table>\n<thead>\n<tr>\n<th>属性</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>[nzValue]</code></td>\n<td>绑定到触发元素 ngModel 的值</td>\n<td><code>any</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>[nzLabel]</code></td>\n<td>填入触发元素显示的值</td>\n<td><code>string</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>[nzDisabled]</code></td>\n<td>禁用选项</td>\n<td><code>boolean</code></td>\n<td><code>false</code></td>\n</tr>\n</tbody></table>\n</section></article>"],"sourceRoot":"webpack:///"}