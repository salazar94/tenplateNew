{"version":3,"sources":["./node_modules/ng-zorro-antd/__ivy_ngcc__/fesm2015/ng-zorro-antd-tag.js","./node_modules/ngx-quill/__ivy_ngcc__/fesm2015/ngx-quill.js","./src/app/apps/apps-routing.module.ts","./src/app/apps/apps.module.ts","./src/app/apps/chat/chat.component.html","./src/app/apps/chat/chat.component.ts","./src/app/apps/e-commerce/orders-list/orders-list.component.html","./src/app/apps/e-commerce/orders-list/orders-list.component.ts","./src/app/apps/e-commerce/product/product.component.ts","./src/app/apps/e-commerce/product/product.component.html","./src/app/apps/e-commerce/products-list/products-list.component.html","./src/app/apps/e-commerce/products-list/products-list.component.ts","./src/app/apps/file-manager/file-manager.component.html","./src/app/apps/file-manager/file-manager.component.ts","./src/app/apps/mail/mail.component.html","./src/app/apps/mail/mail.component.ts","./src/app/apps/projects/project-details/project-details.component.html","./src/app/apps/projects/project-details/project-details.component.ts","./src/app/apps/projects/project-list/project-list.component.html","./src/app/apps/projects/project-list/project-list.component.ts","./src/app/shared/services/apps.service.ts","./src/app/shared/services/table.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAmC;AAC4B;AACkH;AAClJ;AACY;AACyD;AAC7C;AACR;AACF;AACK;;AAElD;AACA;AACA;AACA;AACwC;AACI;AACF;AACG;;AAE7C,+CAA+C;AAC/C,gBAAgB,8DAAuB;AACvC,IAAI,4DAAqB;AACzB,IAAI,wDAAiB,2EAA2E,CAAC,2DAAoB,MAAM,gBAAgB,2DAAoB,GAAG,gCAAgC,EAAE;AACpM,IAAI,0DAAmB;AACvB,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,uDAAY;AACzC,mCAAmC,uDAAY;AAC/C;AACA,4BAA4B,yCAAO;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,IAAI,kEAAY,KAAK,kEAAY,YAAY;AAC9F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,uEAAa,kBAAkB,uEAAa;AAC7E;AACA;AACA,iDAAiD,aAAa;AAC9D;AACA;AACA;AACA;AACA,uFAAuF,yDAAS;AAChG;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,UAAU;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,kCAAkC,+DAAwB,CAAC,4DAAwB,GAAG,+DAAwB,CAAC,oDAAgB,GAAG,+DAAwB,CAAC,qDAAiB,GAAG,+DAAwB,CAAC,6DAAqB,MAAM;AAC7R,oCAAoC,+DAAwB,EAAE,2HAA2H;AACzL,QAAQ,wDAAiB,8DAA8D,kCAAkC,EAAE;AAC3H,KAAK;AACL,QAAQ,yDAAkB;AAC1B,QAAQ,yDAAkB;AAC1B,KAAK,EAAE,WAAW,+DAA+D,YAAY,6DAA6D,kCAAkC,kEAA2B,qTAAqT;AAC5gB,QAAQ,6DAAsB;AAC9B,QAAQ,0DAAmB;AAC3B,QAAQ,wDAAiB;AACzB,KAAK;AACL,QAAQ,uDAAgB;AACxB,QAAQ,wDAAiB;AACzB,KAAK,EAAE,eAAe,iDAAW,EAAE,+DAAsB,yCAAyC;AAClG;AACA,KAAK,OAAO,4DAAiB,EAAE;AAC/B,KAAK,OAAO,oDAAS,EAAE;AACvB,KAAK,OAAO,qDAAU,EAAE;AACxB,KAAK,OAAO,6DAAc,gBAAgB,OAAO,mDAAQ,EAAE;AAC3D;AACA;AACA,cAAc,OAAO,gDAAK,EAAE;AAC5B,eAAe,OAAO,gDAAK,EAAE;AAC7B,iBAAiB,OAAO,gDAAK,EAAE;AAC/B,iBAAiB,OAAO,iDAAM,EAAE;AAChC,uBAAuB,OAAO,iDAAM,EAAE;AACtC;AACA,iDAAU;AACV,IAAI,qEAAY;AAChB;AACA,cAAc,oDAAoD,+DAAwB;AAC1F,cAAc,oDAAS;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,yEAA8B;AAC/D,+BAA+B,iEAAsB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,UAAU,OAAO,4DAAwB,EAAE,GAAG,OAAO,oDAAgB,EAAE,GAAG,OAAO,qDAAiB,EAAE,GAAG,OAAO,6DAAqB;AACxJ,sBAAsB,mDAAQ;AAC9B,aAAa,GAAG,EAAE,EAAE,GAAG;AACvB,kBAAkB,gDAAK;AACvB,SAAS;AACT,kBAAkB,gDAAK;AACvB,SAAS;AACT,kBAAkB,iDAAM;AACxB,SAAS;AACT,kBAAkB,iDAAM;AACxB,SAAS;AACT,kBAAkB,gDAAK;AACvB,SAAS,GAAG,EAAE,EAAE;;AAEhB;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,iCAAiC;AACrF,iCAAiC,8DAAuB,EAAE,oBAAoB;AAC9E,iCAAiC,8DAAuB,EAAE,YAAY,yDAAU,EAAE,yDAAY,EAAE,uDAAW,EAAE,4DAAY,IAAI;AAC7H,cAAc,oDAAoD,+DAAwB;AAC1F,cAAc,mDAAQ;AACtB;AACA,0BAA0B,yDAAU,EAAE,yDAAY,EAAE,uDAAW,EAAE,4DAAY;AAC7E;AACA;AACA,aAAa;AACb,KAAK,eAAe,EAAE;AACtB,cAAc,oDAAoD,gEAAyB,eAAe,4BAA4B,yBAAyB,EAAE,wBAAwB,SAAS,yDAAU,EAAE,yDAAY,EAAE,uDAAW,EAAE,4DAAY,EAAE,EAAE,wBAAwB,yBAAyB,EAAE,EAAE,EAAE,EAAE;;AAElT;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEuC;;AAEvC,6C;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxN2E;AAC+K;AACxN;AACuB;AACS;;AAE1B;AACY;AACV;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,YAAY,GAAG,YAAY;AACrC,UAAU,kBAAkB,GAAG,iBAAiB;AAChD,UAAU,gBAAgB,GAAG,kBAAkB;AAC/C,UAAU,eAAe,GAAG,eAAe;AAC3C,UAAU,mBAAmB;AAC7B,UAAU,0CAA0C;AACpD,UAAU,oCAAoC;AAC9C;AACA,aAAa,YAAY;AACzB,aAAa;AACb;AACA,UAAU,WAAW;AACrB,UAAU,YAAY;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,+BAA+B,yDAAc;;AAE7C;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA,2DAA2D,gDAAS;AACpE;AACA,0CAA0C,uJAAe;AACzD;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,mGAAmG,uBAAuB;AAC1H;AACA,iBAAiB;AACjB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,sDAAsD,gCAAgC,sDAAe,sBAAsB;AAC3H,qBAAqB,oEAAkB,EAAE,2CAA2C,yBAAyB,0DAAQ,sBAAsB,EAAE,2CAA2C;AACxL;AACA,KAAK,gCAAgC,OAAO,iDAAM,+BAA+B;AACjF;AACA,cAAc,oDAAoD,+DAAwB;AAC1F,cAAc,qDAAU;AACxB;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,UAAU;AAC/B,sBAAsB,iDAAM;AAC5B;AACA,aAAa,GAAG,EAAE,EAAE,QAAQ,EAAE;;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,uDAAY;AAC/C,mCAAmC,uDAAY;AAC/C,oCAAoC,uDAAY;AAChD,sCAAsC,uDAAY;AAClD,2BAA2B,uDAAY;AACvC,0BAA0B,uDAAY;AACtC,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,+DAAoB;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,gBAAgB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,gDAAS;AACxB,gBAAgB,iEAAgB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,yCAAyC,uBAAuB;AAChE;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE,+DAAoB;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjmCAAmC,+DAAwB,CAAC,qDAAiB,GAAG,+DAAwB,CAAC,mEAAmB,GAAG,+DAAwB,CAAC,qDAAQ,GAAG,+DAAwB,CAAC,sDAAW,GAAG,+DAAwB,CAAC,oDAAgB,GAAG,+DAAwB,CAAC,iDAAa,GAAG,+DAAwB,gBAAgB;AACnY,qCAAqC,+DAAwB,EAAE,iCAAiC,mnBAAmnB,YAAY,+LAA+L,aAAa,kEAA2B,GAAG;AACz8B;AACA,KAAK,OAAO,qDAAU,EAAE;AACxB,KAAK,OAAO,mEAAY,EAAE;AAC1B,KAAK,gCAAgC,OAAO,iDAAM,SAAS,qDAAQ,IAAI,GAAG;AAC1E,KAAK,gCAAgC,OAAO,iDAAM,SAAS,sDAAW,IAAI,GAAG;AAC7E,KAAK,OAAO,oDAAS,EAAE;AACvB,KAAK,OAAO,iDAAM,EAAE;AACpB,KAAK;AACL;AACA;AACA,cAAc,OAAO,gDAAK,EAAE;AAC5B,aAAa,OAAO,gDAAK,EA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","file":"src_app_apps_apps_module_ts.js","sourcesContent":["import { __decorate } from 'tslib';\nimport { Directionality, BidiModule } from '@angular/cdk/bidi';\nimport { EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, ChangeDetectorRef, Renderer2, ElementRef, Optional, Input, Output, NgModule } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { presetColors, statusColors, isPresetColor, isStatusColor } from 'ng-zorro-antd/core/color';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/bidi';\nimport * as ɵngcc2 from '@angular/common';\nimport * as ɵngcc3 from 'ng-zorro-antd/icon';\n\nfunction NzTagComponent_i_1_Template(rf, ctx) { if (rf & 1) {\n    const _r2 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"i\", 1);\n    ɵngcc0.ɵɵlistener(\"click\", function NzTagComponent_i_1_Template_i_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r1 = ɵngcc0.ɵɵnextContext(); return ctx_r1.closeTag($event); });\n    ɵngcc0.ɵɵelementEnd();\n} }\nconst _c0 = [\"*\"];\nclass NzTagComponent {\n    constructor(cdr, renderer, elementRef, directionality) {\n        this.cdr = cdr;\n        this.renderer = renderer;\n        this.elementRef = elementRef;\n        this.directionality = directionality;\n        this.isPresetColor = false;\n        this.nzMode = 'default';\n        this.nzChecked = false;\n        this.nzOnClose = new EventEmitter();\n        this.nzCheckedChange = new EventEmitter();\n        this.dir = 'ltr';\n        this.destroy$ = new Subject();\n        // TODO: move to host after View Engine deprecation\n        this.elementRef.nativeElement.classList.add('ant-tag');\n    }\n    updateCheckedStatus() {\n        if (this.nzMode === 'checkable') {\n            this.nzChecked = !this.nzChecked;\n            this.nzCheckedChange.emit(this.nzChecked);\n        }\n    }\n    closeTag(e) {\n        this.nzOnClose.emit(e);\n        if (!e.defaultPrevented) {\n            this.renderer.removeChild(this.renderer.parentNode(this.elementRef.nativeElement), this.elementRef.nativeElement);\n        }\n    }\n    /**\n     * @deprecated\n     * move to host after View Engine deprecation\n     * host: {\n     *   '[class]': `isPresetColor ? ('ant-tag-' + nzColor) : ''`\n     * }\n     */\n    clearPresetColor() {\n        const hostElement = this.elementRef.nativeElement;\n        // /(ant-tag-(?:pink|red|...))/g\n        const regexp = new RegExp(`(ant-tag-(?:${[...presetColors, ...statusColors].join('|')}))`, 'g');\n        const classname = hostElement.classList.toString();\n        const matches = [];\n        let match = regexp.exec(classname);\n        while (match !== null) {\n            matches.push(match[1]);\n            match = regexp.exec(classname);\n        }\n        hostElement.classList.remove(...matches);\n    }\n    /**\n     * @deprecated\n     * move to host after View Engine deprecation\n     * host: {\n     *   '[class]': `isPresetColor ? ('ant-tag-' + nzColor) : ''`\n     * }\n     */\n    setPresetColor() {\n        const hostElement = this.elementRef.nativeElement;\n        this.clearPresetColor();\n        if (!this.nzColor) {\n            this.isPresetColor = false;\n        }\n        else {\n            this.isPresetColor = isPresetColor(this.nzColor) || isStatusColor(this.nzColor);\n        }\n        if (this.isPresetColor) {\n            hostElement.classList.add(`ant-tag-${this.nzColor}`);\n        }\n    }\n    ngOnInit() {\n        var _a;\n        (_a = this.directionality.change) === null || _a === void 0 ? void 0 : _a.pipe(takeUntil(this.destroy$)).subscribe((direction) => {\n            this.dir = direction;\n            this.cdr.detectChanges();\n        });\n        this.dir = this.directionality.value;\n    }\n    ngOnChanges(changes) {\n        const { nzColor } = changes;\n        if (nzColor) {\n            this.setPresetColor();\n        }\n    }\n    ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n}\nNzTagComponent.ɵfac = function NzTagComponent_Factory(t) { return new (t || NzTagComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8)); };\nNzTagComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: NzTagComponent, selectors: [[\"nz-tag\"]], hostVars: 10, hostBindings: function NzTagComponent_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function NzTagComponent_click_HostBindingHandler() { return ctx.updateCheckedStatus(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"background-color\", ctx.isPresetColor ? \"\" : ctx.nzColor);\n        ɵngcc0.ɵɵclassProp(\"ant-tag-has-color\", ctx.nzColor && !ctx.isPresetColor)(\"ant-tag-checkable\", ctx.nzMode === \"checkable\")(\"ant-tag-checkable-checked\", ctx.nzChecked)(\"ant-tag-rtl\", ctx.dir === \"rtl\");\n    } }, inputs: { nzMode: \"nzMode\", nzChecked: \"nzChecked\", nzColor: \"nzColor\" }, outputs: { nzOnClose: \"nzOnClose\", nzCheckedChange: \"nzCheckedChange\" }, exportAs: [\"nzTag\"], features: [ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0, decls: 2, vars: 1, consts: [[\"nz-icon\", \"\", \"nzType\", \"close\", \"class\", \"ant-tag-close-icon\", \"tabindex\", \"-1\", 3, \"click\", 4, \"ngIf\"], [\"nz-icon\", \"\", \"nzType\", \"close\", \"tabindex\", \"-1\", 1, \"ant-tag-close-icon\", 3, \"click\"]], template: function NzTagComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵtemplate(1, NzTagComponent_i_1_Template, 1, 0, \"i\", 0);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.nzMode === \"closeable\");\n    } }, directives: [ɵngcc2.NgIf, ɵngcc3.NzIconDirective], encapsulation: 2, changeDetection: 0 });\nNzTagComponent.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: Renderer2 },\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] }\n];\nNzTagComponent.propDecorators = {\n    nzMode: [{ type: Input }],\n    nzColor: [{ type: Input }],\n    nzChecked: [{ type: Input }],\n    nzOnClose: [{ type: Output }],\n    nzCheckedChange: [{ type: Output }]\n};\n__decorate([\n    InputBoolean()\n], NzTagComponent.prototype, \"nzChecked\", void 0);\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NzTagComponent, [{\n        type: Component,\n        args: [{\n                selector: 'nz-tag',\n                exportAs: 'nzTag',\n                preserveWhitespaces: false,\n                template: `\n    <ng-content></ng-content>\n    <i\n      nz-icon\n      nzType=\"close\"\n      class=\"ant-tag-close-icon\"\n      *ngIf=\"nzMode === 'closeable'\"\n      tabindex=\"-1\"\n      (click)=\"closeTag($event)\"\n    ></i>\n  `,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                host: {\n                    '[style.background-color]': `isPresetColor ? '' : nzColor`,\n                    '[class.ant-tag-has-color]': `nzColor && !isPresetColor`,\n                    '[class.ant-tag-checkable]': `nzMode === 'checkable'`,\n                    '[class.ant-tag-checkable-checked]': `nzChecked`,\n                    '[class.ant-tag-rtl]': `dir === 'rtl'`,\n                    '(click)': 'updateCheckedStatus()'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ElementRef }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }]; }, { nzMode: [{\n            type: Input\n        }], nzChecked: [{\n            type: Input\n        }], nzOnClose: [{\n            type: Output\n        }], nzCheckedChange: [{\n            type: Output\n        }], nzColor: [{\n            type: Input\n        }] }); })();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzTagModule {\n}\nNzTagModule.ɵfac = function NzTagModule_Factory(t) { return new (t || NzTagModule)(); };\nNzTagModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: NzTagModule });\nNzTagModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[BidiModule, CommonModule, FormsModule, NzIconModule]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NzTagModule, [{\n        type: NgModule,\n        args: [{\n                imports: [BidiModule, CommonModule, FormsModule, NzIconModule],\n                declarations: [NzTagComponent],\n                exports: [NzTagComponent]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NzTagModule, { declarations: function () { return [NzTagComponent]; }, imports: function () { return [BidiModule, CommonModule, FormsModule, NzIconModule]; }, exports: function () { return [NzTagComponent]; } }); })();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NzTagComponent, NzTagModule };\n\n//# sourceMappingURL=ng-zorro-antd-tag.js.map","import { isPlatformServer, DOCUMENT, CommonModule } from '@angular/common';\nimport { InjectionToken, ɵɵdefineInjectable, ɵɵinject, Injectable, Inject, EventEmitter, SecurityContext, Directive, ElementRef, PLATFORM_ID, Renderer2, NgZone, Input, Output, Component, ViewEncapsulation, forwardRef, NgModule } from '@angular/core';\nimport { __awaiter } from 'tslib';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS } from '@angular/forms';\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/platform-browser';\nimport * as ɵngcc2 from '@angular/common';\n\nconst _c0 = [[[\"\", \"quill-editor-toolbar\", \"\"]]];\nconst _c1 = [\"[quill-editor-toolbar]\"];\nconst defaultModules = {\n    toolbar: [\n        ['bold', 'italic', 'underline', 'strike'],\n        ['blockquote', 'code-block'],\n        [{ header: 1 }, { header: 2 }],\n        [{ list: 'ordered' }, { list: 'bullet' }],\n        [{ script: 'sub' }, { script: 'super' }],\n        [{ indent: '-1' }, { indent: '+1' }],\n        [{ direction: 'rtl' }],\n        [{ size: ['small', false, 'large', 'huge'] }],\n        [{ header: [1, 2, 3, 4, 5, 6, false] }],\n        [\n            { color: [] },\n            { background: [] }\n        ],\n        [{ font: [] }],\n        [{ align: [] }],\n        ['clean'],\n        ['link', 'image', 'video'] // link and image, video\n    ]\n};\n\nconst getFormat = (format, configFormat) => {\n    const passedFormat = format || configFormat;\n    return passedFormat || 'html';\n};\n\nconst QUILL_CONFIG_TOKEN = new InjectionToken('config');\n\nclass QuillService {\n    constructor(config) {\n        this.config = config;\n        this.count = 0;\n        if (!this.config) {\n            this.config = { modules: defaultModules };\n        }\n    }\n    getQuill() {\n        this.count++;\n        if (!this.Quill && this.count === 1) {\n            this.$importPromise = new Promise((resolve) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                const quillImport = yield import('quill');\n                this.Quill = (quillImport.default ? quillImport.default : quillImport);\n                // Only register custom options and modules once\n                (_a = this.config.customOptions) === null || _a === void 0 ? void 0 : _a.forEach((customOption) => {\n                    const newCustomOption = this.Quill.import(customOption.import);\n                    newCustomOption.whitelist = customOption.whitelist;\n                    this.Quill.register(newCustomOption, true, this.config.suppressGlobalRegisterWarning);\n                });\n                (_b = this.config.customModules) === null || _b === void 0 ? void 0 : _b.forEach(({ implementation, path }) => {\n                    this.Quill.register(path, implementation, this.config.suppressGlobalRegisterWarning);\n                });\n                resolve(this.Quill);\n            }));\n        }\n        return this.$importPromise;\n    }\n}\nQuillService.ɵfac = function QuillService_Factory(t) { return new (t || QuillService)(ɵngcc0.ɵɵinject(QUILL_CONFIG_TOKEN)); };\nQuillService.ɵprov = ɵɵdefineInjectable({ factory: function QuillService_Factory() { return new QuillService(ɵɵinject(QUILL_CONFIG_TOKEN)); }, token: QuillService, providedIn: \"root\" });\nQuillService.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [QUILL_CONFIG_TOKEN,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(QuillService, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'root'\n            }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [QUILL_CONFIG_TOKEN]\n            }] }]; }, null); })();\n\n// eslint-disable-next-line @angular-eslint/directive-class-suffix\nclass QuillEditorBase {\n    constructor(elementRef, domSanitizer, doc, platformId, renderer, zone, service) {\n        this.elementRef = elementRef;\n        this.domSanitizer = domSanitizer;\n        this.doc = doc;\n        this.platformId = platformId;\n        this.renderer = renderer;\n        this.zone = zone;\n        this.service = service;\n        this.required = false;\n        this.customToolbarPosition = 'top';\n        this.sanitize = false;\n        this.styles = null;\n        this.strict = true;\n        this.customOptions = [];\n        this.customModules = [];\n        this.preserveWhitespace = false;\n        this.trimOnValidation = false;\n        this.onEditorCreated = new EventEmitter();\n        this.onEditorChanged = new EventEmitter();\n        this.onContentChanged = new EventEmitter();\n        this.onSelectionChanged = new EventEmitter();\n        this.onFocus = new EventEmitter();\n        this.onBlur = new EventEmitter();\n        this.disabled = false; // used to store initial value before ViewInit\n        this.valueGetter = (quillEditor, editorElement) => {\n            let html = editorElement.querySelector('.ql-editor').innerHTML;\n            if (html === '<p><br></p>' || html === '<div><br></div>') {\n                html = null;\n            }\n            let modelValue = html;\n            const format = getFormat(this.format, this.service.config.format);\n            if (format === 'text') {\n                modelValue = quillEditor.getText();\n            }\n            else if (format === 'object') {\n                modelValue = quillEditor.getContents();\n            }\n            else if (format === 'json') {\n                try {\n                    modelValue = JSON.stringify(quillEditor.getContents());\n                }\n                catch (e) {\n                    modelValue = quillEditor.getText();\n                }\n            }\n            return modelValue;\n        };\n        this.valueSetter = (quillEditor, value) => {\n            const format = getFormat(this.format, this.service.config.format);\n            if (format === 'html') {\n                if (this.sanitize) {\n                    value = this.domSanitizer.sanitize(SecurityContext.HTML, value);\n                }\n                return quillEditor.clipboard.convert(value);\n            }\n            else if (format === 'json') {\n                try {\n                    return JSON.parse(value);\n                }\n                catch (e) {\n                    return [{ insert: value }];\n                }\n            }\n            return value;\n        };\n        this.selectionChangeHandler = (range, oldRange, source) => {\n            const shouldTriggerOnModelTouched = !range && !!this.onModelTouched;\n            // only emit changes when there's any listener\n            if (!this.onBlur.observers.length &&\n                !this.onFocus.observers.length &&\n                !this.onSelectionChanged.observers.length &&\n                !shouldTriggerOnModelTouched) {\n                return;\n            }\n            this.zone.run(() => {\n                if (range === null) {\n                    this.onBlur.emit({\n                        editor: this.quillEditor,\n                        source\n                    });\n                }\n                else if (oldRange === null) {\n                    this.onFocus.emit({\n                        editor: this.quillEditor,\n                        source\n                    });\n                }\n                this.onSelectionChanged.emit({\n                    editor: this.quillEditor,\n                    oldRange,\n                    range,\n                    source\n                });\n                if (shouldTriggerOnModelTouched) {\n                    this.onModelTouched();\n                }\n            });\n        };\n        this.textChangeHandler = (delta, oldDelta, source) => {\n            // only emit changes emitted by user interactions\n            const text = this.quillEditor.getText();\n            const content = this.quillEditor.getContents();\n            let html = this.editorElem.querySelector('.ql-editor').innerHTML;\n            if (html === '<p><br></p>' || html === '<div><br></div>') {\n                html = null;\n            }\n            const trackChanges = this.trackChanges || this.service.config.trackChanges;\n            const shouldTriggerOnModelChange = (source === 'user' || trackChanges && trackChanges === 'all') && !!this.onModelChange;\n            // only emit changes when there's any listener\n            if (!this.onContentChanged.observers.length && !shouldTriggerOnModelChange) {\n                return;\n            }\n            this.zone.run(() => {\n                if (shouldTriggerOnModelChange) {\n                    this.onModelChange(this.valueGetter(this.quillEditor, this.editorElem));\n                }\n                this.onContentChanged.emit({\n                    content,\n                    delta,\n                    editor: this.quillEditor,\n                    html,\n                    oldDelta,\n                    source,\n                    text\n                });\n            });\n        };\n        // eslint-disable-next-line max-len\n        this.editorChangeHandler = (event, current, old, source) => {\n            // only emit changes when there's any listener\n            if (!this.onEditorChanged.observers.length) {\n                return;\n            }\n            // only emit changes emitted by user interactions\n            if (event === 'text-change') {\n                const text = this.quillEditor.getText();\n                const content = this.quillEditor.getContents();\n                let html = this.editorElem.querySelector('.ql-editor').innerHTML;\n                if (html === '<p><br></p>' || html === '<div><br></div>') {\n                    html = null;\n                }\n                this.zone.run(() => {\n                    this.onEditorChanged.emit({\n                        content,\n                        delta: current,\n                        editor: this.quillEditor,\n                        event,\n                        html,\n                        oldDelta: old,\n                        source,\n                        text\n                    });\n                });\n            }\n            else {\n                this.onEditorChanged.emit({\n                    editor: this.quillEditor,\n                    event,\n                    oldRange: old,\n                    range: current,\n                    source\n                });\n            }\n        };\n    }\n    static normalizeClassNames(classes) {\n        const classList = classes.trim().split(' ');\n        return classList.reduce((prev, cur) => {\n            const trimmed = cur.trim();\n            if (trimmed) {\n                prev.push(trimmed);\n            }\n            return prev;\n        }, []);\n    }\n    ngAfterViewInit() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (isPlatformServer(this.platformId)) {\n                return;\n            }\n            // eslint-disable-next-line @typescript-eslint/naming-convention\n            const Quill = yield this.service.getQuill();\n            this.elementRef.nativeElement.insertAdjacentHTML(this.customToolbarPosition === 'top' ? 'beforeend' : 'afterbegin', this.preserveWhitespace ? '<pre quill-editor-element></pre>' : '<div quill-editor-element></div>');\n            this.editorElem = this.elementRef.nativeElement.querySelector('[quill-editor-element]');\n            const toolbarElem = this.elementRef.nativeElement.querySelector('[quill-editor-toolbar]');\n            const modules = Object.assign({}, this.modules || this.service.config.modules);\n            if (toolbarElem) {\n                modules.toolbar = toolbarElem;\n            }\n            else if (modules.toolbar === undefined) {\n                modules.toolbar = defaultModules.toolbar;\n            }\n            let placeholder = this.placeholder !== undefined ? this.placeholder : this.service.config.placeholder;\n            if (placeholder === undefined) {\n                placeholder = 'Insert text here ...';\n            }\n            if (this.styles) {\n                Object.keys(this.styles).forEach((key) => {\n                    this.renderer.setStyle(this.editorElem, key, this.styles[key]);\n                });\n            }\n            if (this.classes) {\n                this.addClasses(this.classes);\n            }\n            this.customOptions.forEach((customOption) => {\n                const newCustomOption = Quill.import(customOption.import);\n                newCustomOption.whitelist = customOption.whitelist;\n                Quill.register(newCustomOption, true);\n            });\n            this.customModules.forEach(({ implementation, path }) => {\n                Quill.register(path, implementation);\n            });\n            let bounds = this.bounds && this.bounds === 'self' ? this.editorElem : this.bounds;\n            if (!bounds) {\n                bounds = this.service.config.bounds ? this.service.config.bounds : this.doc.body;\n            }\n            let debug = this.debug;\n            if (!debug && debug !== false && this.service.config.debug) {\n                debug = this.service.config.debug;\n            }\n            let readOnly = this.readOnly;\n            if (!readOnly && this.readOnly !== false) {\n                readOnly = this.service.config.readOnly !== undefined ? this.service.config.readOnly : false;\n            }\n            let scrollingContainer = this.scrollingContainer;\n            if (!scrollingContainer && this.scrollingContainer !== null) {\n                scrollingContainer =\n                    this.service.config.scrollingContainer === null\n                        || this.service.config.scrollingContainer ? this.service.config.scrollingContainer : null;\n            }\n            let formats = this.formats;\n            if (!formats && formats === undefined) {\n                formats = this.service.config.formats ? [...this.service.config.formats] : (this.service.config.formats === null ? null : undefined);\n            }\n            this.zone.runOutsideAngular(() => {\n                this.quillEditor = new Quill(this.editorElem, {\n                    bounds,\n                    debug: debug,\n                    formats: formats,\n                    modules,\n                    placeholder,\n                    readOnly,\n                    scrollingContainer: scrollingContainer,\n                    strict: this.strict,\n                    theme: this.theme || (this.service.config.theme ? this.service.config.theme : 'snow')\n                });\n            });\n            if (this.content) {\n                const format = getFormat(this.format, this.service.config.format);\n                if (format === 'object') {\n                    this.quillEditor.setContents(this.content, 'silent');\n                }\n                else if (format === 'text') {\n                    this.quillEditor.setText(this.content, 'silent');\n                }\n                else if (format === 'json') {\n                    try {\n                        this.quillEditor.setContents(JSON.parse(this.content), 'silent');\n                    }\n                    catch (e) {\n                        this.quillEditor.setText(this.content, 'silent');\n                    }\n                }\n                else {\n                    if (this.sanitize) {\n                        this.content = this.domSanitizer.sanitize(SecurityContext.HTML, this.content);\n                    }\n                    const contents = this.quillEditor.clipboard.convert(this.content);\n                    this.quillEditor.setContents(contents, 'silent');\n                }\n                this.quillEditor.getModule('history').clear();\n            }\n            // initialize disabled status based on this.disabled as default value\n            this.setDisabledState();\n            // triggered if selection or text changed\n            this.quillEditor.on('editor-change', this.editorChangeHandler);\n            // mark model as touched if editor lost focus\n            this.quillEditor.on('selection-change', this.selectionChangeHandler);\n            // update model if text changes\n            this.quillEditor.on('text-change', this.textChangeHandler);\n            // trigger created in a timeout to avoid changed models after checked\n            // if you are using the editor api in created output to change the editor content\n            setTimeout(() => {\n                if (this.onValidatorChanged) {\n                    this.onValidatorChanged();\n                }\n                this.onEditorCreated.emit(this.quillEditor);\n            });\n        });\n    }\n    ngOnDestroy() {\n        if (this.quillEditor) {\n            this.quillEditor.off('selection-change', this.selectionChangeHandler);\n            this.quillEditor.off('text-change', this.textChangeHandler);\n            this.quillEditor.off('editor-change', this.editorChangeHandler);\n        }\n    }\n    ngOnChanges(changes) {\n        if (!this.quillEditor) {\n            return;\n        }\n        /* eslint-disable @typescript-eslint/dot-notation */\n        if (changes.readOnly) {\n            this.quillEditor.enable(!changes.readOnly.currentValue);\n        }\n        if (changes.placeholder) {\n            this.quillEditor.root.dataset.placeholder =\n                changes.placeholder.currentValue;\n        }\n        if (changes.styles) {\n            const currentStyling = changes.styles.currentValue;\n            const previousStyling = changes.styles.previousValue;\n            if (previousStyling) {\n                Object.keys(previousStyling).forEach((key) => {\n                    this.renderer.removeStyle(this.editorElem, key);\n                });\n            }\n            if (currentStyling) {\n                Object.keys(currentStyling).forEach((key) => {\n                    this.renderer.setStyle(this.editorElem, key, this.styles[key]);\n                });\n            }\n        }\n        if (changes.classes) {\n            const currentClasses = changes.classes.currentValue;\n            const previousClasses = changes.classes.previousValue;\n            if (previousClasses) {\n                this.removeClasses(previousClasses);\n            }\n            if (currentClasses) {\n                this.addClasses(currentClasses);\n            }\n        }\n        /* eslint-enable @typescript-eslint/dot-notation */\n    }\n    addClasses(classList) {\n        QuillEditorBase.normalizeClassNames(classList).forEach((c) => {\n            this.renderer.addClass(this.editorElem, c);\n        });\n    }\n    removeClasses(classList) {\n        QuillEditorBase.normalizeClassNames(classList).forEach((c) => {\n            this.renderer.removeClass(this.editorElem, c);\n        });\n    }\n    writeValue(currentValue) {\n        this.content = currentValue;\n        const format = getFormat(this.format, this.service.config.format);\n        if (this.quillEditor) {\n            if (currentValue) {\n                if (format === 'text') {\n                    this.quillEditor.setText(currentValue);\n                }\n                else {\n                    this.quillEditor.setContents(this.valueSetter(this.quillEditor, this.content));\n                }\n                return;\n            }\n            this.quillEditor.setText('');\n        }\n    }\n    setDisabledState(isDisabled = this.disabled) {\n        // store initial value to set appropriate disabled status after ViewInit\n        this.disabled = isDisabled;\n        if (this.quillEditor) {\n            if (isDisabled) {\n                this.quillEditor.disable();\n                this.renderer.setAttribute(this.elementRef.nativeElement, 'disabled', 'disabled');\n            }\n            else {\n                if (!this.readOnly) {\n                    this.quillEditor.enable();\n                }\n                this.renderer.removeAttribute(this.elementRef.nativeElement, 'disabled');\n            }\n        }\n    }\n    registerOnChange(fn) {\n        this.onModelChange = fn;\n    }\n    registerOnTouched(fn) {\n        this.onModelTouched = fn;\n    }\n    registerOnValidatorChange(fn) {\n        this.onValidatorChanged = fn;\n    }\n    validate() {\n        if (!this.quillEditor) {\n            return null;\n        }\n        const err = {};\n        let valid = true;\n        const text = this.quillEditor.getText();\n        // trim text if wanted + handle special case that an empty editor contains a new line\n        const textLength = this.trimOnValidation ? text.trim().length : (text.length === 1 && text.trim().length === 0 ? 0 : text.length - 1);\n        if (this.minLength && textLength && textLength < this.minLength) {\n            err.minLengthError = {\n                given: textLength,\n                minLength: this.minLength\n            };\n            valid = false;\n        }\n        if (this.maxLength && textLength > this.maxLength) {\n            err.maxLengthError = {\n                given: textLength,\n                maxLength: this.maxLength\n            };\n            valid = false;\n        }\n        if (this.required && !textLength) {\n            err.requiredError = {\n                empty: true\n            };\n            valid = false;\n        }\n        return valid ? null : err;\n    }\n}\nQuillEditorBase.ɵfac = function QuillEditorBase_Factory(t) { return new (t || QuillEditorBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DomSanitizer), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(PLATFORM_ID), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(QuillService)); };\nQuillEditorBase.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: QuillEditorBase, inputs: { required: \"required\", customToolbarPosition: \"customToolbarPosition\", sanitize: \"sanitize\", styles: \"styles\", strict: \"strict\", customOptions: \"customOptions\", customModules: \"customModules\", preserveWhitespace: \"preserveWhitespace\", trimOnValidation: \"trimOnValidation\", valueGetter: \"valueGetter\", valueSetter: \"valueSetter\", format: \"format\", theme: \"theme\", modules: \"modules\", debug: \"debug\", readOnly: \"readOnly\", placeholder: \"placeholder\", maxLength: \"maxLength\", minLength: \"minLength\", formats: \"formats\", scrollingContainer: \"scrollingContainer\", bounds: \"bounds\", trackChanges: \"trackChanges\", classes: \"classes\" }, outputs: { onEditorCreated: \"onEditorCreated\", onEditorChanged: \"onEditorChanged\", onContentChanged: \"onContentChanged\", onSelectionChanged: \"onSelectionChanged\", onFocus: \"onFocus\", onBlur: \"onBlur\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature] });\nQuillEditorBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: DomSanitizer },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] },\n    { type: Renderer2 },\n    { type: NgZone },\n    { type: QuillService }\n];\nQuillEditorBase.propDecorators = {\n    format: [{ type: Input }],\n    theme: [{ type: Input }],\n    modules: [{ type: Input }],\n    debug: [{ type: Input }],\n    readOnly: [{ type: Input }],\n    placeholder: [{ type: Input }],\n    maxLength: [{ type: Input }],\n    minLength: [{ type: Input }],\n    required: [{ type: Input }],\n    formats: [{ type: Input }],\n    customToolbarPosition: [{ type: Input }],\n    sanitize: [{ type: Input }],\n    styles: [{ type: Input }],\n    strict: [{ type: Input }],\n    scrollingContainer: [{ type: Input }],\n    bounds: [{ type: Input }],\n    customOptions: [{ type: Input }],\n    customModules: [{ type: Input }],\n    trackChanges: [{ type: Input }],\n    preserveWhitespace: [{ type: Input }],\n    classes: [{ type: Input }],\n    trimOnValidation: [{ type: Input }],\n    onEditorCreated: [{ type: Output }],\n    onEditorChanged: [{ type: Output }],\n    onContentChanged: [{ type: Output }],\n    onSelectionChanged: [{ type: Output }],\n    onFocus: [{ type: Output }],\n    onBlur: [{ type: Output }],\n    valueGetter: [{ type: Input }],\n    valueSetter: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(QuillEditorBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.DomSanitizer }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [PLATFORM_ID]\n            }] }, { type: ɵngcc0.Renderer2 }, { type: ɵngcc0.NgZone }, { type: QuillService }]; }, { required: [{\n            type: Input\n        }], customToolbarPosition: [{\n            type: Input\n        }], sanitize: [{\n            type: Input\n        }], styles: [{\n            type: Input\n        }], strict: [{\n            type: Input\n        }], customOptions: [{\n            type: Input\n        }], customModules: [{\n            type: Input\n        }], preserveWhitespace: [{\n            type: Input\n        }], trimOnValidation: [{\n            type: Input\n        }], onEditorCreated: [{\n            type: Output\n        }], onEditorChanged: [{\n            type: Output\n        }], onContentChanged: [{\n            type: Output\n        }], onSelectionChanged: [{\n            type: Output\n        }], onFocus: [{\n            type: Output\n        }], onBlur: [{\n            type: Output\n        }], valueGetter: [{\n            type: Input\n        }], valueSetter: [{\n            type: Input\n        }], format: [{\n            type: Input\n        }], theme: [{\n            type: Input\n        }], modules: [{\n            type: Input\n        }], debug: [{\n            type: Input\n        }], readOnly: [{\n            type: Input\n        }], placeholder: [{\n            type: Input\n        }], maxLength: [{\n            type: Input\n        }], minLength: [{\n            type: Input\n        }], formats: [{\n            type: Input\n        }], scrollingContainer: [{\n            type: Input\n        }], bounds: [{\n            type: Input\n        }], trackChanges: [{\n            type: Input\n        }], classes: [{\n            type: Input\n        }] }); })();\nclass QuillEditorComponent extends QuillEditorBase {\n    constructor(elementRef, domSanitizer, doc, platformId, renderer, zone, service) {\n        super(elementRef, domSanitizer, doc, platformId, renderer, zone, service);\n    }\n}\nQuillEditorComponent.ɵfac = function QuillEditorComponent_Factory(t) { return new (t || QuillEditorComponent)(ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(DomSanitizer), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(PLATFORM_ID), ɵngcc0.ɵɵdirectiveInject(Renderer2), ɵngcc0.ɵɵdirectiveInject(NgZone), ɵngcc0.ɵɵdirectiveInject(QuillService)); };\nQuillEditorComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: QuillEditorComponent, selectors: [[\"quill-editor\"]], features: [ɵngcc0.ɵɵProvidersFeature([\n            {\n                multi: true,\n                provide: NG_VALUE_ACCESSOR,\n                // eslint-disable-next-line @typescript-eslint/no-use-before-define\n                useExisting: forwardRef(() => QuillEditorComponent)\n            },\n            {\n                multi: true,\n                provide: NG_VALIDATORS,\n                // eslint-disable-next-line @typescript-eslint/no-use-before-define\n                useExisting: forwardRef(() => QuillEditorComponent)\n            }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c1, decls: 1, vars: 0, template: function QuillEditorComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c0);\n        ɵngcc0.ɵɵprojection(0);\n    } }, encapsulation: 2 });\nQuillEditorComponent.ctorParameters = () => [\n    { type: ElementRef, decorators: [{ type: Inject, args: [ElementRef,] }] },\n    { type: DomSanitizer, decorators: [{ type: Inject, args: [DomSanitizer,] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] },\n    { type: Renderer2, decorators: [{ type: Inject, args: [Renderer2,] }] },\n    { type: NgZone, decorators: [{ type: Inject, args: [NgZone,] }] },\n    { type: QuillService, decorators: [{ type: Inject, args: [QuillService,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(QuillEditorComponent, [{\n        type: Component,\n        args: [{\n                encapsulation: ViewEncapsulation.None,\n                providers: [\n                    {\n                        multi: true,\n                        provide: NG_VALUE_ACCESSOR,\n                        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n                        useExisting: forwardRef(() => QuillEditorComponent)\n                    },\n                    {\n                        multi: true,\n                        provide: NG_VALIDATORS,\n                        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n                        useExisting: forwardRef(() => QuillEditorComponent)\n                    }\n                ],\n                selector: 'quill-editor',\n                template: `\n  <ng-content select=\"[quill-editor-toolbar]\"></ng-content>\n`\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef, decorators: [{\n                type: Inject,\n                args: [ElementRef]\n            }] }, { type: ɵngcc1.DomSanitizer, decorators: [{\n                type: Inject,\n                args: [DomSanitizer]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [PLATFORM_ID]\n            }] }, { type: ɵngcc0.Renderer2, decorators: [{\n                type: Inject,\n                args: [Renderer2]\n            }] }, { type: ɵngcc0.NgZone, decorators: [{\n                type: Inject,\n                args: [NgZone]\n            }] }, { type: QuillService, decorators: [{\n                type: Inject,\n                args: [QuillService]\n            }] }]; }, null); })();\n\nclass QuillViewHTMLComponent {\n    constructor(sanitizer, service) {\n        this.sanitizer = sanitizer;\n        this.service = service;\n        this.content = '';\n        this.innerHTML = '';\n        this.themeClass = 'ql-snow';\n    }\n    ngOnChanges(changes) {\n        if (changes.theme) {\n            const theme = changes.theme.currentValue || (this.service.config.theme ? this.service.config.theme : 'snow');\n            this.themeClass = `ql-${theme} ngx-quill-view-html`;\n        }\n        else if (!this.theme) {\n            const theme = this.service.config.theme ? this.service.config.theme : 'snow';\n            this.themeClass = `ql-${theme} ngx-quill-view-html`;\n        }\n        if (changes.content) {\n            this.innerHTML = this.sanitizer.bypassSecurityTrustHtml(changes.content.currentValue);\n        }\n    }\n}\nQuillViewHTMLComponent.ɵfac = function QuillViewHTMLComponent_Factory(t) { return new (t || QuillViewHTMLComponent)(ɵngcc0.ɵɵdirectiveInject(DomSanitizer), ɵngcc0.ɵɵdirectiveInject(QuillService)); };\nQuillViewHTMLComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: QuillViewHTMLComponent, selectors: [[\"quill-view-html\"]], inputs: { content: \"content\", theme: \"theme\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 2, vars: 2, consts: [[1, \"ql-container\", 3, \"ngClass\"], [1, \"ql-editor\", 3, \"innerHTML\"]], template: function QuillViewHTMLComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelement(1, \"div\", 1);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngClass\", ctx.themeClass);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"innerHTML\", ctx.innerHTML, ɵngcc0.ɵɵsanitizeHtml);\n    } }, directives: [ɵngcc2.NgClass], styles: [\"\\n.ql-container.ngx-quill-view-html {\\n  border: 0;\\n}\\n\"], encapsulation: 2 });\nQuillViewHTMLComponent.ctorParameters = () => [\n    { type: DomSanitizer, decorators: [{ type: Inject, args: [DomSanitizer,] }] },\n    { type: QuillService }\n];\nQuillViewHTMLComponent.propDecorators = {\n    content: [{ type: Input }],\n    theme: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(QuillViewHTMLComponent, [{\n        type: Component,\n        args: [{\n                encapsulation: ViewEncapsulation.None,\n                selector: 'quill-view-html',\n                template: `\n  <div class=\"ql-container\" [ngClass]=\"themeClass\">\n    <div class=\"ql-editor\" [innerHTML]=\"innerHTML\">\n    </div>\n  </div>\n`,\n                styles: [`\n.ql-container.ngx-quill-view-html {\n  border: 0;\n}\n`]\n            }]\n    }], function () { return [{ type: ɵngcc1.DomSanitizer, decorators: [{\n                type: Inject,\n                args: [DomSanitizer]\n            }] }, { type: QuillService }]; }, { content: [{\n            type: Input\n        }], theme: [{\n            type: Input\n        }] }); })();\n\nclass QuillViewComponent {\n    constructor(elementRef, renderer, zone, service, domSanitizer, platformId) {\n        this.elementRef = elementRef;\n        this.renderer = renderer;\n        this.zone = zone;\n        this.service = service;\n        this.domSanitizer = domSanitizer;\n        this.platformId = platformId;\n        this.sanitize = false;\n        this.strict = true;\n        this.customModules = [];\n        this.customOptions = [];\n        this.preserveWhitespace = false;\n        this.valueSetter = (quillEditor, value) => {\n            const format = getFormat(this.format, this.service.config.format);\n            let content = value;\n            if (format === 'text') {\n                quillEditor.setText(content);\n            }\n            else {\n                if (format === 'html') {\n                    if (this.sanitize) {\n                        value = this.domSanitizer.sanitize(SecurityContext.HTML, value);\n                    }\n                    content = quillEditor.clipboard.convert(value);\n                }\n                else if (format === 'json') {\n                    try {\n                        content = JSON.parse(value);\n                    }\n                    catch (e) {\n                        content = [{ insert: value }];\n                    }\n                }\n                quillEditor.setContents(content);\n            }\n        };\n    }\n    ngOnChanges(changes) {\n        if (!this.quillEditor) {\n            return;\n        }\n        if (changes.content) {\n            this.valueSetter(this.quillEditor, changes.content.currentValue);\n        }\n    }\n    ngAfterViewInit() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (isPlatformServer(this.platformId)) {\n                return;\n            }\n            // eslint-disable-next-line @typescript-eslint/naming-convention\n            const Quill = yield this.service.getQuill();\n            const modules = Object.assign({}, this.modules || this.service.config.modules);\n            modules.toolbar = false;\n            this.customOptions.forEach((customOption) => {\n                const newCustomOption = Quill.import(customOption.import);\n                newCustomOption.whitelist = customOption.whitelist;\n                Quill.register(newCustomOption, true);\n            });\n            this.customModules.forEach(({ implementation, path }) => {\n                Quill.register(path, implementation);\n            });\n            let debug = this.debug;\n            if (!debug && debug !== false && this.service.config.debug) {\n                debug = this.service.config.debug;\n            }\n            let formats = this.formats;\n            if (!formats && formats === undefined) {\n                formats = this.service.config.formats ?\n                    Object.assign({}, this.service.config.formats) : (this.service.config.formats === null ? null : undefined);\n            }\n            const theme = this.theme || (this.service.config.theme ? this.service.config.theme : 'snow');\n            this.elementRef.nativeElement.insertAdjacentHTML('afterbegin', this.preserveWhitespace ? '<pre quill-view-element></pre>' : '<div quill-view-element></div>');\n            this.editorElem = this.elementRef.nativeElement.querySelector('[quill-view-element]');\n            this.zone.runOutsideAngular(() => {\n                this.quillEditor = new Quill(this.editorElem, {\n                    debug: debug,\n                    formats: formats,\n                    modules,\n                    readOnly: true,\n                    strict: this.strict,\n                    theme\n                });\n            });\n            this.renderer.addClass(this.editorElem, 'ngx-quill-view');\n            if (this.content) {\n                this.valueSetter(this.quillEditor, this.content);\n            }\n        });\n    }\n}\nQuillViewComponent.ɵfac = function QuillViewComponent_Factory(t) { return new (t || QuillViewComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(QuillService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DomSanitizer), ɵngcc0.ɵɵdirectiveInject(PLATFORM_ID)); };\nQuillViewComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: QuillViewComponent, selectors: [[\"quill-view\"]], inputs: { sanitize: \"sanitize\", strict: \"strict\", customModules: \"customModules\", customOptions: \"customOptions\", preserveWhitespace: \"preserveWhitespace\", format: \"format\", theme: \"theme\", modules: \"modules\", debug: \"debug\", formats: \"formats\", content: \"content\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 0, vars: 0, template: function QuillViewComponent_Template(rf, ctx) { }, styles: [\"\\n.ql-container.ngx-quill-view {\\n  border: 0;\\n}\\n\"], encapsulation: 2 });\nQuillViewComponent.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Renderer2 },\n    { type: NgZone },\n    { type: QuillService },\n    { type: DomSanitizer },\n    { type: undefined, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] }\n];\nQuillViewComponent.propDecorators = {\n    format: [{ type: Input }],\n    theme: [{ type: Input }],\n    modules: [{ type: Input }],\n    debug: [{ type: Input }],\n    formats: [{ type: Input }],\n    sanitize: [{ type: Input }],\n    strict: [{ type: Input }],\n    content: [{ type: Input }],\n    customModules: [{ type: Input }],\n    customOptions: [{ type: Input }],\n    preserveWhitespace: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(QuillViewComponent, [{\n        type: Component,\n        args: [{\n                encapsulation: ViewEncapsulation.None,\n                selector: 'quill-view',\n                template: `\n`,\n                styles: [`\n.ql-container.ngx-quill-view {\n  border: 0;\n}\n`]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }, { type: ɵngcc0.NgZone }, { type: QuillService }, { type: ɵngcc1.DomSanitizer }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [PLATFORM_ID]\n            }] }]; }, { sanitize: [{\n            type: Input\n        }], strict: [{\n            type: Input\n        }], customModules: [{\n            type: Input\n        }], customOptions: [{\n            type: Input\n        }], preserveWhitespace: [{\n            type: Input\n        }], format: [{\n            type: Input\n        }], theme: [{\n            type: Input\n        }], modules: [{\n            type: Input\n        }], debug: [{\n            type: Input\n        }], formats: [{\n            type: Input\n        }], content: [{\n            type: Input\n        }] }); })();\n\nclass QuillModule {\n    static forRoot(config) {\n        return {\n            ngModule: QuillModule,\n            providers: [\n                {\n                    provide: QUILL_CONFIG_TOKEN,\n                    useValue: config\n                }\n            ]\n        };\n    }\n}\nQuillModule.ɵfac = function QuillModule_Factory(t) { return new (t || QuillModule)(); };\nQuillModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: QuillModule });\nQuillModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [QuillService], imports: [[CommonModule]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(QuillModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [\n                    QuillEditorComponent,\n                    QuillViewComponent,\n                    QuillViewHTMLComponent\n                ],\n                exports: [QuillEditorComponent, QuillViewComponent, QuillViewHTMLComponent],\n                imports: [CommonModule],\n                providers: [QuillService]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(QuillModule, { declarations: function () { return [QuillEditorComponent, QuillViewComponent, QuillViewHTMLComponent]; }, imports: function () { return [CommonModule]; }, exports: function () { return [QuillEditorComponent, QuillViewComponent, QuillViewHTMLComponent]; } }); })();\n\n/*\n * Public API Surface of ngx-quill\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { QUILL_CONFIG_TOKEN, QuillEditorBase, QuillEditorComponent, QuillModule, QuillService, QuillViewComponent, QuillViewHTMLComponent, defaultModules };\n\n//# sourceMappingURL=ngx-quill.js.map","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ChatComponent } from './chat/chat.component';\nimport { FileManagerComponent } from './file-manager/file-manager.component';\nimport { MailComponent } from './mail/mail.component';\nimport { ProjectListComponent } from './projects/project-list/project-list.component';\nimport { ProjectDetailsComponent } from './projects/project-details/project-details.component';\nimport { OrdersListComponent } from './e-commerce/orders-list/orders-list.component';\nimport { ProductsListComponent } from './e-commerce/products-list/products-list.component';\nimport { ProductComponent } from './e-commerce/product/product.component';\n\nconst routes: Routes = [\n    {\n        path: 'chat',\n        component: ChatComponent,\n        data: {\n            title: 'Chat',\n            headerDisplay: \"none\"\n        }\n    },\n    {\n        path: 'file-manager',\n        component: FileManagerComponent,\n        data: {\n            title: 'File Manager',\n            headerDisplay: \"none\"\n        }\n    },\n    {\n        path: 'mail',\n        component: MailComponent,\n        data: {\n            title: 'Mail',\n            headerDisplay: \"none\"\n        }\n    },\n    {\n        path: 'projects',\n        children: [\n            {\n                path: 'project-list',\n                component: ProjectListComponent,\n                data: {\n                    title: 'Project List',\n                    headerDisplay: \"none\"\n                }\n            },\n            {\n                path: 'project-details',\n                component: ProjectDetailsComponent,\n                data: {\n                    title: 'Project Details',\n                    headerDisplay: \"none\"\n                }\n            }\n        ]\n    },\n    {\n        path: 'e-commerce',\n        data: {\n            title: 'E-commerce'\n        },\n        children: [\n            {\n                path: '',\n                redirectTo: '/dashboard',\n                pathMatch: 'full'\n            },\n            {\n                path: 'orders-list',\n                component: OrdersListComponent,\n                data: {\n                    title: 'Orders List'\n                }\n            },\n            {\n                path: 'product',\n                component: ProductComponent,\n                data: {\n                    title: 'Product',\n                    headerDisplay: \"none\"\n                }\n            },\n            {\n                path: 'products-list',\n                component: ProductsListComponent,\n                data: {\n                    title: 'Products List'\n                }\n            }\n        ]\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule],\n})\nexport class AppsRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { SharedModule } from '../shared/shared.module';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { AppsRoutingModule } from './apps-routing.module';\nimport { QuillModule } from 'ngx-quill';\n\nimport { ThemeConstantService } from '../shared/services/theme-constant.service';\nimport { AppsService } from '../shared/services/apps.service';\nimport { TableService } from '../shared/services/table.service';\n\nimport { NzButtonModule } from 'ng-zorro-antd/button';\nimport { NzCardModule } from 'ng-zorro-antd/card';\nimport { NzAvatarModule } from 'ng-zorro-antd/avatar';\nimport { NzRateModule } from 'ng-zorro-antd/rate';\nimport { NzBadgeModule } from 'ng-zorro-antd/badge';\nimport { NzProgressModule } from 'ng-zorro-antd/progress';\nimport { NzRadioModule } from 'ng-zorro-antd/radio';\nimport { NzTableModule } from 'ng-zorro-antd/table';\nimport { NzDropDownModule } from 'ng-zorro-antd/dropdown';\nimport { NzTimelineModule } from 'ng-zorro-antd/timeline';\nimport { NzTabsModule } from 'ng-zorro-antd/tabs';\nimport { NzTagModule } from 'ng-zorro-antd/tag';\nimport { NzListModule } from 'ng-zorro-antd/list';\nimport { NzCalendarModule } from 'ng-zorro-antd/calendar';\nimport { NzToolTipModule } from 'ng-zorro-antd/tooltip';\nimport { NzFormModule } from 'ng-zorro-antd/form';\nimport { NzModalModule } from 'ng-zorro-antd/modal';\nimport { NzSelectModule } from 'ng-zorro-antd/select';\nimport { NzUploadModule } from 'ng-zorro-antd/upload';\nimport { NzInputModule } from 'ng-zorro-antd/input';\nimport { NzPaginationModule } from 'ng-zorro-antd/pagination';\nimport { NzDatePickerModule } from 'ng-zorro-antd/date-picker';\nimport { NzCheckboxModule } from 'ng-zorro-antd/checkbox';\nimport { NzMessageModule } from 'ng-zorro-antd/message';\n\nimport { ChatComponent } from './chat/chat.component';\nimport { FileManagerComponent } from './file-manager/file-manager.component';\nimport { MailComponent } from './mail/mail.component';\nimport { ProjectListComponent } from './projects/project-list/project-list.component';\nimport { ProjectDetailsComponent } from './projects/project-details/project-details.component';\nimport { OrdersListComponent } from './e-commerce/orders-list/orders-list.component';\nimport { ProductsListComponent } from './e-commerce/products-list/products-list.component';\nimport { ProductComponent } from './e-commerce/product/product.component';\n\nconst antdModule = [\n    NzButtonModule,\n    NzCardModule,\n    NzAvatarModule,\n    NzRateModule,\n    NzBadgeModule,\n    NzProgressModule,\n    NzRadioModule,\n    NzTableModule,\n    NzDropDownModule,\n    NzTimelineModule,\n    NzTabsModule,\n    NzTagModule,\n    NzListModule,\n    NzCalendarModule,\n    NzToolTipModule,\n    NzFormModule,\n    NzModalModule,\n    NzSelectModule,\n    NzUploadModule,\n    NzInputModule,\n    NzPaginationModule,\n    NzDatePickerModule,\n    NzCheckboxModule,\n    NzMessageModule\n]\n\n@NgModule({\n    imports: [\n        SharedModule,\n        ReactiveFormsModule,\n        AppsRoutingModule,\n        QuillModule.forRoot(),\n        ...antdModule\n    ],\n    declarations: [\n        ChatComponent,\n        FileManagerComponent,\n        MailComponent,\n        ProjectListComponent,\n        ProjectDetailsComponent,\n        OrdersListComponent,\n        ProductsListComponent,\n        ProductComponent\n    ],\n    providers: [\n        ThemeConstantService,\n        AppsService,\n        TableService\n    ]\n})\n\nexport class AppsModule {}","<div class=\"container-fluid p-h-0\">\n    <div class=\"chat chat-app row\">\n        <div class=\"chat-list\">\n            <div class=\"chat-user-tool\">\n                <i nz-icon nzType=\"search\" theme=\"outline\" class=\"search-icon p-r-10 font-size-20\"></i>\n                <input placeholder=\"Search...\">\n            </div>\n            <div class=\"chat-user-list\">\n                <nz-list [nzDataSource]=\"chatList\" [nzRenderItem]=\"item\" [nzItemLayout]=\"'horizontal'\">\n                    <ng-template #item let-item let-index=\"index\">\n                        <a (click)=\"selectChat(item.name)\">\n                            <nz-list-item class=\"p-h-25\" [ngClass]=\"{'active': index == chatId}\">\n                                <div class=\"media align-items-center\">\n                                    <div>\n                                        <nz-avatar class=\"shadow\" nzIcon=\"user\" [nzSrc]=\"item.avatar\"></nz-avatar>\n                                    </div>\n                                    <div class=\"p-l-15\">\n                                        <h5 class=\"m-b-0\">{{item.name}}</h5>\n                                        <ng-container *ngFor=\"let item of item.msg; let last = last\">\n                                            <p *ngIf=\"last\" class=\"msg-overflow m-b-0 text-muted font-size-13\">\n                                                {{item.text}}\n                                            </p>\n                                        </ng-container>\n                                    </div>\n                                </div>\n                            </nz-list-item>\n                        </a>\n                    </ng-template>\n                </nz-list>\n            </div>    \n        </div>\n        <div class=\"chat-content\" [ngClass]=\"{'open': isContentOpen}\">\n            <div class=\"conversation\">\n                <div class=\"conversation-wrapper\">\n                    <div class=\"conversation-header justify-content-between\">\n                        <ng-container *ngFor=\"let item of chatList\">\n                            <div class=\"media align-items-center\" *ngIf=\"chatId == item.name\">\n                                <a [routerLink]=\"\" (click)=\"closeChatContent()\" class=\"m-r-20 d-md-none d-block text-dark font-size-18 m-t-5\" >\n                                    <i nz-icon nzType=\"left-circle\" theme=\"outline\"></i>\n                                </a>\n                                <div>\n                                    <nz-avatar class=\"shadow\" nzIcon=\"user\" [nzSrc]=\"item.avatar\"></nz-avatar>\n                                </div>\n                                <div class=\"p-l-15\">\n                                    <h6 class=\"m-b-0\">{{item.name}}</h6>\n                                    <p class=\"m-b-0 text-muted font-size-13\">\n                                        <nz-badge nzStatus=\"success\"></nz-badge>\n                                        <span>Online</span>\n                                    </p>\n                                </div>\n                            </div>\n                        </ng-container>\n                        <div>\n                            <a class=\"text-dark font-size-18\" [nzDropdownMenu]=\"chatSetting\" nz-dropdown [nzTrigger]=\"'click'\" nzPlacement=\"bottomRight\">\n                                <i nz-icon nzType=\"setting\" theme=\"outline\"></i>\n                            </a>\n                            <nz-dropdown-menu #chatSetting=\"nzDropdownMenu\">\n                                <ul nz-menu>\n                                    <li nz-menu-item>1st menu item</li>\n                                    <li nz-menu-item>2nd menu item</li>\n                                    <li nz-menu-item>3rd menu item</li>\n                                </ul>\n                            </nz-dropdown-menu>\n                        </div>\n                    </div>\n                    <div class=\"conversation-body\" #scrollBottom>\n                        <ng-container *ngFor=\"let item of chatList\">\n                            <div *ngIf=\"chatId == item.name\">\n                                <div class=\"msg\" [ngClass]=\"{'msg-recipient':item.from == 'opposite', 'msg-sent': item.from == 'me', 'justify-content-center': item.msgType == 'date'}\" *ngFor=\"let item of item.msg\">                                  \n                                    <div class=\"m-r-10\" *ngIf=\"item.avatar.length > 1\">\n                                        <nz-avatar *ngIf=\"item.avatar.length > 1\" [nzIcon]=\"'user'\" [nzSrc]=\"item.avatar\"></nz-avatar>\n                                    </div>\n                                    <div class=\"bubble\" *ngIf=\"item.text.length > 1\" [ngClass]=\"{'m-l-50': item.avatar.length == 0}\">\n                                        <div class=\"bubble-wrapper\" [ngClass]=\"{'p-5': item.msgType == 'image'}\">\n                                            <span *ngIf=\"item.msgType == 'text'\">{{item.text}}</span>\n                                            <img *ngIf=\"item.msgType == 'image'\" [src]=\"item.text\" [alt]=\"item.text\">\n                                            <div *ngIf=\"item.msgType == 'file'\" class=\"d-flex align-items-center msg-file\">\n                                                <i class=\"font-size-25\" nz-icon nzType=\"file\" theme=\"outline\"></i>\n                                                <span class=\"m-l-10 font-weight-semibold text-link pointer\">\n                                                    <u>{{item.text}}</u>\n                                                </span>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class=\"font-weight-semibold font-size-12\" *ngIf=\"item.time.length > 1\">\n                                        {{item.time}}\n                                    </div>\n                                </div>\n                            </div>\n                        </ng-container>\n                    </div>    \n                    <div class=\"conversation-footer\">\n                        <input [(ngModel)]=\"msg\" class=\"chat-input\" type=\"text\" placeholder=\"Type a message...\" (keydown.enter)=\"sendMsg(msg);$event.preventDefault()\">\n                        <ul class=\"list-inline d-flex align-items-center m-b-0\">\n                            <li class=\"list-inline-item\">\n                                <a class=\"text-gray font-size-20\" nz-tooltip nzTooltipTitle=\"Emoji\">\n                                    <i nz-icon nzType=\"smile\" theme=\"outline\"></i>\n                                </a>\n                            </li> \n                            <li class=\"list-inline-item\">\n                                <a class=\"text-gray font-size-20\" nz-tooltip nzTooltipTitle=\"Attachment\">\n                                    <i nz-icon nzType=\"paper-clip\" theme=\"outline\"></i>\n                                </a>\n                            </li>    \n                            <li class=\"list-inline-item\">\n                                <button class=\"d-none d-md-block\" nz-button nzType=\"primary\" (click)=\"sendMsg(msg)\">\n                                    <span class=\"m-r-10\">Send</span>\n                                    <i class=\"far fa-paper-plane\"></i>\n                                </button>\n                                <a class=\"text-gray font-size-20 d-md-none d-block\" (click)=\"sendMsg(msg)\" nz-tooltip nzTooltipTitle=\"Attachment\">\n                                    <i nz-icon nzType=\"paper-clip\" theme=\"outline\"></i>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>        \n</div>","import { Component, AfterViewChecked, ElementRef, ViewChild, OnInit } from '@angular/core'\nimport { Chat } from '../../shared/interfaces/chat.type';\nimport { AppsService } from '../../shared/services/apps.service';\n\n@Component({\n    templateUrl: './chat.component.html'\n})\n\nexport class ChatComponent implements OnInit, AfterViewChecked {\n\n    @ViewChild('scrollBottom', { static: true }) private scrollContainer: ElementRef;\n    isContentOpen: boolean = false;\n    chatId: string;\n    msg: string;\n    chatList: Chat[];\n\n    constructor( private chatSvc : AppsService) { }\n\n    ngOnInit(){\n        this.chatSvc.getChatJSON().subscribe(data => {\n            this.chatList = data;\n        });\n        this.chatId = 'Erin Gonzales'\n        this.scrollToBottom();\n    }\n\n    ngAfterViewChecked() {        \n        this.scrollToBottom();        \n    } \n\n    selectChat(index: string){\n        this.chatId = index;\n        this.isContentOpen = true;\n    };\n\n    closeChatContent() {\n        this.isContentOpen = false;\n    }\n\n    sendMsg(msg: string) {\n        for (let i = 0; i < this.chatList.length; i++) {\n            if(this.chatId == this.chatList[i].name && this.msg.length > 1){\n                this.chatList[i].msg.push(\n                    {\n                        avatar: '',\n                        text: msg,\n                        from: 'me',\n                        time: '',\n                        msgType: 'text'\n                    }\n                ) \n            }\n        } \n        this.msg = '';   \n    }\n\n    scrollToBottom(): void {\n        try {\n            this.scrollContainer.nativeElement.scrollTop = this.scrollContainer.nativeElement.scrollHeight;\n        } catch(err) { }                 \n    }\n}  ","<nz-card>\n    <div class=\"row m-b-30\">\n        <div class=\"col-lg-8\">\n            <div class=\"d-md-flex\">\n                <div class=\"m-b-10 m-r-20\">\n                    <nz-input-group [nzPrefix]=\"prefixTemplate\">\n                        <input type=\"text\" nz-input placeholder=\"Search Project\" [(ngModel)]=\"searchInput\" (ngModelChange)=\"search()\">\n                    </nz-input-group>      \n                    <ng-template #prefixTemplate>\n                        <i nz-icon nzType=\"search\" class=\"opacity-05\"></i>\n                    </ng-template>   \n                </div>\n                <div class=\"m-b-10 m-r-20 d-flex align-items-center\">\n                    <nz-select style=\"min-width: 220px;\" class=\"w-100\" nzPlaceHolder=\"Status\">\n                        <nz-option nzLabel=\"All\" nzValue=\"all\"></nz-option>\n                        <nz-option nzLabel=\"Approved\" nzValue=\"approved\"></nz-option>\n                        <nz-option nzLabel=\"Pending\" nzValue=\"pending\"></nz-option>\n                        <nz-option nzLabel=\"Rejected\" nzValue=\"rejected\"></nz-option>\n                    </nz-select>\n                </div>\n            </div>          \n        </div>\n        <div class=\"col-lg-4 text-right\">\n            <button nz-button nzType=\"primary\">\n                <i nz-icon nzType=\"file-excel\" theme=\"outline\"></i>\n                <span>Export</span>\n            </button>\n        </div>\n    </div>\n    <nz-table #ordersListTable [nzData]=\"displayData\" >\n        <thead>\n            <tr>\n                <th *ngFor=\"let column of orderColumn\" [nzSortFn]=\"column.compare\">{{ column.title }}</th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr *ngFor=\"let item of ordersListTable.data;  let i=index\">\n                <td>#{{item.id}}</td>\n                <td>\n                    <div class=\"d-flex align-items-center\">\n                        <nz-avatar [nzSize]=\"30\" nzIcon=\"user\" [nzSrc]=\"item.avatar\"></nz-avatar>\n                        <h6 class=\"m-l-10 m-b-0\">{{item.name}}</h6>\n                    </div>\n                </td>\n                <td>{{item.date}}</td>\n                <td>${{item.amount | number:'3.2-5'}}</td>\n                <td>\n                    <nz-badge *ngIf=\"item.status == 'approved'\" nzStatus=\"success\"></nz-badge>\n                    <nz-badge *ngIf=\"item.status == 'rejected'\" nzStatus=\"error\"></nz-badge>\n                    <nz-badge *ngIf=\"item.status == 'pending'\"  nzStatus=\"processing\"></nz-badge> \n                    <span class=\"text-capitalize\">{{item.status}}</span>\n                </td>\n                <td class=\"text-md-right\">\n                    <a class=\"m-r-5\" nz-button nzType=\"default\" nzShape=\"circle\" nz-tooltip nzTooltipTitle=\"Edit\">\n                        <i nz-icon nzType=\"edit\" theme=\"outline\"></i>\n                    </a>\n                    <button nz-button nzType=\"default\" nzShape=\"circle\" nz-tooltip nzTooltipTitle=\"Delete\">\n                        <i nz-icon nzType=\"delete\" theme=\"outline\"></i>\n                    </button>\n                </td>\n            </tr>\n        </tbody>\n    </nz-table>\n</nz-card>\n","import { Component } from '@angular/core';\nimport { TableService } from '../../../shared/services/table.service';\nimport { NzTableFilterFn, NzTableFilterList, NzTableSortFn, NzTableSortOrder } from 'ng-zorro-antd/table';\n\ninterface DataItem {\n    id: number;\n    name: string;\n    date: string;\n    amount: number;\n    status:  string;\n}\n\n@Component({\n    templateUrl: './orders-list.component.html'\n})\n\nexport class OrdersListComponent  {\n\n    allChecked: boolean = false;\n    indeterminate: boolean = false;\n    displayData = [];\n    searchInput: string\n\n    orderColumn = [\n        {\n            title: 'ID',\n            compare: (a: DataItem, b: DataItem) => a.id - b.id,\n        },\n        {\n            title: 'Customer',\n            compare: (a: DataItem, b: DataItem) => a.name.localeCompare(b.name)\n        },\n        {\n            title: 'Date',\n            compare: (a: DataItem, b: DataItem) => a.name.localeCompare(b.name)\n        },\n        {\n            title: 'Amount',\n            compare: (a: DataItem, b: DataItem) => a.amount - b.amount,\n        },\n        {\n            title: 'Status',\n            compare: (a: DataItem, b: DataItem) => a.name.localeCompare(b.name)\n        },\n        {\n            title: ''\n        }\n    ]\n\n    ordersList = [\n        {\n            id: 5331,\n            name: 'Erin Gonzales',\n            avatar: 'assets/images/avatars/thumb-1.jpg',\n            date: '8 May 2019',\n            amount: 137,\n            status: 'approved',\n            checked : false\n        },\n        {\n            id: 5375,\n            name: 'Darryl Day',\n            avatar: 'assets/images/avatars/thumb-2.jpg',\n            date: '6 May 2019',\n            amount: 322,\n            status: 'approved',\n            checked : false\n        },\n        {\n            id: 5762,\n            name: 'Marshall Nichols',\n            avatar: 'assets/images/avatars/thumb-3.jpg',\n            date: '1 May 2019',\n            amount: 543,\n            status: 'approved',\n            checked : false\n        },\n        {\n            id: 5865,\n            name: 'Virgil Gonzales',\n            avatar: 'assets/images/avatars/thumb-4.jpg',\n            date: '28 April 2019',\n            amount: 876,\n            status: 'pending',\n            checked : false\n        },\n        {\n            id: 5213,\n            name: 'Nicole Wyne',\n            avatar: 'assets/images/avatars/thumb-5.jpg',\n            date: '28 April 2019',\n            amount: 241,\n            status: 'approved',\n            checked : false\n        },\n        {\n            id: 5311,\n            name: 'Riley Newman',\n            avatar: 'assets/images/avatars/thumb-6.jpg',\n            date: '19 April 2019',\n            amount: 872,\n            status: 'rejected',\n            checked : false\n        },\n        {\n            id: 5387,\n            name: 'Pamela Wanda',\n            avatar: 'assets/images/avatars/thumb-7.jpg',\n            date: '18 April 2019',\n            amount: 728,\n            status: 'approved',\n            checked : false\n        },\n        {\n            id: 5390,\n            name: 'Pamela Wanda',\n            avatar: 'assets/images/avatars/thumb-7.jpg',\n            date: '16 April 2019',\n            amount: 802,\n            status: 'pending',\n            checked : false\n        },\n        {\n            id: 5317,\n            name: 'Lilian Stone',\n            avatar: 'assets/images/avatars/thumb-8.jpg',\n            date: '12 April 2019',\n            amount: 569,\n            status: 'approved',\n            checked : false\n        },\n        {\n            id: 5291,\n            name: 'Victor Terry',\n            avatar: 'assets/images/avatars/thumb-9.jpg',\n            date: '10 April 2019',\n            amount: 132,\n            status: 'approved',\n            checked : false\n        },\n        {\n            id: 5288,\n            name: 'Wilma Young',\n            avatar: 'assets/images/avatars/thumb-10.jpg',\n            date: '8 April 2019',\n            amount: 528,\n            status: 'rejected',\n            checked : false\n        },\n        {\n            id: 5301,\n            name: 'Jane Wilson',\n            avatar: 'assets/images/avatars/thumb-11.jpg',\n            date: '8 April 2019',\n            amount: 632,\n            status: 'approved',\n            checked : false\n        },\n        {\n            id: 5355,\n            name: 'Evelyn Silva',\n            avatar: 'assets/images/avatars/thumb-12.jpg',\n            date: '6 April 2019',\n            amount: 987,\n            status: 'approved',\n            checked : false\n        },\n    ]\n\n    constructor(private tableSvc : TableService) {\n        this.displayData = this.ordersList\n    }\n\n    search() {\n        const data = this.ordersList\n        this.displayData = this.tableSvc.search(this.searchInput, data )\n    }\n\n}    ","import { Component } from '@angular/core';\nimport { NzModalService } from 'ng-zorro-antd/modal';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { NzMessageService } from 'ng-zorro-antd/message';\nimport { NzUploadFile } from 'ng-zorro-antd/upload';\n\n@Component({\n    templateUrl: './product.component.html'\n})\n\nexport class ProductComponent  {\n\n    isEdit: boolean = false;\n    productEditForm: FormGroup;\n    previewImage: string = '';\n    previewVisible: boolean = false;\n\n    fileList = [\n        {\n            uid: -1,\n            name: 'product-1.jpg',\n            status: 'done',\n            url: 'assets/images/others/product-1.jpg'\n        },\n        {\n            uid: 0,\n            name: 'product-2.jpg',\n            status: 'done',\n            url: 'assets/images/others/product-2.jpg'\n        },\n        {\n            uid: 1,\n            name: 'product-3.jpg',\n            status: 'done',\n            url: 'assets/images/others/product-3.jpg'\n        }\n    ];\n\n    productData = {\n        productName: 'Skinny Men Blazer',\n        price: 199,\n        category: 'Cloths',\n        brand: 'H&M',\n        status: 'In Stock',\n        size: ['S', ' M', ' L', ' XL'],\n        colors: ['Dark Blue', 'Gray', 'Gray Blue'],\n        fit: 'Skinny',\n        material: ['Polyester'],\n        shipFrom: 'Columbia',\n        description: '<p><span style=\"color: rgb(114, 132, 154);\">Special cloth alert. The key to more success is to have a lot of pillows. Surround yourself with angels, positive energy, beautiful people, beautiful souls, clean heart, angel. They will try to close the door on you, just open it. A major key, never panic. Don’t panic, when it gets crazy and rough, don’t panic, stay calm. They key is to have every key, the key to open every door.</span></p><p><span style=\"color: rgb(114, 132, 154);\">The other day the grass was brown, now it’s green because I ain’t give up. Never surrender. Lion! I’m up to something. Always remember in the jungle there’s a lot of they in there, after you overcome they, you will make it to paradise.</span></p>'\n    }\n\n    constructor(private modalService: NzModalService, private fb: FormBuilder, private msg: NzMessageService) {\n    }\n    \n    ngOnInit(): void {\n        this.productEditForm = this.fb.group({\n            productName:    [ this.productData.productName,     [ Validators.required ] ],\n            price:          [ this.productData.price,           [ Validators.required ] ],\n            category:       [ this.productData.category,        [ Validators.required ] ],\n            brand:          [ this.productData.brand,           [ Validators.required ] ],\n            status:         [ this.productData.status,          [ Validators.required ] ],\n            size:           [ this.productData.size,            [ Validators.required ] ],\n            colors:         [ this.productData.colors,          [ Validators.required ] ],\n            fit:            [ this.productData.fit,             [ Validators.required ] ],\n            material:       [ this.productData.material,        [ Validators.required ] ],\n            shipFrom:       [ this.productData.shipFrom,        [ Validators.required ] ],\n            description:    [ this.productData.description,     [ Validators.required ] ],\n        });\n    }\n\n    submitForm(): void {\n        for (const i in this.productEditForm.controls) {\n            this.productEditForm.controls[ i ].markAsDirty();\n            this.productEditForm.controls[ i ].updateValueAndValidity();\n        }\n    }\n\n    edit() {\n        this.isEdit = true;\n    }\n\n    editClose() {\n        this.isEdit = false;\n    }\n\n    save() {\n        this.modalService.confirm({\n            nzTitle  : '<i>Do you want your changes?</i>',\n            nzOnOk   : () => this.editClose()\n        });\n    }\n\n    handlePreview = (file: NzUploadFile) => {\n        this.previewImage = file.url || file.thumbUrl;\n        this.previewVisible = true;\n    }\n\n    editorConfig = {\n        toolbar: [\n            ['bold', 'italic', 'underline', 'strike'],        \n            ['blockquote', 'code-block'],\n            [{ 'header': 1 }, { 'header': 2 }],               \n            [{ 'list': 'ordered'}, { 'list': 'bullet' }],\n            [{ 'size': ['small', false, 'large', 'huge'] }],  \n            [{ 'align': [] }],\n            ['link', 'image']                        \n        ]\n    };\n}","<div class=\"page-header has-tab\">\n    <div class=\"d-md-flex m-b-15 align-items-center justify-content-between\">\n        <div class=\"media align-items-center m-b-15\">\n            <nz-avatar nzShape=\"square\" [nzSize]=\"70\" nzSrc=\"assets/images/others/thumb-16.jpg\"></nz-avatar>\n            <div class=\"m-l-15\">\n                <h4 class=\"m-b-0\">{{productEditForm.controls.productName.value}}</h4>\n                <p class=\"text-muted m-b-0\">Code: #5325</p>\n            </div>\n        </div>\n        <div class=\"m-b-15\">\n            <button nz-button nzType=\"primary\" *ngIf=\"!isEdit\" (click)=\"edit()\">\n                <i nz-icon nzType=\"edit\" theme=\"outline\"></i>\n                <span>Edit</span>\n            </button>\n            <button nz-button nzType=\"default\" *ngIf=\"isEdit\" (click)=\"save()\">\n                <i nz-icon nzType=\"save\" theme=\"outline\"></i>\n                <span>Save</span>\n            </button>\n        </div>\n    </div>\n</div>\n<nz-tabset class=\"page-header-tab\" *ngIf=\"!isEdit\">\n    <nz-tab nzTitle=\"Overview\">\n        <div class=\"row\">\n            <div class=\"col-md-3\">\n                <nz-card>\n                    <div class=\"media align-items-center\">\n                        <i class=\"font-size-40 text-success\" nz-icon nzType=\"smile\" theme=\"outline\"></i>\n                        <div class=\"m-l-15\">\n                            <p class=\"m-b-0 text-muted\">10 ratings</p>\n                            <nz-rate [ngModel]=\"4.5\" nzDisabled></nz-rate>\n                        </div>\n                    </div>\n                </nz-card>\n            </div>\n            <div class=\"col-md-3\">\n                <nz-card>\n                    <div class=\"media align-items-center\">\n                        <i class=\"font-size-40 text-primary\" nz-icon nzType=\"shopping-cart\" theme=\"outline\"></i>\n                        <div class=\"m-l-15\">\n                            <p class=\"m-b-0 text-muted\">Sales</p>\n                            <h3 class=\"m-b-0 ls-1\">1,521</h3>\n                        </div>\n                    </div>\n                </nz-card>\n            </div>\n            <div class=\"col-md-3\">\n                <nz-card>\n                    <div class=\"media align-items-center\">\n                        <i class=\"font-size-40 text-primary\" nz-icon nzType=\"message\" theme=\"outline\"></i>\n                        <div class=\"m-l-15\">\n                            <p class=\"m-b-0 text-muted\">Reviews</p>\n                            <h3 class=\"m-b-0 ls-1\">27</h3>\n                        </div>\n                    </div>\n                </nz-card>\n            </div>\n            <div class=\"col-md-3\">\n                <nz-card>\n                    <div class=\"media align-items-center\">\n                        <i class=\"font-size-40 text-primary\" nz-icon nzType=\"stock\" theme=\"outline\"></i>\n                        <div class=\"m-l-15\">\n                            <p class=\"m-b-0 text-muted\">Available Stock</p>\n                            <h3 class=\"m-b-0 ls-1\">152</h3>\n                        </div>\n                    </div>\n                </nz-card>\n            </div>\n        </div>\n        <nz-card>\n            <h5>Basic Info</h5>\n            <table class=\"product-info-table m-t-20\">\n                <tbody>\n                    <tr>\n                        <td>Price:</td>\n                        <td class=\"text-dark font-weight-semibold\">${{productEditForm.controls.price.value}}.00</td>\n                    </tr>\n                    <tr>\n                        <td>Category:</td>\n                        <td>{{productEditForm.controls.category.value}}</td>\n                    </tr>\n                    <tr>\n                        <td>Brand:</td>\n                        <td>{{productEditForm.controls.brand.value}}</td>\n                    </tr>\n                    <tr>\n                        <td>Tax Rate:</td>\n                        <td>10%</td>\n                    </tr>\n                    <tr>\n                        <td>Status:</td>\n                        <td>\n                            <nz-tag *ngIf=\"productEditForm.controls.status.value == 'In Stock'\" [nzColor]=\"'cyan'\">{{productEditForm.controls.status.value}}</nz-tag>\n                            <nz-tag *ngIf=\"productEditForm.controls.status.value == 'Out of Stock'\" [nzColor]=\"'red'\">{{productEditForm.controls.status.value}}</nz-tag>\n                            <nz-tag *ngIf=\"productEditForm.controls.status.value == 'Pending'\" [nzColor]=\"'gold'\">{{productEditForm.controls.status.value}}</nz-tag>\n                        </td>\n                    </tr>\n                </tbody>\n            </table> \n        </nz-card>\n        <nz-card>\n            <h5>Option Info</h5>\n            <table class=\"product-info-table m-t-20\">\n                <tbody>\n                    <tr>\n                        <td>Sizes:</td>\n                        <td>{{productEditForm.controls.size.value}}</td>\n                    </tr>\n                    <tr>\n                        <td>Colors:</td>\n                        <td>\n                            <span class=\"m-r-20\" *ngFor=\"let item of productEditForm.controls.colors.value\">\n                                <span class=\"product-color\">\n                                    <nz-badge *ngIf=\"item == 'Dark Blue'\" nzStatus=\"default\" nzColor=\"#4c4e69\"></nz-badge>\n                                    <nz-badge *ngIf=\"item == 'Gray'\" nzStatus=\"default\" nzColor=\"#868686\"></nz-badge>\n                                    <nz-badge *ngIf=\"item == 'Gray Blue'\" nzStatus=\"default\" nzColor=\"#8498c7\"></nz-badge>\n                                </span>\n                                <span>{{item}}</span>\n                            </span>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>Fit:</td>\n                        <td>{{productEditForm.controls.fit.value}} Fit</td>\n                    </tr>\n                    <tr>\n                        <td>Material:</td>\n                        <td>{{productEditForm.controls.material.value}}</td>\n                    </tr>\n                    <tr>\n                        <td>Ship From:</td>\n                        <td>{{productEditForm.controls.shipFrom.value}}</td>\n                    </tr>\n                </tbody>\n            </table> \n        </nz-card>\n        <nz-card nzTitle=\"Product Description\">\n            <div [innerHTML]=\"productEditForm.controls.description.value\"></div>\n        </nz-card>    \n    </nz-tab>\n    <nz-tab nzTitle=\"Product Images\">\n        <nz-card>\n            <div class=\"row\">\n                <div *ngFor=\"let item of fileList\" class=\"col-md-3\">\n                    <img class=\"img-fluid\" [src]=\"item.url == null ? 'assets/images/others/local-image.jpg' : item.url\" [alt]=\"item.name\">\n                </div>\n            </div>\n        </nz-card>\n    </nz-tab>\n</nz-tabset>\n<form nz-form nzLayout=\"vertical\" [formGroup]=\"productEditForm\" *ngIf=\"isEdit\">\n    <nz-tabset class=\"page-header-tab\">\n        <nz-tab nzTitle=\"Basic Info\">\n            <nz-card>\n                <nz-form-item>\n                    <nz-form-label nzFor=\"productName\">Product Name</nz-form-label>\n                    <nz-form-control nzErrorTip=\"Please input this field!\">\n                        <input nz-input formControlName=\"productName\" type=\"text\">\n                    </nz-form-control>\n                </nz-form-item>\n                <nz-form-item>\n                    <nz-form-label nzFor=\"price\">Price</nz-form-label>\n                    <nz-form-control nzErrorTip=\"Please input this field!\">\n                        <nz-input-group [nzPrefix]=\"pricePrefix\">\n                            <input nz-input formControlName=\"price\" type=\"text\">\n                        </nz-input-group>\n                        <ng-template #pricePrefix>\n                            <span>$</span>\n                        </ng-template>\n                    </nz-form-control>\n                </nz-form-item>\n                <nz-form-item>\n                    <nz-form-label nzFor=\"category\">Category</nz-form-label>\n                    <nz-form-control nzErrorTip=\"Please input this field!\">\n                        <nz-select formControlName=\"category\" class=\"w-100\">\n                            <nz-option nzLabel=\"Cloths\" nzValue=\"Cloths\"></nz-option>\n                            <nz-option nzLabel=\"Home Decoration\" nzValue=\"Home Decoration\"></nz-option>\n                            <nz-option nzLabel=\"Eletronic\" nzValue=\"Eletronic\"></nz-option>\n                            <nz-option nzLabel=\"Jewellery\" nzValue=\"Jewellery\"></nz-option>\n                        </nz-select>\n                    </nz-form-control>\n                </nz-form-item>\n                <nz-form-item>\n                    <nz-form-label nzFor=\"brand\">Brand</nz-form-label>\n                    <nz-form-control nzErrorTip=\"Please input this field!\">\n                        <input nz-input formControlName=\"brand\" type=\"text\">\n                    </nz-form-control>\n                </nz-form-item>\n                <nz-form-item>\n                    <nz-form-label nzFor=\"status\">Status</nz-form-label>\n                    <nz-form-control nzErrorTip=\"Please input this field!\">\n                        <nz-select formControlName=\"status\" class=\"w-100\">\n                            <nz-option nzLabel=\"In Stock\" nzValue=\"In Stock\"></nz-option>\n                            <nz-option nzLabel=\"Out of Stock\" nzValue=\"Out of Stock\"></nz-option>\n                            <nz-option nzLabel=\"Pending\" nzValue=\"Pending\"></nz-option>\n                        </nz-select>\n                    </nz-form-control>\n                </nz-form-item>\n            </nz-card>\n        </nz-tab>\n        <nz-tab nzTitle=\"Option Info\">\n            <nz-card >\n                <nz-form-item>\n                    <nz-form-control nzErrorTip=\"Please input this field!\">\n                        <nz-form-label nzFor=\"size\">Status</nz-form-label>\n                        <nz-select formControlName=\"size\" class=\"w-100\" nzMode=\"multiple\">\n                            <nz-option nzLabel=\"40\" nzValue=\"40\"></nz-option>\n                            <nz-option nzLabel=\"42\" nzValue=\"42\"></nz-option>\n                            <nz-option nzLabel=\"44\" nzValue=\"44\"></nz-option>\n                            <nz-option nzLabel=\"46\" nzValue=\"46\"></nz-option>\n                            <nz-option nzLabel=\"48\" nzValue=\"48\"></nz-option>\n                            <nz-option nzLabel=\"50\" nzValue=\"50\"></nz-option>\n                            <nz-option nzLabel=\"50\" nzValue=\"50\"></nz-option>\n                            <nz-option nzLabel=\"52\" nzValue=\"52\"></nz-option>\n                            <nz-option nzLabel=\"54\" nzValue=\"54\"></nz-option>\n                            <nz-option nzLabel=\"56\" nzValue=\"56\"></nz-option>\n                            <nz-option nzLabel=\"58\" nzValue=\"58\"></nz-option>\n                            <nz-option nzLabel=\"60\" nzValue=\"60\"></nz-option>\n                        </nz-select>\n                    </nz-form-control>\n                </nz-form-item>\n                <nz-form-item>\n                    <nz-form-control nzErrorTip=\"Please input this field!\">\n                        <nz-form-label nzFor=\"colors\">Colors</nz-form-label>\n                        <nz-select formControlName=\"colors\" class=\"w-100\" nzMode=\"multiple\">\n                            <nz-option nzLabel=\"Dark Blue\" nzValue=\"Dark Blue\"></nz-option>\n                            <nz-option nzLabel=\"Gray\" nzValue=\"Gray\"></nz-option>\n                            <nz-option nzLabel=\"Gray Blue\" nzValue=\"Gray Blue\"></nz-option>\n                        </nz-select>\n                    </nz-form-control>\n                </nz-form-item>\n                <nz-form-item>\n                    <nz-form-control nzErrorTip=\"Please input this field!\">\n                        <nz-form-label nzFor=\"fit\">Fit</nz-form-label>\n                        <nz-select formControlName=\"fit\" class=\"w-100\">\n                            <nz-option nzLabel=\"Skinny\" nzValue=\"Skinny\"></nz-option>\n                            <nz-option nzLabel=\"Slim\" nzValue=\"Slim\"></nz-option>\n                            <nz-option nzLabel=\"Regular\" nzValue=\"Regular\"></nz-option>\n                        </nz-select>\n                    </nz-form-control>\n                </nz-form-item>\n                <nz-form-item>\n                    <nz-form-control nzErrorTip=\"Please input this field!\">\n                        <nz-form-label nzFor=\"material\">Material</nz-form-label>\n                        <nz-select formControlName=\"material\" class=\"w-100\" nzMode=\"tags\"></nz-select>\n                    </nz-form-control>\n                </nz-form-item>\n                <nz-form-item>\n                    <nz-form-control nzErrorTip=\"Please input this field!\">\n                        <nz-form-label nzFor=\"shipFrom\">Ship From</nz-form-label>\n                        <nz-select formControlName=\"shipFrom\" class=\"w-100\">\n                            <nz-option nzLabel=\"Columbia\" nzValue=\"Columbia\"></nz-option>\n                            <nz-option nzLabel=\"Brazil\" nzValue=\"Brazil\"></nz-option>\n                            <nz-option nzLabel=\"Chile\" nzValue=\"Chile\"></nz-option>\n                            <nz-option nzLabel=\"Argentina\" nzValue=\"Argentina\"></nz-option>\n                        </nz-select>\n                    </nz-form-control>\n                </nz-form-item>\n            </nz-card>\n        </nz-tab>\n        <nz-tab nzTitle=\"Description\">\n            <nz-card>\n                <quill-editor formControlName=\"description\" [style]=\"{height: '250px'}\" [modules]=\"editorConfig\" placeholder=\"\"></quill-editor>\n            </nz-card>\n        </nz-tab>\n        <nz-tab nzTitle=\"Product Images\">\n            <nz-card>\n                <nz-upload\n                    nzAction=\"https://jsonplaceholder.typicode.com/posts/\"\n                    nzListType=\"picture-card\"\n                    [(nzFileList)]=\"fileList\"\n                    [nzShowButton]=\"fileList.length < 15\"\n                    [nzPreview]=\"handlePreview\">\n                    <i nz-icon nzType=\"plus\"></i>\n                    <div class=\"ant-upload-text\">Upload</div>\n                </nz-upload>\n                <nz-modal [nzVisible]=\"previewVisible\" [nzContent]=\"modalContent\" [nzFooter]=\"null\" (nzOnCancel)=\"previewVisible=false\">\n                    <ng-template #modalContent>\n                        <img [src]=\"previewImage\" [ngStyle]=\"{ 'width': '100%' }\" />\n                    </ng-template>\n                </nz-modal>\n            </nz-card>\n        </nz-tab>\n    </nz-tabset>  \n</form>  ","<nz-card>\n    <div class=\"row m-b-30\">\n        <div class=\"col-lg-8\">\n            <div class=\"d-md-flex\">\n                <div class=\"m-b-10 m-r-20\">\n                    <nz-input-group [nzPrefix]=\"prefixTemplate\">\n                        <input type=\"text\" nz-input placeholder=\"Search Project\" [(ngModel)]=\"searchInput\" (ngModelChange)=\"search()\">\n                    </nz-input-group>      \n                    <ng-template #prefixTemplate>\n                        <i nz-icon nzType=\"search\" class=\"opacity-05\"></i>\n                    </ng-template>   \n                </div>\n                <div class=\"m-b-10 m-r-20 d-flex align-items-center\">\n                    <nz-select style=\"min-width: 220px;\" class=\"w-100\" nzPlaceHolder=\"Category\" [(ngModel)]=\"selectedCategory\" (ngModelChange)=\"categoryChange($event)\">\n                        <nz-option nzLabel=\"All\" nzValue=\"All\"></nz-option>\n                        <nz-option nzLabel=\"Home Decoration\" nzValue=\"Home Decoration\"></nz-option>\n                        <nz-option nzLabel=\"Eletronic\" nzValue=\"Eletronic\"></nz-option>\n                        <nz-option nzLabel=\"Jewellery\" nzValue=\"Jewellery\"></nz-option>\n                    </nz-select>\n                </div>\n                <div class=\"m-b-10 m-r-20 d-flex align-items-center\">\n                    <nz-select style=\"min-width: 220px;\" class=\"w-100\" nzPlaceHolder=\"Status\" [(ngModel)]=\"selectedStatus\" (ngModelChange)=\"statusChange($event)\">\n                        <nz-option nzLabel=\"All\" nzValue=\"All\"></nz-option>\n                        <nz-option nzLabel=\"In Stock\" nzValue=\"in stock\"></nz-option>\n                        <nz-option nzLabel=\"Out Of Stock\" nzValue=\"out of stock\"></nz-option>\n                    </nz-select>\n                </div>\n            </div>          \n        </div>\n        <div class=\"col-lg-4 text-right\">\n            <a nz-button nzType=\"primary\">\n                <i nz-icon nzType=\"plus-circle\" theme=\"outline\"></i>\n                <span>Add Product</span>\n            </a>\n        </div>\n    </div>\n    <nz-table #productsListTable [nzData]=\"displayData\">\n        <thead>\n            <tr>\n                <th *ngFor=\"let column of orderColumn\" [nzSortFn]=\"column.compare\">{{ column.title }}</th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr *ngFor=\"let item of productsListTable.data;  let i=index\">\n                <td>#{{item.id}}</td>\n                <td>\n                    <div class=\"d-flex align-items-center\">\n                        <nz-avatar nzShape=\"square\" [nzSize]=\"60\" nzIcon=\"picture\" [nzSrc]=\"item.avatar\"></nz-avatar>\n                        <span class=\"m-l-10\">{{item.name}}</span>\n                    </div>\n                </td>\n                <td>{{item.category}}</td>\n                <td>${{item.price | number:'3.2-5'}}</td>\n                <td>\n                    {{item.quantity}}\n                </td>\n                <td>\n                    <nz-badge *ngIf=\"item.status == 'in stock'\" nzStatus=\"success\"></nz-badge>\n                    <nz-badge *ngIf=\"item.status == 'out of stock'\" nzStatus=\"error\"></nz-badge>\n                    <span class=\"text-capitalize\">{{item.status}}</span>\n                </td>\n                <td class=\"text-md-right\">\n                    <a class=\"m-r-5\" nz-button nzType=\"default\" nzShape=\"circle\" nz-tooltip nzTooltipTitle=\"Edit\" >\n                        <i nz-icon nzType=\"edit\" theme=\"outline\"></i>\n                    </a>\n                    <button nz-button nzType=\"default\" nzShape=\"circle\" nz-tooltip nzTooltipTitle=\"Delete\">\n                        <i nz-icon nzType=\"delete\" theme=\"outline\"></i>\n                    </button>\n                </td>\n            </tr>\n        </tbody>\n    </nz-table>\n</nz-card>","import { Component } from '@angular/core';\nimport { TableService } from '../../../shared/services/table.service';\n\ninterface DataItem {\n    id: number;\n    name: string;\n    category: string;\n    price: number;\n    quantity: number;\n    status:  string;\n}\n\n@Component({\n    templateUrl: './products-list.component.html'\n})\n\nexport class ProductsListComponent  {\n\n    selectedCategory: string;\n    selectedStatus: string;\n    searchInput: any;\n    displayData = [];\n\n    orderColumn = [\n        {\n            title: 'ID',\n            compare: (a: DataItem, b: DataItem) => a.id - b.id,\n        },\n        {\n            title: 'Product',\n            compare: (a: DataItem, b: DataItem) => a.name.localeCompare(b.name)\n        },\n        {\n            title: 'Category',\n            compare: (a: DataItem, b: DataItem) => a.category.localeCompare(b.category)\n        },\n        {\n            title: 'Price',\n            compare: (a: DataItem, b: DataItem) => a.price - b.price,\n        },\n        {\n            title: 'Stock',\n            compare: (a: DataItem, b: DataItem) => a.quantity - b.quantity,\n        },\n        {\n            title: 'Status',\n            compare: (a: DataItem, b: DataItem) => a.name.localeCompare(b.name)\n        },\n        {\n            title: ''\n        }\n    ]\n\n    productsList = [\n        {\n            id: 31,\n            name: 'Gray Sofa',\n            avatar: 'assets/images/others/thumb-9.jpg',\n            category: 'Home Decoration',\n            price: 912,\n            quantity: 23,\n            status: 'in stock',\n            checked : false\n        },\n        {\n            id: 32,\n            name: 'Beat Headphone',\n            avatar: 'assets/images/others/thumb-10.jpg',\n            category: 'Eletronic',\n            price: 137,\n            quantity: 56,\n            status: 'in stock',\n            checked : false\n        },\n        {\n            id: 33,\n            name: 'Wooden Rhino',\n            avatar: 'assets/images/others/thumb-11.jpg',\n            category: 'Home Decoration',\n            price: 912,\n            quantity: 12,\n            status: 'in stock',\n            checked : false\n        },\n        {\n            id: 34,\n            name: 'Red Chair',\n            avatar: 'assets/images/others/thumb-12.jpg',\n            category: 'Home Decoration',\n            price: 128,\n            quantity: 0,\n            status: 'out of stock',\n            checked : false\n        },\n        {\n            id: 35,\n            name: 'Wristband',\n            avatar: 'assets/images/others/thumb-13.jpg',\n            category: 'Eletronic',\n            price: 776,\n            quantity: 0,\n            status: 'out of stock',\n            checked : false\n        },\n        {\n            id: 36,\n            name: 'Charging Cable',\n            avatar: 'assets/images/others/thumb-14.jpg',\n            category: 'Eletronic',\n            price: 119,\n            quantity: 37,\n            status: 'in stock',\n            checked : false\n        },\n        {\n            id: 37,\n            name: 'Three Legs',\n            avatar: 'assets/images/others/thumb-15.jpg',\n            category: 'Home Decoration',\n            price: 199,\n            quantity: 17,\n            status: 'in stock',\n            checked : false\n        },\n    ]  \n    \n    constructor(private tableSvc : TableService) {\n        this.displayData = this.productsList\n    }\n\n    search(): void {\n        const data = this.productsList\n        this.displayData = this.tableSvc.search(this.searchInput, data )\n    }\n\n    categoryChange(value: string): void {\n        const data = this.productsList\n        value !== 'All'? this.displayData = data.filter(elm => elm.category === value) : this.displayData = data\n    }\n\n    statusChange(value: string): void {\n        const data = this.productsList\n        value !== 'All'? this.displayData = data.filter(elm => elm.status === value) : this.displayData = data\n    }\n}    ","<div class=\"file-manager-wrapper\">\n    <div class=\"file-manager-nav\" [ngClass]=\"{'nav-open': isNavOpen}\">\n        <div class=\"d-flex flex-column justify-content-between h-100\">\n            <div class=\"p-t-20\">\n                <ul nz-menu [nzMode]=\"'inline'\">\n                    <li nz-menu-item>\n                        <i class=\"text-primary\" nz-icon nzType=\"folder-open\" theme=\"outline\"></i>\n                        <span>My Files</span>\n                    </li>\n                    <li nz-menu-item>\n                        <i class=\"text-primary\" nz-icon nzType=\"clock-circle\" theme=\"outline\"></i>\n                        <span>Recent</span>\n                    </li>\n                    <li nz-menu-item>\n                        <i class=\"text-primary\" nz-icon nzType=\"share-alt\" theme=\"outline\"></i>\n                        <span>Shared with me</span>\n                    </li>\n                    <li nz-menu-item>\n                        <i class=\"text-primary\" nz-icon nzType=\"star\" theme=\"outline\"></i>\n                        <span>Favorite</span>\n                    </li>\n                    <li nz-menu-item>\n                        <i class=\"text-primary\" nz-icon nzType=\"delete\" theme=\"outline\"></i>\n                        <span>Trash</span>\n                    </li>\n                </ul>\n            </div>\n            <div class=\"m-b-30 m-h-25\">\n                <div class=\"d-flex justify-content-between\">\n                    <span class=\"text-gray\">Free Space</span>\n                    <span class=\"text-gray\">30%</span>\n                </div>\n                <nz-progress [nzPercent]=\"70\" nzSize=\"small\" [nzShowInfo]=\"false\"></nz-progress>\n                <div class=\"m-t-15\">\n                    <button nz-button nzType=\"default\" nzBlock>\n                        <i nz-icon nzType=\"upload\" theme=\"outline\"></i>\n                        <span class=\"m-l-5\">Upgrade</span>\n                    </button>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"file-manager-content\">\n        <div class=\"file-manager-content-header\">\n            <div class=\"file-manager-search\">\n                <i (click)=\"navToggler()\" *ngIf=\"isNavOpen\" nz-icon nzType=\"menu-fold\" theme=\"outline\" class=\"toggle-icon\"></i>\n                <i (click)=\"navToggler()\" *ngIf=\"!isNavOpen\" nz-icon nzType=\"menu-unfold\" theme=\"outline\" class=\"toggle-icon\"></i>\n                <i nz-icon nzType=\"search\" theme=\"outline\" class=\"search-icon\"></i>\n                <input placeholder=\"Search...\">\n            </div>\n            <div class=\"file-manager-tools\">\n                <ul class=\"list-inline m-b-0\">\n                    <li class=\"list-inline-item\">\n                        <nz-upload nzAction=\"https://jsonplaceholder.typicode.com/posts/\">\n                            <a class=\"text-dark\" nz-tooltip nzTooltipPlacement=\"bottom\" nzTooltipTitle=\"Add Files\">\n                                <i nz-icon nzType=\"file-add\" theme=\"outline\"></i>\n                            </a>\n                        </nz-upload>\n                    </li>\n                    <li class=\"list-inline-item\">\n                        <a *ngIf=\"!listView\" class=\"text-dark\" nz-tooltip nzTooltipPlacement=\"bottom\" nzTooltipTitle=\"List View\" (click)=\"changeView()\">\n                            <i nz-icon nzType=\"bars\" theme=\"outline\"></i>\n                        </a>\n                        <a *ngIf=\"listView\" class=\"text-dark\" nz-tooltip nzTooltipPlacement=\"bottom\" nzTooltipTitle=\"Column View\" (click)=\"changeView()\">\n                            <i nz-icon nzType=\"appstore\" theme=\"outline\"></i>\n                        </a>\n                    </li>\n                    <li class=\"list-inline-item\">\n                        <a class=\"text-dark\" nz-tooltip nzTooltipPlacement=\"bottom\" nzTooltipTitle=\"Setting\">\n                            <i nz-icon nzType=\"setting\" theme=\"outline\"></i>\n                        </a>\n                    </li>\n                </ul>\n            </div>\n        </div>    \n        <div class=\"file-manager-content-body\">\n            <div class=\"file-manager-content-files\">\n                <div class=\"unselect-bg\" (click)=\"unselectFile()\"></div>\n                <h5 class=\"relative\">Folders</h5>\n                <div class=\"file-wrapper m-t-20\" [ngClass]=\"{'list-view': listView}\">\n                    <ng-container *ngFor=\"let item of files\">\n                        <div class=\"file\" \n                            *ngIf=\"item.type == 'folder'\" \n                            [ngClass]=\"{'active': selectedFile === item.name}\" \n                            (click)=\"selectFile(item.name)\" \n                            (contextmenu)=\"contextMenu($event,contextDropdownTpl, item.name)\">\n                            <div class=\"media align-items-center\">\n                                <div class=\"m-r-15 font-size-30\">\n                                    <i [twoToneColor]=\"colorGold\" nz-icon nzType=\"folder-open\" theme=\"twotone\"></i>\n                                </div>\n                                <div>\n                                    <h6 class=\"mb-0\">{{item.name}}</h6>\n                                    <span class=\"font-size-13 text-muted\">{{item.size}}</span>\n                                </div>\n                            </div>\n                        </div>\n                    </ng-container>\n                    <nz-dropdown-menu #contextDropdownTpl=\"nzDropdownMenu\">\n                        <ul nz-menu nzInDropDown (nzClick)=\"close()\">\n                            <li nz-menu-item>\n                                <i nz-icon nzType=\"user-add\" theme=\"outline\"></i>\n                                <span class=\"m-l-5\">Share</span>\n                            </li>\n                            <li nz-menu-item>\n                                <i nz-icon nzType=\"edit\" theme=\"outline\"></i>\n                                <span class=\"m-l-5\">Rename</span>\n                            </li>\n                            <li nz-menu-item>\n                                <i nz-icon nzType=\"star\" theme=\"outline\"></i>\n                                <span class=\"m-l-5\">Mark as favorite</span>\n                            </li>\n                            <li nz-menu-divider></li>\n                            <li nz-menu-item>\n                                <i nz-icon nzType=\"download\" theme=\"outline\"></i>\n                                <span class=\"m-l-5\">Download</span>\n                            </li>\n                            <li nz-menu-divider></li>\n                            <li nz-menu-item>\n                                <i nz-icon nzType=\"delete\" theme=\"outline\"></i>\n                                <span class=\"m-l-5\">Remove</span>\n                            </li>\n                        </ul>\n                    </nz-dropdown-menu>\n                </div>\n                <h5 class=\"m-t-60 relative\">Files</h5>\n                <div class=\"file-wrapper m-t-20\" [ngClass]=\"{'list-view': listView}\">\n                    <ng-container *ngFor=\"let item of files\">\n                        <div class=\"file vertical\" \n                            *ngIf=\"item.type !== 'folder'\" \n                            [ngClass]=\"{'active': selectedFile == item.name}\" \n                            (click)=\"selectFile(item.name)\" \n                            (contextmenu)=\"contextMenu($event,contextDropdownTpl, item.name)\">\n                            <div class=\"font-size-40\">\n                                <i *ngIf=\"item.type == 'pdf'\" [twoToneColor]=\"colorRed\" nz-icon nzType=\"file-pdf\" theme=\"twotone\"></i>\n                                <i *ngIf=\"item.type == 'doc'\" [twoToneColor]=\"colorBlue\" nz-icon nzType=\"file-word\" theme=\"twotone\"></i>\n                                <i *ngIf=\"item.type == 'xls'\" [twoToneColor]=\"colorCyan\" nz-icon nzType=\"file-excel\" theme=\"twotone\"></i>\n                                <i *ngIf=\"item.type == 'ppt'\" [twoToneColor]=\"colorVolcano\" nz-icon nzType=\"file-ppt\" theme=\"twotone\"></i>\n                                <i *ngIf=\"item.type == 'txt'\" [twoToneColor]=\"colorPurple\" nz-icon nzType=\"file-text\" theme=\"twotone\"></i>\n                                <img *ngIf=\"item.type == 'image'\" [src]=\"item.url\" alt=\"\">\n                            </div>\n                            <div class=\"m-t-10\">\n                                <h6 class=\"mb-0\">{{item.name}}</h6>\n                                <span class=\"font-size-13 text-muted\">{{item.size}}</span>\n                            </div>\n                        </div>\n                    </ng-container>\n                </div>    \n            </div>\n            <div class=\"file-manager-content-details\" [ngClass]=\"{'details-open': isDetailsOpen}\">\n                <ng-container *ngFor=\"let item of files\">\n                    <div *ngIf=\"selectedFile == item.name\">\n                        <div class=\"p-h-25 p-v-15 d-flex justify-content-between align-items-center border-bottom\">\n                            <h5 class=\"m-b-0\">{{item.name}}</h5>\n                            <div class=\"content-details-close\">\n                                <a class=\"text-dark\" (click)=\"closeContentDetails()\">\n                                    <i nz-icon nzType=\"right-circle\" theme=\"outline\"></i>\n                                </a>\n                            </div>\n                        </div>\n                        <div class=\"m-b-10\">\n                            <div *ngIf=\"item.type !== 'image'\" class=\"d-flex justify-content-around display-3 align-items-center content-details-file\">\n                                <i *ngIf=\"item.type == 'folder'\" [twoToneColor]=\"colorGold\" nz-icon nzType=\"folder-open\" theme=\"twotone\"></i>\n                                <i *ngIf=\"item.type == 'pdf'\" [twoToneColor]=\"colorRed\" nz-icon nzType=\"file-pdf\" theme=\"twotone\"></i>\n                                <i *ngIf=\"item.type == 'doc'\" [twoToneColor]=\"colorBlue\" nz-icon nzType=\"file-word\" theme=\"twotone\"></i>\n                                <i *ngIf=\"item.type == 'xls'\" [twoToneColor]=\"colorCyan\" nz-icon nzType=\"file-excel\" theme=\"twotone\"></i>\n                                <i *ngIf=\"item.type == 'ppt'\" [twoToneColor]=\"colorVolcano\" nz-icon nzType=\"file-ppt\" theme=\"twotone\"></i>\n                                <i *ngIf=\"item.type == 'txt'\" [twoToneColor]=\"colorPurple\" nz-icon nzType=\"file-text\" theme=\"twotone\"></i>\n                            </div>\n                            <img class=\"img-fluid\" *ngIf=\"item.type == 'image'\" [src]=\"item.url\" alt=\"\">\n                        </div>\n                        <nz-tabset>\n                            <nz-tab nzTitle=\"Details\">\n                                <div class=\"p-h-25 p-v-15\">\n                                    <dl class=\"row m-b-10\">\n                                        <dt class=\"col-5 text-dark\">Type:</dt>\n                                        <dd class=\"col-7\">{{item.type}}</dd>\n                                    </dl>   \n                                    <dl class=\"row m-b-10\">\n                                        <dt class=\"col-5 text-dark\">Size:</dt>\n                                        <dd class=\"col-7\">{{item.size}}</dd>\n                                    </dl>   \n                                    <dl class=\"row m-b-10\">\n                                        <dt class=\"col-5 text-dark\">Modified:</dt>\n                                        <dd class=\"col-7\">{{item.modifiedDate}}</dd>\n                                    </dl>   \n                                    <dl class=\"row m-b-10\">\n                                        <dt class=\"col-5 text-dark\">Created:</dt>\n                                        <dd class=\"col-7\">{{item.date}}</dd>\n                                    </dl> \n                                    <dl class=\"row m-b-10\">\n                                        <dt class=\"col-5 text-dark\">Author:</dt>\n                                        <dd class=\"col-7\">{{item.author}}</dd>\n                                    </dl>    \n                                </div>\n                                <div class=\"border-top border-bottom p-h-25 p-v-10 d-flex align-items-center\">\n                                    <span class=\"text-dark font-weight-semibold m-r-10\">Add Description</span> \n                                    <a nz-button nzType=\"link\" nzShape=\"circle\" >\n                                        <i nz-icon nzType=\"edit\" theme=\"outline\"></i>\n                                    </a>\n                                </div> \n                            </nz-tab>\n                            <nz-tab nzTitle=\"Activity\">\n                                <div class=\"p-h-20 p-v-15\">\n                                    <div class=\"m-b-25\" *ngFor=\"let item of item.activity; let last = last\">\n                                        <div class=\"p-b-10\" [ngClass]=\"{'border-bottom': !last}\">\n                                            <div class=\"d-flex align-items-center\">\n                                                <nz-avatar class=\"m-r-10\" nzIcon=\"user\" [nzSrc]=\"item.avatar\"></nz-avatar>\n                                                <div class=\"text-gray\">\n                                                    <span class=\"text-dark font-weight-semibold\">{{item.name}} </span>\n                                                    <span>{{item.action}} </span>\n                                                    <span>{{item.files.length}} {{item.text}}</span>\n                                                    <div class=\"text-muted font-size-13\">\n                                                        {{item.time}}\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <ul class=\"list-unstyled m-l-50 m-t-15\">\n                                                <li class=\"m-b-15\" *ngFor=\"let item of item.files\">\n                                                    <nz-avatar *ngIf=\"item.substr(item.length -3) == 'pdf'\" nzIcon=\"file-pdf\" nzSize=\"small\" class=\"ant-avatar-red m-r-10\"></nz-avatar>\n                                                    <nz-avatar *ngIf=\"item.substr(item.length -3) == 'doc'\" nzIcon=\"file-word\" nzSize=\"small\" class=\"ant-avatar-blue m-r-10\"></nz-avatar>\n                                                    <nz-avatar *ngIf=\"item.substr(item.length -3) == 'xls'\" nzIcon=\"file-excel\" nzSize=\"small\" class=\"ant-avatar-cyan m-r-10\"></nz-avatar>\n                                                    <nz-avatar *ngIf=\"item.substr(item.length -3) == 'ppt'\" nzIcon=\"file-ppt\" nzSize=\"small\" class=\"ant-avatar-volcano m-r-10\"></nz-avatar>\n                                                    <nz-avatar *ngIf=\"item.substr(item.length -3) == 'jpg' || item.substr(item.length -3) == 'png'\" nzIcon=\"picture\" nzSize=\"small\" class=\"ant-avatar-purple m-r-10\"></nz-avatar>\n                                                    <span class=\"text-gray\">{{item}}</span>\n                                                </li>\n                                            </ul>\n                                        </div>\n                                    </div>\n                                </div>\n                            </nz-tab>\n                        </nz-tabset>\n                    </div>\n                </ng-container>   \n                <div class=\"content-details-no-data\" *ngIf=\"selectedFile == ''\">\n                    <div class=\"text-center\">\n                        <img class=\"img-fluid opacity-04\" src=\"assets/images/others/file-manager.png\" alt=\"\">\n                        <p class=\"text-muted m-t-20\">Select folder or file to view details</p>\n                    </div>\n                </div> \n            </div>    \n        </div>    \n    </div>\n</div>    ","import { Component, TemplateRef  } from '@angular/core';\nimport { ThemeConstantService } from '../../shared/services/theme-constant.service';\nimport { AppsService } from '../../shared/services/apps.service';\nimport { NzContextMenuService, NzDropdownMenuComponent } from 'ng-zorro-antd/dropdown'\n\nimport { Files } from '../../shared/interfaces/file-manager.type';\n\n@Component({\n    templateUrl: './file-manager.component.html'\n})\n\nexport class FileManagerComponent  {\n\n    files : Files[];\n\n    themeColors = this.colorConfig.get().colors;\n    selectedFile: string = '';\n    listView:boolean = false;\n    isDetailsOpen: boolean = false;\n    isNavOpen: boolean = false;\n\n    colorRed = this.themeColors.red;\n    colorBlue = this.themeColors.blue;\n    colorCyan = this.themeColors.cyan;\n    colorGold = this.themeColors.gold;\n    colorVolcano = this.themeColors.volcano;\n    colorPurple = this.themeColors.purple;\n\n    \n\n    constructor(\n        private colorConfig : ThemeConstantService,\n        private fileManagerSvc: AppsService,\n        private nzContextMenuService: NzContextMenuService ) {\n    }\n\n    ngOnInit(): void {\n        this.fileManagerSvc.getFileManagerJson().subscribe(data => {\n            this.files = data;\n        });\n    }\n\n    changeView() {\n        this.listView = !this.listView;\n    }\n\n    contextMenu($event: MouseEvent, contextDropdownTpl: NzDropdownMenuComponent, selected: string): void {\n        this.nzContextMenuService.create($event, contextDropdownTpl);\n        this.selectedFile = selected;\n        this.isDetailsOpen = true;\n    }\n\n    selectFile(selected: string) {\n        this.selectedFile = selected;\n        this.isDetailsOpen = true;\n    }\n\n    unselectFile() {\n        this.selectedFile = '';\n    }\n\n    close(): void {\n        this.nzContextMenuService.close();\n    }\n\n    closeContentDetails() {\n        this.isDetailsOpen = false;\n    }\n\n    navToggler() {\n        this.isNavOpen = !this.isNavOpen;\n    }\n}","<div class=\"mail-wrapper\">\n    <div class=\"mail-nav\" [ngClass]=\"{'nav-open': isNavOpen}\">\n        <div class=\"p-h-25 m-t-25\">\n            <div class=\"p-b-15 d-md-none d-inline-block\">\n                <a class=\"text-dark font-size-18\" (click)=\"openNav()\">\n                    <i nz-icon nzType=\"menu-fold\" theme=\"outline\"></i>\n                </a>\n            </div>\n            <button nz-button nzType=\"primary\" nzBlock (click)=\"compose()\">\n                <i nz-icon nzType=\"edit\" theme=\"outline\"></i>\n                <span class=\"m-l-5\">Compose</span>\n            </button>\n        </div>\n        <div class=\"p-v-15\">\n            <ul nz-menu [nzMode]=\"'inline'\">\n                <li nz-menu-item (click)=\"closeMail()\">\n                    <i nz-icon nzType=\"inbox\" theme=\"outline\"></i>\n                    <span>Inbox</span>\n                </li>\n                <li nz-menu-item>\n                    <i nz-icon nzType=\"mail\" theme=\"outline\"></i>\n                    <span>Sent Mail</span>\n                </li>\n                <li nz-menu-item>\n                    <i nz-icon nzType=\"file-done\" theme=\"outline\"></i>\n                    <span>Drafts</span>\n                </li>\n                <li nz-menu-item>\n                    <i nz-icon nzType=\"star\" theme=\"outline\"></i>\n                    <span>Favorite</span>\n                </li>\n                <li nz-menu-item>\n                    <i nz-icon nzType=\"delete\" theme=\"outline\"></i>\n                    <span>Deleted</span>\n                </li>\n                <li class=\"m-t-25\" nz-menu-group>\n                    <h6 title class=\"p-l-10 \">Labels</h6>\n                    <ul>\n                        <li nz-menu-item>\n                            <nz-badge nzStatus=\"success\"></nz-badge>\n                            <span>Works</span>\n                        </li>\n                        <li nz-menu-item>\n                            <nz-badge nzStatus=\"error\"></nz-badge>\n                            <span>Private</span>\n                        </li>\n                        <li nz-menu-item>\n                            <nz-badge nzStatus=\"warning\"></nz-badge>\n                            <span>Important</span>\n                        </li>\n                    </ul>\n                </li>\n            </ul>\n        </div>\n    </div>\n    <div class=\"mail-content\" *ngIf=\"isMailListOpen\">\n        <div class=\"p-h-10 p-v-5 d-md-none d-inline-block\">\n            <a class=\"text-dark font-size-18\" (click)=\"openNav()\">\n                <i nz-icon nzType=\"menu-unfold\" theme=\"outline\"></i>\n            </a>\n        </div>\n        <div class=\"d-flex align-items-center justify-content-between p-10\">\n            <div>\n                <label class=\"m-r-15\" nz-checkbox [(ngModel)]=\"allChecked\" (ngModelChange)=\"updateAllChecked()\" [nzIndeterminate]=\"indeterminate\"></label>\n                <nz-select class=\"d-none d-lg-inline-block\" style=\"width: 150px\" [(ngModel)]=\"filter\" nzSize=\"small\" nzPlaceHolder=\"Filter by\">\n                    <nz-option nzValue=\"all\" nzLabel=\"All\"></nz-option>\n                    <nz-option nzValue=\"unread\" nzLabel=\"Unread\"></nz-option>\n                    <nz-option nzValue=\"date\" nzLabel=\"Date\"></nz-option>\n                    <nz-option nzValue=\"name\" nzLabel=\"Name\"></nz-option>\n                </nz-select>\n            </div>\n            <div class=\"d-flex\">\n                <nz-input-group [nzPrefix]=\"prefiXTemplate\">\n                    <input nz-input placeholder=\"Search\" nzSize=\"small\">\n                </nz-input-group>\n                <ng-template #prefiXTemplate>\n                    <i nz-icon nzType=\"search\" theme=\"outline\"></i>\n                </ng-template>\n                <div class=\"m-l-10\">\n                    <button nz-button nzType=\"default\" nz-tooltip nzTooltipTitle=\"Refresh\" nzTooltipPlacement=\"bottom\">\n                        <i nz-icon nzType=\"reload\" theme=\"outline\"></i>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div>\n            <div class=\"mail-list\" *ngFor=\"let item of mails\">\n                <label class=\"m-r-15\" nz-checkbox [(ngModel)]=\"item.checked\" (ngModelChange)=\"updateSingleChecked()\"></label>\n                <table class=\"list-info\" (click)=\"openMail(item.name)\">\n                    <tr>\n                        <td class=\"list-sender\">\n                            <div class=\"media align-items-center\">\n                                <nz-avatar nzIcon=\"user\" [nzSrc]=\"item.avatar\" nzSize=\"small\"></nz-avatar>\n                                <h6 class=\"m-l-10 m-b-0\">{{item.name}}</h6>\n                            </div>\n                        </td>\n                        <td class=\"list-content\">\n                            <div class=\"list-msg\">\n                                <span class=\"list-title\">{{item.title}}</span>\n                                <span class=\"m-h-5 d-none d-lg-inline-block\"> - </span>\n                                <span class=\"list-text text-gray\">{{formatBody(item.content)}}</span>\n                            </div>\n                        </td>\n                        <td class=\"list-date\">\n                            <span>{{item.date}}</span>\n                        </td>\n                    </tr>\n                </table>\n            </div>\n        </div>\n        <div class=\"m-t-20 text-center text-md-right\">\n            <nz-pagination [nzPageIndex]=\"1\" [nzTotal]=\"50\"></nz-pagination>\n        </div>\n    </div>\n    <ng-container *ngFor=\"let item of mails\">\n        <div class=\"mail-content\" *ngIf=\"selectedMail == item.name\">\n            <div class=\"d-lg-flex align-items-center justify-content-between\">\n                <div class=\"media align-items-center m-b-15\">\n                    <a class=\"text-gray m-r-15 font-size-18\" (click)=\"closeMail()\">\n                        <i nz-icon nzType=\"left-circle\" theme=\"outline\"></i>\n                    </a>\n                    <nz-avatar nzIcon=\"user\" [nzSrc]=\"item.avatar\"></nz-avatar>\n                    <div class=\"m-l-10\">\n                        <h6 class=\"m-b-0\">{{item.name}}</h6>\n                        <span class=\"text-muted font-size-13\">To: {{item.to}}</span>\n                    </div>\n                </div>\n                <div class=\"d-flex align-items-center m-b-15 p-l-30\">\n                    <span class=\"text-gray m-r-15\">{{item.date}}</span>\n                    <a class=\"text-gray font-size-18 m-r-20\" nz-tooltip nzTooltipTitle=\"Reply\" nzTooltipPlacement=\"bottom\">\n                        <i class=\"fas fa-reply\"></i>\n                    </a>\n                    <a class=\"text-gray font-size-18 m-r-20\" nz-tooltip nzTooltipTitle=\"Star\" nzTooltipPlacement=\"bottom\">\n                        <i class=\"far fa-star\"></i>\n                    </a>\n                    <a class=\"text-gray font-size-18 m-r-20\" nz-tooltip nzTooltipTitle=\"Delete\" nzTooltipPlacement=\"bottom\">\n                        <i class=\"far fa-trash-alt\"></i>\n                    </a>\n                </div>\n            </div>\n            <div class=\"m-t-30 p-h-30\">\n                <h4>{{item.title}}</h4>\n                <div class=\"m-t-30\">\n                    <div [innerHTML]=\"item.content\"></div>\n                </div>\n                <div class=\"m-t-30\" *ngIf=\"item.attachment.length > 0\">\n                    <a class=\"file\" *ngFor=\"let item of item.attachment\" style=\"min-width: 200px\">\n                        <div class=\"media align-items-center\">\n                            <div class=\"m-r-15 font-size-30\">\n                                <i *ngIf=\"item.type == 'pdf'\" [twoToneColor]=\"colorRed\" nz-icon nzType=\"file-pdf\" theme=\"twotone\"></i>\n                                <i *ngIf=\"item.type == 'doc'\" [twoToneColor]=\"colorBlue\" nz-icon nzType=\"file-word\" theme=\"twotone\"></i>\n                                <i *ngIf=\"item.type == 'xls'\" [twoToneColor]=\"colorCyan\" nz-icon nzType=\"file-excel\" theme=\"twotone\"></i>\n                                <i *ngIf=\"item.type == 'ppt'\" [twoToneColor]=\"colorVolcano\" nz-icon nzType=\"file-ppt\" theme=\"twotone\"></i>\n                                <i *ngIf=\"item.type == 'image'\" [twoToneColor]=\"colorGold\" nz-icon nzType=\"picture\" theme=\"twotone\"></i>\n                            </div>\n                            <div>\n                                <h6 class=\"mb-0\">{{item.file}}</h6>\n                                <span class=\"font-size-13 text-muted\">{{item.size}}</span>\n                            </div>\n                        </div>\n                    </a>\n                </div>\n            </div>\n        </div>\n    </ng-container>\n    <div class=\"mail-content\" *ngIf=\"isCompose\">\n        <div class=\"p-b-15 m-r-15 d-md-none d-inline-block\">\n            <a class=\"text-dark font-size-18\" (click)=\"openNav()\">\n                <i nz-icon nzType=\"menu-unfold\" theme=\"outline\"></i>\n            </a>\n        </div>\n        <h5 class=\"m-b-20\">New Message</h5>\n        <form nz-form>\n            <nz-form-item>\n                <nz-form-control>\n                    <input nz-input placeholder=\"To:\">\n                </nz-form-control>\n            </nz-form-item>\n            <nz-form-item>\n                <nz-form-control>\n                    <input nz-input placeholder=\"Subject:\">\n                </nz-form-control>\n            </nz-form-item>        \n            <nz-form-item>\n                <quill-editor class=\"w-100\" [style]=\"{height: '150px'}\" [modules]=\"editorConfig\" placeholder=\"\"></quill-editor>\n            </nz-form-item>\n        </form>\n        <div class=\"text-right\">\n            <button class=\"m-r-10\" nz-button nzType=\"default\" (click)=\"closeMail()\">Discard</button>\n            <button nz-button nzType=\"primary\">Send</button>\n        </div>\n    </div>\n</div>","import { Component } from '@angular/core';\nimport { AppsService } from '../../shared/services/apps.service';\nimport { ThemeConstantService } from '../../shared/services/theme-constant.service';\nimport { Mail } from '../../shared/interfaces/mail.type';\n\n@Component({\n    templateUrl: './mail.component.html'\n})\n\nexport class MailComponent  {\n\n    mails : Mail[];\n    allChecked:boolean = false;\n    indeterminate:boolean = false;\n    isMailListOpen: boolean = true; \n    isNavOpen: boolean = false;\n    isCompose: boolean = false;\n    selectedMail: string = \"\";\n    themeColors = this.colorConfig.get().colors;\n    filter;\n\n    colorRed = this.themeColors.red;\n    colorBlue = this.themeColors.blue;\n    colorCyan = this.themeColors.cyan;\n    colorGold = this.themeColors.gold;\n    colorVolcano = this.themeColors.volcano;\n\n    constructor (private mailSvc: AppsService, private colorConfig : ThemeConstantService) {}\n\n    ngOnInit(): void {\n        this.mailSvc.getMailJson().subscribe(data => {\n            this.mails = data;\n        })\n    }\n\n    updateAllChecked(): void {\n        this.indeterminate = false;\n        if (this.allChecked) {\n            this.mails.forEach(item => item.checked = true);\n        } else {\n            this.mails.forEach(item => item.checked = false);\n        }\n    }\n\n    updateSingleChecked(): void {\n        if (this.mails.every(item => item.checked === false)) {\n            this.allChecked = false;\n            this.indeterminate = false;\n        } else if (this.mails.every(item => item.checked === true)) {\n            this.allChecked = true;\n            this.indeterminate = false;\n        } else {\n            this.indeterminate = true;\n        }\n    }\n\n    formatBody = function(body:string) {\n        return body.replace(/<(?:.|\\n)*?>/gm, ' ');\n    }\n\n    openMail(mail: string) {\n        this.selectedMail = mail;\n        this.isMailListOpen = false;\n    }\n\n    closeMail() {\n        this.selectedMail = '';\n        this.isMailListOpen = true;\n        this.isCompose = false;\n    }\n\n    openNav() {\n        this.isNavOpen = !this.isNavOpen;\n    }\n\n    compose() {\n        this.selectedMail = '';\n        this.isMailListOpen = false;\n        this.isCompose = true;\n    }\n\n    editorConfig = {\n        toolbar: [\n            ['bold', 'italic', 'underline', 'strike'],        \n            ['blockquote', 'code-block'],\n            [{ 'header': 1 }, { 'header': 2 }],               \n            [{ 'list': 'ordered'}, { 'list': 'bullet' }],\n            [{ 'size': ['small', false, 'large', 'huge'] }],  \n            [{ 'align': [] }],\n            ['link', 'image']                        \n        ]\n    };\n}","<div class=\"container-fluid\">\n    <div class=\"row\">\n        <div class=\"col-md-8\">\n            <nz-card>\n                <div class=\"d-flex justify-content-between\">\n                    <div class=\"media align-items-center\">\n                        <nz-avatar nzShape=\"square\" nzSrc=\"assets/images/others/thumb-3.jpg\"></nz-avatar>\n                        <div class=\"m-l-10\">\n                            <h4 class=\"m-b-0\">Eastern Sack</h4>\n                        </div>\n                    </div>\n                    <div>\n                        <nz-tag class=\"m-b-0\" [nzColor]=\"'blue'\">In Progress</nz-tag>\n                    </div>\n                </div>\n                <div class=\"m-t-40\">\n                    <h6>Description:</h6>\n                    <p>I've made a huge tiny mistake. Don't worry, these young beauties have been nowhere near the bananas. You don't want a hungry dove down your pants. Caw ca caw, caw ca caw, caw ca caw, caw ca caw. I'm in Vegas this week and would like to point out the Blue Man Group is *actually* hiring. The support group? Oh, like when they say \"poofter\" to mean \"tourist\", yes.</p>\n                    <p>Ah, it is a rock, though. Should beat everything. Gob: There's not a lot of logic to it. Let's make Ann the backup, okay? Very good way to think about her, as a backup.</p>\n                </div>\n                <div class=\"d-md-flex m-t-30 align-items-center justify-content-between\">\n                    <div class=\"d-flex align-items-center m-t-10\">\n                        <span class=\"text-dark font-weight-semibold m-r-10 m-b-5\">Team: </span>\n                        <a class=\"m-r-5 m-b-5\" *ngFor=\"let item of memberList\">\n                            <nz-avatar [nzSize]=\"30\" [nzSrc]=\"item.avatar\" nz-tooltip [nzTooltipTitle]=\"item.name\"></nz-avatar>\n                        </a>\n                    </div>\n                    <div class=\"m-t-10\">\n                        <span class=\"font-weight-semibold m-r-10 m-b-5 text-dark\">Due Date: </span>\n                        <span>10 Feb 2019</span>\n                    </div>\n                </div>\n                <div class=\"off-gutter-x m-t-30\">\n                    <nz-tabset>\n                        <nz-tab nzTitle=\"Tasks (8)\">\n                            <div class=\"p-h-30 p-v-25\">\n                                <div class=\"m-b-25\" *ngFor=\"let item of taskList\">\n                                    <label class=\"d-flex align-items-center\" nz-checkbox [(ngModel)]=\"item.checked\">\n                                        <p class=\"m-b-0 d-inline-block\">{{item.task}} </p>\n                                    </label>\n                                </div>\n                            </div>\n                        </nz-tab>\n                        <nz-tab nzTitle=\"Comments\">\n                            <div class=\"p-h-30 p-v-25\">\n                                <nz-list [nzDataSource]=\"commentList\" [nzRenderItem]=\"review\" [nzItemLayout]=\"'vertical'\" [nzPagination]=\"pagination\">\n                                    <ng-template #review let-item>\n                                        <nz-list-item class=\"d-block\" [nzContent]=\"item.review\">\n                                            <nz-list-item-meta\n                                                [nzTitle]=\"reviewTitle\"\n                                                [nzAvatar]=\"item.img\"\n                                                [nzDescription]=\"item.date\">\n                                                <ng-template #reviewTitle>\n                                                    <a class=\"font-size-15\" href=\"\">{{item.name}}</a>\n                                                </ng-template>\n                                            </nz-list-item-meta>\n                                        </nz-list-item>\n                                    </ng-template>\n                                    <ng-template #pagination>\n                                        <nz-pagination [nzPageIndex]=\"1\" [nzTotal]=\"50\"></nz-pagination>\n                                    </ng-template>\n                                </nz-list>\n                            </div>\n                        </nz-tab>\n                        <nz-tab nzTitle=\"Attachment\">\n                            <div class=\"p-h-30 p-v-25\">\n                                <a class=\"file p-15\" *ngFor=\"let item of fileList\" style=\"min-width: 200px\">\n                                    <div class=\"d-flex align-items-center justify-content-between\">\n                                        <div class=\"media\">\n                                            <nz-avatar *ngIf=\"item.type == 'zip'\" nzShape=\"square\" nzIcon=\"file-exclamation\" class=\"ant-avatar-cyan font-size-20\"></nz-avatar>\n                                            <nz-avatar *ngIf=\"item.type == 'doc'\" nzShape=\"square\" nzIcon=\"file-word\" class=\"ant-avatar-blue font-size-20\"></nz-avatar>\n                                            <nz-avatar *ngIf=\"item.type == 'image'\" nzShape=\"square\" nzIcon=\"picture\" class=\"ant-avatar-gold font-size-20\"></nz-avatar>\n                                            <div class=\"m-l-10\">\n                                                <h6 class=\"m-b-0\">{{item.name}}</h6>\n                                                <span class=\"text-muted font-size-13\">{{item.size}}</span>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </a>\n                            </div>\n                        </nz-tab>\n                    </nz-tabset>\n                </div>\n            </nz-card>\n        </div>\n        <div class=\"col-md-4\">\n            <nz-card nzTitle=\"Activities\">\n                <nz-timeline>\n                    <nz-timeline-item *ngFor=\"let item of activityList\" [nzDot]=\"dotTemplate\">\n                        <div class=\"m-l-20\">\n                            <div class=\"media align-items-center\">\n                                <nz-avatar [nzSrc]=\"item.avatar\"></nz-avatar>\n                                <div class=\"m-l-10\">\n                                    <h6 class=\"m-b-0\">{{item.name}}</h6>\n                                    <span class=\"text-muted font-size-13\">\n                                        <i nz-icon nzType=\"clock-circle\" theme=\"outline\"></i>\n                                        <span class=\"m-l-5\">{{item.date}}</span>\n                                    </span>\n                                </div>\n                            </div>\n                            <div class=\"m-t-20\">\n                                <p class=\"m-l-20\">\n                                    <span class=\"text-dark font-weight-semibold\">{{item.action}} </span> \n                                    <span class=\"m-l-5\"> {{item.target}}</span>\n                                </p>\n                            </div>\n                        </div>\n                        <ng-template #dotTemplate>\n                            <nz-avatar *ngIf=\"item.actionType == 'completed'\" [nzSize]=\"25\" class=\"ant-avatar-cyan\" nzIcon=\"check\"></nz-avatar>\n                            <nz-avatar *ngIf=\"item.actionType == 'upload'\" [nzSize]=\"25\" class=\"ant-avatar-blue\" nzIcon=\"link\"></nz-avatar>\n                            <nz-avatar *ngIf=\"item.actionType == 'comment'\" [nzSize]=\"25\" class=\"ant-avatar-purple\" nzIcon=\"message\"></nz-avatar>\n                            <nz-avatar *ngIf=\"item.actionType == 'removed'\" [nzSize]=\"25\" class=\"ant-avatar-red\" nzIcon=\"delete\"></nz-avatar>\n                            <nz-avatar *ngIf=\"item.actionType == 'created'\" [nzSize]=\"25\" class=\"ant-avatar-gold\" nzIcon=\"file-add\"></nz-avatar>\n                        </ng-template>\n                    </nz-timeline-item>\n                </nz-timeline>\n            </nz-card>\n        </div>\n    </div>\n</div>","import { Component } from '@angular/core';\n\n@Component({\n    templateUrl: './project-details.component.html',\n    styles: [`\n        :host ::ng-deep .ant-tabs-nav-wrap {\n           padding: 0px 25px;\n        }\n\n        :host ::ng-deep .ant-timeline-item-head-custom {\n            margin-top: 10px;\n        }\n    `]\n})\n\nexport class ProjectDetailsComponent  {\n\n    checked: boolean = false; \n\n    memberList = [\n        {\n            name: 'Erin Gonzales',\n            avatar: 'assets/images/avatars/thumb-1.jpg'\n        },\n        {\n            name: 'Darryl Day',\n            avatar: 'assets/images/avatars/thumb-2.jpg'\n        },\n        {\n            name: 'Marshall Nichols',\n            avatar: 'assets/images/avatars/thumb-3.jpg'\n        },\n        {\n            name: 'Virgil Gonzales',\n            avatar: 'assets/images/avatars/thumb-4.jpg'\n        },\n        {\n            name: 'Riley Newman',\n            avatar: 'assets/images/avatars/thumb-6.jpg'\n        },\n        {\n            name: 'Pamela Wanda',\n            avatar: 'assets/images/avatars/thumb-7.jpg'\n        }\n    ]\n\n    taskList = [\n        {\n            task: \"Irish skinny, grinder affogato\",\n            checked: false\n        },\n        {\n            task: \"Let us wax poetic about the beauty of the cheeseburger.\",\n            checked: false\n        },\n        {\n            task: \"I'm gonna build me an airport\",\n            checked: false\n        },\n        {\n            task: \"Efficiently unleash cross-media information\",\n            checked: true\n        },\n        {\n            task: \"Here's the story of a man named Brady\",\n            checked: true\n        },\n        {\n            task: \"Bugger bag egg's old boy willy jolly\",\n            checked: true\n        },\n        {\n            task: \"Hand-crafted exclusive finest tote bag Ettinger\",\n            checked: true\n        },\n        {\n            task: \"I'll be sure to note that in my log\",\n            checked: true\n        }\n    ]\n\n    fileList = [\n        {\n            name: \"Mockup.zip\",\n            size: \"7 MB\",\n            type: \"zip\"        \n        },\n        {\n            name: \"Guideline.doc\",\n            size: \"128 KB\",\n            type: \"doc\"        \n        },\n        {\n            name: \"Logo.png\",\n            size: \"128 KB\",\n            type: \"image\"        \n        }\n    ];\n\n    activityList = [\n        {\n            name: \"Virgil Gonzales\",\n            avatar: \"assets/images/avatars/thumb-4.jpg\",\n            date: \"10:44 PM\",\n            action: \"Complete task\",\n            target: \"Prototype Design\",\n            actionType: \"completed\"\n        },\n        {\n            name: \"Lilian Stone\",\n            avatar: \"assets/images/avatars/thumb-8.jpg\",\n            date: \"8:34 PM\",\n            action: \"Attached file\",\n            target: \"Mockup Zip\",\n            actionType: \"upload\"\n        },\n        {\n            name: \"Erin Gonzales\",\n            avatar: \"assets/images/avatars/thumb-1.jpg\",\n            date: \"8:34 PM\",\n            action: \"Commented\",\n            target: \"'This is not our work!'\",\n            actionType: \"comment\"\n        },\n        {\n            name: \"Riley Newman\",\n            avatar: \"assets/images/avatars/thumb-6.jpg\",\n            date: \"8:34 PM\",\n            action: \"Commented\",\n            target: \"'Hi, please done this before tommorow'\",\n            actionType: \"comment\"\n        },\n        {\n            name: \"Pamela Wanda\",\n            avatar: \"assets/images/avatars/thumb-7.jpg\",\n            date: \"8:34 PM\",\n            action: \"Removed\",\n            target: \"a file\",\n            actionType: \"removed\"\n        },\n        {\n            name: \"Marshall Nichols\",\n            avatar: \"assets/images/avatars/thumb-3.jpg\",\n            date: \"5:21 PM\",\n            action: \"Create\",\n            target: \"this project\",\n            actionType: \"created\"\n        }\n    ]\n\n    commentList = [\n        {\n            name: 'Lillian Stone',\n            img: 'assets/images/avatars/thumb-8.jpg',\n            date: '28th Jul 2018',\n            review: 'The palatable sensation we lovingly refer to as The Cheeseburger has a distinguished and illustrious history. It was born from humble roots, only to rise to well-seasoned greatness.'\n        },\n        {\n            name: 'Victor Terry',\n            img: 'assets/images/avatars/thumb-9.jpg',\n            date: '28th Jul 2018',\n            review: 'The palatable sensation we lovingly refer to as The Cheeseburger has a distinguished and illustrious history. It was born from humble roots, only to rise to well-seasoned greatness.'\n        },\n        {\n            name: 'Wilma Young',\n            img: 'assets/images/avatars/thumb-10.jpg',\n            date: '28th Jul 2018',\n            review: 'The palatable sensation we lovingly refer to as The Cheeseburger has a distinguished and illustrious history. It was born from humble roots, only to rise to well-seasoned greatness.'\n        }\n    ]\n}","<div class=\"page-header\">\n    <div class=\"row align-items-md-center\">\n        <div class=\"col-md-6\">\n            <div class=\"row\">\n                <div class=\"col-md-5\">\n                    <nz-input-group [nzPrefix]=\"searchPrefix\">\n                        <input type=\"text\" nz-input placeholder=\"Search Project\" [(ngModel)]=\"searchInput\" (ngModelChange)=\"search()\">\n                    </nz-input-group>\n                    <ng-template #searchPrefix>\n                        <i class=\"opacity-04\" nz-icon nzType=\"search\"></i>\n                    </ng-template>\n                </div>\n            </div>\n        </div>\n        <div class=\"col-md-6\">\n            <div class=\"text-md-right m-v-10\">\n                <nz-radio-group class=\"m-r-10\" [(ngModel)]=\"view\">\n                    <label nz-radio-button nzValue=\"cardView\" nzTooltipTitle=\"Card View\" nzTooltipPlacement=\"bottom\" nz-tooltip>\n                        <i class=\"font-size-16\" nz-icon nzType=\"appstore\" theme=\"outline\"></i>\n                    </label>\n                    <label nz-radio-button nzValue=\"listView\" nzTooltipTitle=\"List View\" nzTooltipPlacement=\"bottom\" nz-tooltip>\n                        <i class=\"font-size-16\" nz-icon nzType=\"ordered-list\" theme=\"outline\"></i>\n                    </label>\n                </nz-radio-group> \n                <button nz-button nzType=\"primary\" (click)=\"showNewProject(newProjectContent)\">\n                    <i nz-icon nzType=\"plus\"></i>\n                    <span>New Project</span>\n                </button>  \n                <ng-template #newProjectContent>\n                    <form nz-form nzLayout=\"vertical\">\n                        <nz-form-item>\n                            <nz-form-label>Project</nz-form-label>\n                            <nz-form-control >\n                                <input type=\"text\" nz-input placeholder=\"Please input project name\">\n                            </nz-form-control>\n                        </nz-form-item>\n                        <nz-form-item>\n                            <nz-form-label>Description</nz-form-label>\n                            <nz-form-control >\n                                <textarea nz-input></textarea>\n                            </nz-form-control>\n                        </nz-form-item>\n                        <div class=\"row\">\n                            <div class=\"col-md-6\">\n                                <nz-form-item>\n                                    <nz-form-label>Label</nz-form-label>\n                                    <nz-form-control >\n                                        <nz-form-control >\n                                            <nz-select class=\"w-100\" nzMode=\"multiple\" nzPlaceHolder=\"Select Label\" >\n                                                <nz-option nzLabel=\"Web\" nzValue=\"web\"></nz-option>\n                                                <nz-option nzLabel=\"Mobile App\" nzValue=\"mobile app\"></nz-option>\n                                                <nz-option nzLabel=\"Design\" nzValue=\"design\"></nz-option>\n                                                <nz-option nzLabel=\"Web App\" nzValue=\"web app\"></nz-option>\n                                            </nz-select>\n                                        </nz-form-control>\n                                    </nz-form-control>\n                                </nz-form-item>\n                            </div>\n                            <div class=\"col-md-6\">\n                                <nz-form-item>\n                                    <nz-form-label>Member</nz-form-label>\n                                    <nz-form-control >\n                                        <nz-select class=\"w-100\" nzMode=\"multiple\" nzShowSearch nzAllowClear nzPlaceHolder=\"Select Member\">\n                                            <nz-option class=\"d-flex align-items-center\" nzCustomContent nzLabel=\"Erin Gonzales\" nzValue=\"erin gonzales\">\n                                                <nz-avatar nzIcon=\"user\" [nzSize]=\"25\" nzSrc=\"assets/images/avatars/thumb-1.jpg\"></nz-avatar>\n                                                <span class=\"m-l-10\">Erin Gonzales</span>\n                                            </nz-option>\n                                            <nz-option class=\"d-flex align-items-center\" nzCustomContent nzLabel=\"Darryl Day\" nzValue=\"darryl day\">\n                                                <nz-avatar nzIcon=\"user\" [nzSize]=\"25\" nzSrc=\"assets/images/avatars/thumb-2.jpg\"></nz-avatar>\n                                                <span class=\"m-l-10\">Darryl Day</span>\n                                            </nz-option>\n                                            <nz-option class=\"d-flex align-items-center\" nzCustomContent nzLabel=\"Marshall Nichols\" nzValue=\"marshall nichols\">\n                                                <nz-avatar nzIcon=\"user\" [nzSize]=\"25\" nzSrc=\"assets/images/avatars/thumb-3.jpg\"></nz-avatar>\n                                                <span class=\"m-l-10\">Marshall Nichols</span>\n                                            </nz-option>\n                                            <nz-option class=\"d-flex align-items-center\" nzCustomContent nzLabel=\"Virgil Gonzales\" nzValue=\"virgil gonzales\">\n                                                <nz-avatar nzIcon=\"user\" [nzSize]=\"25\" nzSrc=\"assets/images/avatars/thumb-4.jpg\"></nz-avatar>\n                                                <span class=\"m-l-10\">Virgil Gonzales</span>\n                                            </nz-option>\n                                        </nz-select>\n                                    </nz-form-control>\n                                </nz-form-item>\n                            </div>\n                        </div>\n                        <nz-form-item>\n                            <nz-form-label>Due Date</nz-form-label>\n                            <nz-form-control >\n                                <nz-date-picker class=\"w-100\" nzShowTime></nz-date-picker>\n                            </nz-form-control>\n                        </nz-form-item>\n                    </form>\n                </ng-template>\n            </div>\n        </div>\n    </div>\n</div>\n<div class=\"container-fluid\">\n    <div class=\"row\" *ngIf=\"view == 'cardView'\">\n        <div class=\"col-md-3\" *ngFor=\"let item of projectList\">\n            <nz-card>\n                <div class=\"d-flex justify-content-between\">\n                    <div class=\"media\">\n                        <nz-avatar [nzSize]=\"40\" nzShape=\"square\" [nzSrc]=\"item.avatar\"></nz-avatar>\n                        <div class=\"m-l-10\">\n                            <h5 class=\"m-b-0\">{{item.project}}</h5>\n                            <span class=\"text-muted font-size-13\">{{item.tasks}} Tasks</span>\n                        </div>\n                    </div>\n                    <div>\n                        <a class=\"text-gray font-size-18\" nz-dropdown nzTooltipPlacement=\"bottomRight\" nzTrigger=\"click\" [nzDropdownMenu]=\"projectListSetting\">\n                            <i nz-icon nzType=\"ellipsis\" theme=\"outline\"></i>\n                        </a>\n                        <nz-dropdown-menu #projectListSetting=\"nzDropdownMenu\">\n                            <ul nz-menu nzSelectable>\n                                <li nz-menu-item>\n                                    <a [routerLink]=\"['/apps/projects/project-details']\">\n                                        <i nz-icon nzType=\"eye\" theme=\"outline\"></i>\n                                        <span class=\"m-l-10\">View</span>\n                                    </a>\n                                </li>\n                                <li nz-menu-item>\n                                    <a>\n                                        <i nz-icon nzType=\"edit\" theme=\"outline\"></i>\n                                        <span class=\"m-l-10\">Edit</span>\n                                    </a>\n                                </li>\n                                <li nz-menu-divider></li>\n                                <li nz-menu-item>\n                                    <a>\n                                        <i nz-icon nzType=\"delete\" theme=\"outline\"></i>\n                                        <span class=\"m-l-10\">Delete</span>\n                                    </a>\n                                </li>\n                            </ul>\n                        </nz-dropdown-menu>\n                    </div>\n                </div>\n                <p class=\"m-t-25\">{{item.desc}}</p>\n                <div class=\"m-t-30\">\n                    <div class=\"d-flex justify-content-between\">\n                        <span class=\"font-weight-semibold\">Progress</span>\n                        <span class=\"font-weight-semibold\">{{item.progress}}%</span>\n                    </div>\n                    <nz-progress *ngIf=\"item.status !== 'Behind'\" [nzPercent]=\"item.progress\" [nzShowInfo]=\"false\" nzSize=\"small\"></nz-progress>\n                    <nz-progress *ngIf=\"item.status == 'Behind'\" [nzPercent]=\"item.progress\" [nzShowInfo]=\"false\" nzSize=\"small\" nzStatus=\"exception\"></nz-progress>\n                </div>\n                <div class=\"m-t-20\">\n                    <div class=\"d-flex justify-content-between align-items-center\">\n                        <div>\n                            <nz-tag class=\"m-b-0\" *ngIf=\"item.status == 'In Progress'\" [nzColor]=\"'blue'\">{{item.status}}</nz-tag>\n                            <nz-tag class=\"m-b-0\" *ngIf=\"item.status == 'Ready'\" [nzColor]=\"'cyan'\">{{item.status}}</nz-tag>\n                            <nz-tag class=\"m-b-0\" *ngIf=\"item.status == 'Behind'\" [nzColor]=\"'red'\">{{item.status}}</nz-tag>\n                        </div>\n                        <div>\n                            <a routerLinkActive=\"router-link-active\"  class=\"m-r-5\" *ngFor=\"let item of (item.member ? item.member.slice(0,2): [])\">\n                                <nz-avatar  nzSize=\"small\" [nzSrc]=\"item.avatar\" nz-tooltip [nzTooltipTitle]=\"item.name\"></nz-avatar>\n                            </a>\n                            <a *ngIf=\"item.member.length > 2\">\n                                <nz-avatar class=\"font-size-11 text-dark\" nzSize=\"small\" [nzText]=\"'+' + [item.member.length - 2].toString()\" nz-tooltip [nzTooltipTitle]=\"[item.member.length - 2].toString() + ' More'\"></nz-avatar>\n                            </a>\n                        </div>\n                    </div>\n                </div>\n            </nz-card>\n        </div>\n    </div>    \n    <nz-card *ngIf=\"view == 'listView'\">\n        <nz-table #listViewTable [nzData]=\"projectList\">\n            <thead>\n                <tr>\n                    <th>Project</th>\n                    <th>Tasks</th>\n                    <th>Members</th>\n                    <th>Progress</th>\n                    <th class=\"text-center\">Status</th>\n                    <th></th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr *ngFor=\"let item of listViewTable.data\">\n                    <td>\n                        <div class=\"media align-items-center\">\n                            <nz-avatar nzShape=\"square\" [nzSrc]=\"item.avatar\"></nz-avatar>\n                            <div class=\"m-l-10\">\n                                <h5 class=\"m-b-0\">{{item.project}}</h5>\n                            </div>\n                        </div>\n                    </td>\n                    <td>{{item.tasks}} Tasks</td>\n                    <td>\n                        <a routerLinkActive=\"router-link-active\"  class=\"m-r-5\" *ngFor=\"let item of (item.member ? item.member.slice(0,2): [])\">\n                            <nz-avatar  nzSize=\"small\" [nzSrc]=\"item.avatar\" nz-tooltip [nzTooltipTitle]=\"item.name\"></nz-avatar>\n                        </a>\n                        <a *ngIf=\"item.member.length > 2\">\n                            <nz-avatar class=\"font-size-11 text-dark\" nzSize=\"small\" [nzText]=\"'+' + [item.member.length - 2].toString()\" nz-tooltip [nzTooltipTitle]=\"[item.member.length - 2].toString() + ' More'\"></nz-avatar>\n                        </a>\n                    </td>\n                    <td>\n                        <nz-progress *ngIf=\"item.status !== 'Behind'\" [nzPercent]=\"item.progress\" nzSize=\"small\"></nz-progress>\n                        <nz-progress *ngIf=\"item.status == 'Behind'\" [nzPercent]=\"item.progress\" nzSize=\"small\" nzStatus=\"exception\"></nz-progress>\n                    </td>\n                    <td class=\"text-center\">\n                        <nz-tag class=\"m-b-0\" *ngIf=\"item.status == 'In Progress'\" [nzColor]=\"'blue'\">{{item.status}}</nz-tag>\n                        <nz-tag class=\"m-b-0\" *ngIf=\"item.status == 'Ready'\" [nzColor]=\"'cyan'\">{{item.status}}</nz-tag>\n                        <nz-tag class=\"m-b-0\" *ngIf=\"item.status == 'Behind'\" [nzColor]=\"'red'\">{{item.status}}</nz-tag>\n                    </td>\n                    <td class=\"text-right\">\n                        <div>\n                            <a class=\"text-gray font-size-18\" nz-dropdown nzPlacement=\"bottomRight\" nzTrigger=\"click\" [nzDropdownMenu]=\"projectListSetting2\">\n                                    <i nz-icon nzType=\"ellipsis\" theme=\"outline\"></i>\n                                </a>\n                                <nz-dropdown-menu #projectListSetting2=\"nzDropdownMenu\">\n                                    <ul nz-menu nzSelectable>\n                                        <li nz-menu-item>\n                                            <a [routerLink]=\"['/apps/projects/project-details']\">\n                                                <i nz-icon nzType=\"eye\" theme=\"outline\"></i>\n                                                <span class=\"m-l-10\">View</span>\n                                            </a>\n                                        </li>\n                                        <li nz-menu-item>\n                                            <a>\n                                                <i nz-icon nzType=\"edit\" theme=\"outline\"></i>\n                                                <span class=\"m-l-10\">Edit</span>\n                                            </a>\n                                        </li>\n                                        <li nz-menu-divider></li>\n                                        <li nz-menu-item>\n                                            <a>\n                                                <i nz-icon nzType=\"delete\" theme=\"outline\"></i>\n                                                <span class=\"m-l-10\">Delete</span>\n                                            </a>\n                                        </li>\n                                    </ul>\n                                </nz-dropdown-menu>\n                        </div>\n                    </td>\n                </tr>\n            </tbody>\n        </nz-table>\n    </nz-card>\n</div>","import { Component, TemplateRef } from '@angular/core';\nimport { AppsService } from '../../../shared/services/apps.service';\nimport { NzModalService } from 'ng-zorro-antd/modal';\nimport { ProjectList } from '../../../shared/interfaces/project-list.type';\nimport { TableService } from '../../../shared/services/table.service';\n\n@Component({\n    templateUrl: './project-list.component.html'\n})\n\nexport class ProjectListComponent  {\n\n    view: string = 'cardView';\n    newProject: boolean = false;\n    projectListRaw: ProjectList[];\n    projectList: ProjectList[];\n    searchInput: string;\n\n    constructor (private projectListSvc: AppsService, private modalService: NzModalService, private tablesvc : TableService) {}\n\n    ngOnInit(): void {\n        this.projectListSvc.getProjectListJson().subscribe(data => {\n            this.projectListRaw = data;\n            this.projectList = data;\n        })\n    }\n\n    search() {\n        const data = this.projectListRaw\n        this.projectList = this.tablesvc.search(this.searchInput, data )\n    }\n\n    showNewProject(newProjectContent: TemplateRef<{}>) {\n        const modal = this.modalService.create({\n            nzTitle: 'Create New Project',\n            nzContent: newProjectContent,\n            nzFooter: [\n                {\n                    label: 'Create Project',\n                    type: 'primary',\n                    onClick: () => this.modalService.confirm(\n                        { \n                            nzTitle: 'Are you sure you want to create this project?',\n                            nzOnOk: () => this.modalService.closeAll()\n                        }\n                    )\n                },\n            ],\n            nzWidth: 800\n        })    \n    }\n\n}","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Chat } from '../interfaces/chat.type';\nimport { Files } from '../interfaces/file-manager.type';\nimport { Mail } from '../interfaces/mail.type';\nimport { ProjectList } from '../interfaces/project-list.type';\n\n@Injectable()\nexport class AppsService {\n    constructor(private http: HttpClient) {}\n\n    public getChatJSON(): Observable<Chat[]> {\n        return this.http.get<Chat[]>(\"./assets/data/apps/chat-data.json\")\n    }\n\n    public getFileManagerJson(): Observable<Files[]> {\n        return this.http.get<Files[]>(\"./assets/data/apps/file-manager-data.json\")\n    }\n\n    public getMailJson(): Observable<Mail[]> {\n        return this.http.get<Mail[]>(\"./assets/data/apps/mail-data.json\")\n    }\n\n    public getProjectListJson(): Observable<ProjectList[]> {\n        return this.http.get<ProjectList[]>(\"./assets/data/apps/project-list-data.json\")\n    }\n}","import { Injectable } from '@angular/core';\nimport { formatDate } from '@angular/common';\n\n@Injectable()\nexport class TableService {\n\n    deepCopy(object: any | any[]) {\n        return JSON.parse(JSON.stringify(object));\n    }\n    \n    /**\n     * sort array via single\n     * @param sortAttribute {key: property of the object, value: 'ascend' or 'descend'}\n     * @param inputData\n     */\n    sort(sortAttribute: { key: string, value: string }, inputData: any[]) {\n        const dataArr = this.deepCopy(inputData);\n        if (sortAttribute.key === '' || sortAttribute.value === null) {\n            return dataArr;\n        }\n\n        let outputDataList = dataArr.sort((a, b) => {\n            const isAsc = sortAttribute.value === 'ascend';\n            switch (sortAttribute.key) {\n                case sortAttribute.key:\n                    return this.compare(\n                        typeof a[sortAttribute.key] !== \"string\" ? a[sortAttribute.key] : a[sortAttribute.key].toUpperCase(),\n                        typeof b[sortAttribute.key] !== \"string\" ? b[sortAttribute.key] : b[sortAttribute.key].toUpperCase(),isAsc\n                    );\n                default:\n                    return 0;\n            }\n        });\n        return outputDataList;\n    }\n\n    /**\n     * Wild card search on all property of the object\n     * @param input\n     * @param inputData\n     */\n    search(input: any, inputData: any[]) {\n        const searchText = (item) => {\n            for (let key in item) {\n                if (item[key] == null) {\n                    continue;\n                }\n\n                if (typeof item[key] == 'number' && item[key] != 0) {\n                    let date = formatDate(item[key], 'yyyy-MM-dd HH:mm:ss', 'en');\n                    if (date.indexOf(input.toString()) !== -1) {\n                        return true;\n                    }\n                    continue;\n                }\n\n                if (item[key].toString().toUpperCase().indexOf(input.toString().toUpperCase()) !== -1) {\n                    return true;\n                }\n            }\n        };\n        inputData = inputData.filter(value => searchText(value));\n        return inputData;\n    }\n\n    /**\n     * if isAsc is true\n     * a > b    = 1\n     * a === b  = 0\n     * a < b    = -1\n     *\n     * if isAsc is false\n     * a > b    = -1\n     * a === b  = 0\n     * a < b    = 1\n     *\n     * @param a\n     * @param b\n     * @param isAsc\n     */\n    private compare(a, b, isAsc: boolean) {\n        // null value is - (dash)\n        if (!a) a = '-';\n        if (!b) b = '-';\n\n        if (a === b) return 0;\n        \n        return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n    }\n}\n\n// Usage\n\n\n// import { Component } from '@angular/core';\n// import { NzTableService } from 'ifast-ui-ng-framework/publish';\n\n// @Component({\n//     selector: 'nz-demo-table-default-filter',\n//     template: `\n//         <div class=\"ant-quick-search\">\n//             <input nz-input placeholder=\"Search\" id=\"searchText\" (input)=\"search()\">\n//         </div>\n//         <nz-table #instantFilterTable [nzData]=\"displayData\">\n//             <thead (nzSortChange)=\"sort($event)\" nzSingleSort>\n//                 <tr>\n//                     <th nzShowSort nzSortKey=\"name\">Name</th>\n//                     <th nzShowSort nzSortKey=\"age\">Age</th>\n//                     <th nzShowSort nzSortKey=\"address\">Address</th>\n//                     <th>Action</th>\n//                 </tr>\n//             </thead>\n//             <tbody>\n//                 <tr *ngFor=\"let data of instantFilterTable.data \">\n//                     <td>{{data.name}}</td>\n//                     <td>{{data.age}}</td>\n//                     <td>{{data.address}}</td>\n//                     <td>\n//                         <a>Action 一 {{data.name}}</a>\n//                         <nz-divider nzType=\"vertical\"></nz-divider>\n//                         <a>Delete</a>\n//                     </td>\n//                 </tr>\n//             </tbody>\n//         </nz-table>\n//     `\n// })\n\n// export class NzDemoTableDefaultFilterComponent {\n\n//     displayData = []\n\n//     dataSet = [\n//         {\n//             key    : '1',\n//             name   : 'John Brown',\n//             age    : 32,\n//             address: 'New York No. 1 Lake Park'\n//         },\n//         {\n//             key    : '2',\n//             name   : 'Jim Green',\n//             age    : 42,\n//             address: 'London No. 1 Lake Park'\n//         },\n//         {\n//             key    : '3',\n//             name   : 'Joe Black',\n//             age    : 32,\n//             address: 'Sidney No. 1 Lake Park'\n//         }\n//     ];\n\n//     constructor(private tableService: NzTableService) {\n//         this.displayData = this.dataSet;\n//     }\n\n//     sort(sortAttribute) {\n//         this.displayData = this.tableService.sort(sortAttribute, this.dataSet);\n//     }\n\n//     search() {\n//         this.displayData = this.dataSet;\n//         this.displayData = this.tableService.search((<HTMLInputElement>document.getElementById(\"searchText\")).value, this.displayData);\n//     }\n// }"],"sourceRoot":"webpack:///"}